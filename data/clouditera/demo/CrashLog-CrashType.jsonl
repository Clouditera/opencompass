{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==2064==ERROR: AddressSanitizer: requested allocation size 0x1ad7f29abca (0x1ad7f29bbd0 after adjustments for alignment, red zones etc.) exceeds maximum supported size of 0x10000000000 (thread T0)\n    #0 0x7fc325539887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x5556a088b696 in hi_malloc /sourcecode/alloc.h:59\n    #2 0x5556a0894880 in sds_malloc /sourcecode/sds.c:1114\n    #3 0x5556a08897b4 in fuzzloop /dockerin/fuzz_drivers/tf1728369139883gumo.c:25\n    #4 0x5556a089d2d9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n\n==2064==HINT: if you don't care about these errors you may set allocator_may_return_null=1\nSUMMARY: AddressSanitizer: allocation-size-too-big ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145 in __interceptor_malloc\n崩溃类型是什么？", "A": "bad-free", "B": "out-of-memory", "C": "allocation-size-too-big", "D": "larger memory malloc", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==23494==ERROR: AddressSanitizer: requested allocation size 0x431bde82d790 (0x431bde82e790 after adjustments for alignment, red zones etc.) exceeds maximum supported size of 0x10000000000 (thread T0)\n    #0 0x7fa0dc167887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x7fa0db86efca in CRYPTO_malloc crypto/mem.c:202\n    #2 0x7fa0db86f07c in CRYPTO_zalloc crypto/mem.c:222\n    #3 0x5604c1c3c2b6 in ssl_cert_new ssl/ssl_cert.c:74\n    #4 0x5604c1c3b98f in fuzzloop /dockerin/fuzz_drivers/tf1730183726839udqm.c:47\n    #5 0x5604c1e44a69 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n\n==23494==HINT: if you don't care about these errors you may set allocator_may_return_null=1\nSUMMARY: AddressSanitizer: allocation-size-too-big ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145 in __interceptor_malloc\n崩溃类型是什么？", "A": "double-free", "B": "allocation-size-too-big", "C": "heap-use-after-free", "D": "bad-free", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n#0 0x7fcadf6d2f18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x564c8822f604 in leak_malloc_hook /home/clouditera/workdir-engine_c/betafuzz/checkers/leakcheck.c:80\n    #2 0x7fcadf6d8e02 in __sanitizer::RunMallocHooks(void const*, unsigned long) ../../../../src/libsanitizer/sanitizer_common/sanitizer_common.cpp:301\n    #3 0x7fcadf63e60b in __asan::Allocator::Allocate(unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType, bool) ../../../../src/libsanitizer/asan/asan_allocator.cpp:611\n    #4 0x7fcadf63a19a in __asan::asan_malloc(unsigned long, __sanitizer::BufferedStackTrace*) ../../../../src/libsanitizer/asan/asan_allocator.cpp:980\n    #5 0x7fcadf6c6861 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:146\n    #6 0x564c881e176e in real_malloc /sourcecode/src/stdlib/SDL_malloc.c:5196\n    #7 0x564c881e1d4b in SDL_malloc_REAL /sourcecode/src/stdlib/SDL_malloc.c:5295\n    #8 0x564c87adbd18 in SDL_SIMDAlloc_REAL /sourcecode/src/cpuinfo/SDL_cpuinfo.c:1169\n    #9 0x564c87dd94db in SDL_CreateRGBSurfaceWithFormat_REAL /sourcecode/src/video/SDL_surface.c:156\n    #10 0x564c87dd9b6e in SDL_CreateRGBSurface_REAL /sourcecode/src/video/SDL_surface.c:201\n    #11 0x564c88222f10 in SDL_CreateCursor_REAL /sourcecode/src/events/SDL_mouse.c:1295\n    #12 0x564c8797570a in SDL_CreateCursor_DEFAULT /sourcecode/src/dynapi/SDL_dynapi_procs.h:285\n    #13 0x564c87983463 in SDL_CreateCursor /sourcecode/src/dynapi/SDL_dynapi_procs.h:285\n    #14 0x564c87972a5d in fuzzloop /dockerin/fuzz_drivers/tf1728900799110xlrq.c:30\n    #15 0x564c8822e279 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #16 0x564c879727c8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #17 0x7fcadf412d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #18 0x7fcadf412e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #19 0x564c87972914 in _start (/dockerin/fuzz_drivers/tf1728900799110xlrq.out+0xc77914)\n崩溃类型是什么？", "A": "stack-buffer-overflow", "B": "allocation-size-too-big", "C": "stack-buffer-underflow", "D": "invalid-posix-memalign-alignment", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7faae3428f18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x559ce54d0e24 in leak_malloc_hook /home/clouditera/workdir-engine_c/betafuzz/checkers/leakcheck.c:80\n    #2 0x7faae342ee02 in __sanitizer::RunMallocHooks(void const*, unsigned long) ../../../../src/libsanitizer/sanitizer_common/sanitizer_common.cpp:301\n    #3 0x7faae339460b in __asan::Allocator::Allocate(unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType, bool) ../../../../src/libsanitizer/asan/asan_allocator.cpp:611\n    #4 0x7faae33901ff in __asan::Allocator::Calloc(unsigned long, unsigned long, __sanitizer::BufferedStackTrace*) ../../../../src/libsanitizer/asan/asan_allocator.cpp:748\n    #5 0x7faae33901ff in __asan::asan_calloc(unsigned long, unsigned long, __sanitizer::BufferedStackTrace*) ../../../../src/libsanitizer/asan/asan_allocator.cpp:984\n    #6 0x7faae341ca34 in __interceptor_calloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:155\n    #7 0x559ce54bf7b4 in poller_create /sourcecode/src/kernel/poller.c:1173\n    #8 0x559ce54b79f4 in fuzzloop /dockerin/fuzz_drivers/tf1729051211354ndhs.cpp:21\n    #9 0x559ce54cfa99 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #10 0x559ce54b7668 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #11 0x7faae2e2cd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #12 0x7faae2e2ce3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #13 0x559ce54b77b4 in _start (/dockerin/fuzz_drivers/tf1729051211354ndhs.out+0xf7b4)\n崩溃类型是什么？", "A": "out-of-memory", "B": "allocation-size-too-big", "C": "SIGABRT", "D": "memcpy-param-overlap", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==44771==ERROR: AddressSanitizer: requested allocation size 0x1ad7f29abea (0x1ad7f29bbf0 after adjustments for alignment, red zones etc.) exceeds maximum supported size of 0x10000000000 (thread T0)\n    #0 0x7f311aaf3887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55f3f41b601d in protocol::HttpMessage::append_output_body(void const*, unsigned long) /sourcecode/src/protocol/HttpMessage.cc:38\n    #2 0x55f3f418ee6d in fuzzloop /dockerin/fuzz_drivers/tf1729046934226msfb.cpp:30\n    #3 0x55f3f41c0e69 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n\n==44771==HINT: if you don't care about these errors you may set allocator_may_return_null=1\nSUMMARY: AddressSanitizer: allocation-size-too-big ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145 in __interceptor_malloc\n崩溃类型是什么？", "A": "stack-buffer-overflow", "B": "allocation-size-too-big", "C": "out-of-memory", "D": "calloc parameters overflow", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7f710cbb2f18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x55a6740b3364 in leak_malloc_hook /home/clouditera/workdir-engine_c/betafuzz/checkers/leakcheck.c:80\n    #2 0x7f710cbb8e02 in __sanitizer::RunMallocHooks(void const*, unsigned long) ../../../../src/libsanitizer/sanitizer_common/sanitizer_common.cpp:301\n    #3 0x7f710cb1e60b in __asan::Allocator::Allocate(unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType, bool) ../../../../src/libsanitizer/asan/asan_allocator.cpp:611\n    #4 0x7f710cb1a43c in __asan::asan_memalign(unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType) ../../../../src/libsanitizer/asan/asan_allocator.cpp:1039\n    #5 0x7f710cba81a3 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cpp:99\n    #6 0x55a6740a84a1 in __gnu_cxx::new_allocator<void*>::allocate(unsigned long, void const*) /usr/include/c++/11/ext/new_allocator.h:127\n    #7 0x55a6740a75d7 in std::allocator_traits<std::allocator<void*> >::allocate(std::allocator<void*>&, unsigned long) /usr/include/c++/11/bits/alloc_traits.h:464\n    #8 0x55a6740a7044 in std::_Vector_base<void*, std::allocator<void*> >::_M_allocate(unsigned long) /usr/include/c++/11/bits/stl_vector.h:346\n    #9 0x55a6740a6301 in std::vector<void*, std::allocator<void*> >::_M_default_append(unsigned long) /usr/include/c++/11/bits/vector.tcc:635\n    #10 0x55a6740a58b0 in std::vector<void*, std::allocator<void*> >::resize(unsigned long) /usr/include/c++/11/bits/stl_vector.h:940\n    #11 0x55a6740a521e in YAML::AnchorDict<void*>::Register(unsigned long, void*) /sourcecode/include/yaml-cpp/contrib/anchordict.h:28\n    #12 0x55a6740a4b77 in YAML::GraphBuilderAdapter::RegisterAnchor(unsigned long, void*) /sourcecode/src/contrib/graphbuilderadapter.cpp:72\n    #13 0x55a6740a4419 in YAML::GraphBuilderAdapter::OnScalar(YAML::Mark const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /sourcecode/src/contrib/graphbuilderadapter.cpp:26\n    #14 0x55a6740a0cb9 in fuzzloop /dockerin/fuzz_drivers/tf1729077324115bggr.cpp:39\n    #15 0x55a6740b1fd9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #16 0x55a6740a0688 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #17 0x7f710c5b6d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #18 0x7f710c5b6e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #19 0x55a6740a07d4 in _start (/dockerin/fuzz_drivers/tf1729077324115bggr.out+0x157d4)\n崩溃类型是什么？", "A": "SIGABRT", "B": "allocation-size-too-big", "C": "heap-buffer-overflow", "D": "stack-buffer-overflow", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==5169==ERROR: AddressSanitizer: requested allocation size 0x1ad7f29abdc (0x1ad7f29bbe0 after adjustments for alignment, red zones etc.) exceeds maximum supported size of 0x10000000000 (thread T0)\n    #0 0x7ff265778887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55f03a9a1693 in hi_malloc /sourcecode/alloc.h:59\n    #2 0x55f03a9a197c in sdsnewlen /sourcecode/sds.c:94\n    #3 0x55f03a99f7c9 in fuzzloop /dockerin/fuzz_drivers/tf1728369139915kaws.c:27\n    #4 0x55f03a9b32c9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n\n==5169==HINT: if you don't care about these errors you may set allocator_may_return_null=1\nSUMMARY: AddressSanitizer: allocation-size-too-big ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145 in __interceptor_malloc\n崩溃类型是什么？", "A": "allocation-size-too-big", "B": "heap-use-after-free", "C": "out-of-memory", "D": "bad-free", "answer": "A"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==3817==ERROR: AddressSanitizer: requested allocation size 0xfffffffff7540000 (0xfffffffff7541000 after adjustments for alignment, red zones etc.) exceeds maximum supported size of 0x10000000000 (thread T0)\n    #0 0x7f52cfec0357 in operator new[](unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cpp:102\n    #1 0x55ef22d86de0 in PreCalculatedPrimeTable::PreCalculatedPrimeTable(int) build/googletest-source/googletest/samples/prime_tables.h:81\n    #2 0x55ef22d88d8d in std::_MakeUniq<PreCalculatedPrimeTable>::__single_object std::make_unique<PreCalculatedPrimeTable, int&>(int&) /usr/include/c++/11/bits/unique_ptr.h:962\n    #3 0x55ef22d86794 in fuzzloop /dockerin/fuzz_drivers/tf1728877392019mjim.cpp:20\n    #4 0x55ef22d92359 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n\n==3817==HINT: if you don't care about these errors you may set allocator_may_return_null=1\nSUMMARY: AddressSanitizer: allocation-size-too-big ../../../../src/libsanitizer/asan/asan_new_delete.cpp:102 in operator new[](unsigned long)\n崩溃类型是什么？", "A": "out-of-memory", "B": "allocation-size-too-big", "C": "global-buffer-overflow", "D": "memcpy-param-overlap", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==657==ERROR: AddressSanitizer: requested allocation size 0x1ad7f29abca (0x1ad7f29bbd0 after adjustments for alignment, red zones etc.) exceeds maximum supported size of 0x10000000000 (thread T0)\n    #0 0x7fd9f922cc38 in __interceptor_realloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:164\n    #1 0x55e88eba4745 in hi_realloc /sourcecode/alloc.h:71\n    #2 0x55e88ebad8d3 in sds_realloc /sourcecode/sds.c:1115\n    #3 0x55e88eba27c9 in fuzzloop /dockerin/fuzz_drivers/tf1728369139884wjfk.c:27\n    #4 0x55e88ebb62e9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n\n==657==HINT: if you don't care about these errors you may set allocator_may_return_null=1\nSUMMARY: AddressSanitizer: allocation-size-too-big ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:164 in __interceptor_realloc\n崩溃类型是什么？", "A": "memcpy-param-overlap", "B": "out-of-memory", "C": "heap-buffer-overflow", "D": "allocation-size-too-big", "answer": "D"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==46344==ERROR: AddressSanitizer: requested allocation size 0x1ad7f29abe2 (0x1ad7f29bbe8 after adjustments for alignment, red zones etc.) exceeds maximum supported size of 0x10000000000 (thread T0)\n    #0 0x7fe3e402b887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55b2e8e69305 in real_malloc /sourcecode/src/stdlib/SDL_malloc.c:5196\n    #2 0x55b2e8e698e2 in SDL_malloc_REAL /sourcecode/src/stdlib/SDL_malloc.c:5295\n    #3 0x55b2e863fc28 in SDL_NewDataQueue /sourcecode/src/SDL_dataqueue.c:73\n    #4 0x55b2e863f8d9 in fuzzloop /dockerin/fuzz_drivers/tf1728900796625mxco.c:31\n    #5 0x55b2e8eb5e19 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n\n==46344==HINT: if you don't care about these errors you may set allocator_may_return_null=1\nSUMMARY: AddressSanitizer: allocation-size-too-big ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145 in __interceptor_malloc\n崩溃类型是什么？", "A": "stack-buffer-underflow", "B": "heap-buffer-overflow", "C": "double-free", "D": "allocation-size-too-big", "answer": "D"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==299==ERROR: AddressSanitizer: requested allocation size 0xffffffffffffffff (0x800 after adjustments for alignment, red zones etc.) exceeds maximum supported size of 0x10000000000 (thread T0)\n    #0 0x7f9030aaa357 in operator new[](unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cpp:102\n    #1 0x5640d825fbb5 in protocol::MySQLResultCursor::fetch_result_set(__mysql_result_set const*) /sourcecode/src/protocol/MySQLResult.cc:107\n    #2 0x5640d81fcaee in fuzzloop /sharedockerin/ta1729664330946apug/test_file.cpp:38\n    #3 0x5640d82a0f89 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n\n==299==HINT: if you don't care about these errors you may set allocator_may_return_null=1\nSUMMARY: AddressSanitizer: allocation-size-too-big ../../../../src/libsanitizer/asan/asan_new_delete.cpp:102 in operator new[](unsigned long)\n崩溃类型是什么？", "A": "allocation-size-too-big", "B": "calloc parameters overflow", "C": "out-of-memory", "D": "heap-buffer-overflow", "answer": "A"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==2046==ERROR: AddressSanitizer: requested allocation size 0x200000000000 (0x200000001000 after adjustments for alignment, red zones etc.) exceeds maximum supported size of 0x10000000000 (thread T0)\n    #0 0x7f136a654a57 in __interceptor_calloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:154\n    #1 0x5562dcd25f35 in ht_init /sourcecode/external/hash/hash_table_impl.h:74\n    #2 0x5562dcd25c58 in fb_value_set_init /sourcecode/src/compiler/hash_tables/value_set.c:26\n    #3 0x5562dcd1981c in fuzzloop /dockerin/fuzz_drivers/tf1728556408570rsjp.c:34\n    #4 0x5562dcd30499 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n\n==2046==HINT: if you don't care about these errors you may set allocator_may_return_null=1\nSUMMARY: AddressSanitizer: allocation-size-too-big ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:154 in __interceptor_calloc\n崩溃类型是什么？", "A": "allocation-size-too-big", "B": "calloc parameters overflow", "C": "stack-buffer-underflow", "D": "invalid-posix-memalign-alignment", "answer": "A"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==125679==ERROR: AddressSanitizer: requested allocation size 0x1ad7f29ac08 (0x1ad7f29bc08 after adjustments for alignment, red zones etc.) exceeds maximum supported size of 0x10000000000 (thread T0)\n    #0 0x7fb4407f8887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x562b9a9d62bc in real_malloc /sourcecode/src/stdlib/SDL_malloc.c:5196\n    #2 0x562b9a9d6899 in SDL_malloc_REAL /sourcecode/src/stdlib/SDL_malloc.c:5295\n    #3 0x562b9a1ae9da in SDL_SIMDAlloc_REAL /sourcecode/src/cpuinfo/SDL_cpuinfo.c:1169\n    #4 0x562b9a1ac8c4 in fuzzloop /dockerin/fuzz_drivers/tf1728900798867fbqs.c:22\n    #5 0x562b9aa22dc9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n\n==125679==HINT: if you don't care about these errors you may set allocator_may_return_null=1\nSUMMARY: AddressSanitizer: allocation-size-too-big ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145 in __interceptor_malloc\n崩溃类型是什么？", "A": "stack-buffer-underflow", "B": "stack-buffer-overflow", "C": "allocation-size-too-big", "D": "calloc parameters overflow", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7fbb707a0f18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x564c179eb1a4 in leak_malloc_hook /home/clouditera/workdir-engine_c/betafuzz/checkers/leakcheck.c:80\n    #2 0x7fbb707a6e02 in __sanitizer::RunMallocHooks(void const*, unsigned long) ../../../../src/libsanitizer/sanitizer_common/sanitizer_common.cpp:301\n    #3 0x7fbb7070c60b in __asan::Allocator::Allocate(unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType, bool) ../../../../src/libsanitizer/asan/asan_allocator.cpp:611\n    #4 0x7fbb70708c96 in __asan::Allocator::Reallocate(void*, unsigned long, __sanitizer::BufferedStackTrace*) ../../../../src/libsanitizer/asan/asan_allocator.cpp:727\n    #5 0x7fbb70708c96 in __asan::asan_realloc(void*, unsigned long, __sanitizer::BufferedStackTrace*) ../../../../src/libsanitizer/asan/asan_allocator.cpp:1009\n    #6 0x7fbb70794c14 in __interceptor_realloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:165\n    #7 0x564c1782d821 in default_realloc_ex /sourcecode/crypto/mem.c:86\n    #8 0x564c1782e4d1 in CRYPTO_realloc /sourcecode/crypto/mem.c:346\n    #9 0x564c17830ae4 in sk_insert /sourcecode/crypto/stack/stack.c:149\n    #10 0x564c17831682 in sk_push /sourcecode/crypto/stack/stack.c:246\n    #11 0x564c1782d5d7 in CRYPTO_set_ex_data /sourcecode/crypto/ex_data.c:613\n    #12 0x564c1782951f in X509_STORE_CTX_set_ex_data /sourcecode/crypto/x509/x509_vfy.c:1843\n    #13 0x564c1781ef3b in fuzzloop /dockerin/fuzz_drivers/tf1728981988330egfo.c:35\n    #14 0x564c179e9e19 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #15 0x564c1781ecc8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #16 0x7fbb703f0d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #17 0x7fbb703f0e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #18 0x564c1781ee14 in _start (/dockerin/fuzz_drivers/tf1728981988330egfo.out+0xa1e14)\n崩溃类型是什么？", "A": "double-free", "B": "allocation-size-too-big", "C": "larger memory malloc", "D": "unknown-crash", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==7950==ERROR: AddressSanitizer: requested allocation size 0x6b5fca6af3c0 (0x6b5fca6b0400 after adjustments for alignment, red zones etc.) exceeds maximum supported size of 0x10000000000 (thread T0)\n    #0 0x7f1fbc4b257c in __interceptor_posix_memalign ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:226\n    #1 0x55b06e5b75e7 in pthreadpool_allocate /sourcecode/src/memory.c:44\n    #2 0x55b06e5b5e5b in pthreadpool_create /sourcecode/src/pthreads.c:258\n    #3 0x55b06e5b3784 in fuzzloop /dockerin/fuzz_drivers/tf1728877391904ouvq.cpp:21\n    #4 0x55b06e5bfe49 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n\n==7950==HINT: if you don't care about these errors you may set allocator_may_return_null=1\nSUMMARY: AddressSanitizer: allocation-size-too-big ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:226 in __interceptor_posix_memalign\n崩溃类型是什么？", "A": "memcpy-param-overlap", "B": "stack-buffer-underflow", "C": "allocation-size-too-big", "D": "out-of-memory", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==3599==ERROR: AddressSanitizer: requested allocation size 0x1ad7f39abe7 (0x1ad7f39bbe8 after adjustments for alignment, red zones etc.) exceeds maximum supported size of 0x10000000000 (thread T0)\n    #0 0x7f45dcbf1887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55f2a4f2a6f4 in hi_malloc /sourcecode/alloc.h:59\n    #2 0x55f2a4f2b939 in sdsMakeRoomFor /sourcecode/sds.c:232\n    #3 0x55f2a4f2d28e in sdscatlen /sourcecode/sds.c:384\n    #4 0x55f2a4f33862 in sdsjoinsds /sourcecode/sds.c:1104\n    #5 0x55f2a4f2882a in fuzzloop /dockerin/fuzz_drivers/tf1728369139911ooew.c:32\n    #6 0x55f2a4f3c329 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n\n==3599==HINT: if you don't care about these errors you may set allocator_may_return_null=1\nSUMMARY: AddressSanitizer: allocation-size-too-big ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145 in __interceptor_malloc\n崩溃类型是什么？", "A": "stack-buffer-underflow", "B": "bad-free", "C": "invalid-posix-memalign-alignment", "D": "allocation-size-too-big", "answer": "D"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7fecbb6a7f18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x5585d275b644 in leak_malloc_hook /home/clouditera/workdir-engine_c/betafuzz/checkers/leakcheck.c:80\n    #2 0x7fecbb6ade02 in __sanitizer::RunMallocHooks(void const*, unsigned long) ../../../../src/libsanitizer/sanitizer_common/sanitizer_common.cpp:301\n    #3 0x7fecbb61360b in __asan::Allocator::Allocate(unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType, bool) ../../../../src/libsanitizer/asan/asan_allocator.cpp:611\n    #4 0x7fecbb60f43c in __asan::asan_memalign(unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType) ../../../../src/libsanitizer/asan/asan_allocator.cpp:1039\n    #5 0x7fecbb69d1a3 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cpp:99\n    #6 0x7fecbb4fe724 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned long) (/lib/x86_64-linux-gnu/libstdc++.so.6+0x14c724)\n    #7 0x5585d274c010 in YAML::Stream::get[abi:cxx11](int) /sourcecode/src/stream.cpp:278\n    #8 0x5585d2749dbf in fuzzloop /dockerin/fuzz_drivers/tf1729061963035ldyh.cpp:26\n    #9 0x5585d275a2b9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #10 0x5585d2749928 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #11 0x7fecbb0abd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #12 0x7fecbb0abe3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #13 0x5585d2749a74 in _start (/dockerin/fuzz_drivers/tf1729061963035ldyh.out+0x13a74)\n崩溃类型是什么？", "A": "stack-buffer-overflow", "B": "stack-buffer-underflow", "C": "allocation-size-too-big", "D": "larger memory malloc", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==39619==ERROR: AddressSanitizer: requested allocation size 0x2843ebe81af0 (0x2843ebe82af0 after adjustments for alignment, red zones etc.) exceeds maximum supported size of 0x10000000000 (thread T0)\n    #0 0x7fcdbf5cc1e7 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cpp:99\n    #1 0x56022db846d8 in __gnu_cxx::new_allocator<protocol::RedisValue>::allocate(unsigned long, void const*) /usr/include/c++/11/ext/new_allocator.h:127\n    #2 0x56022db83e9e in std::allocator_traits<std::allocator<protocol::RedisValue> >::allocate(std::allocator<protocol::RedisValue>&, unsigned long) /usr/include/c++/11/bits/alloc_traits.h:464\n    #3 0x56022db82a0a in std::_Vector_base<protocol::RedisValue, std::allocator<protocol::RedisValue> >::_M_allocate(unsigned long) /usr/include/c++/11/bits/stl_vector.h:346\n    #4 0x56022db823b4 in std::_Vector_base<protocol::RedisValue, std::allocator<protocol::RedisValue> >::_M_create_storage(unsigned long) /usr/include/c++/11/bits/stl_vector.h:361\n    #5 0x56022db7ff3e in std::_Vector_base<protocol::RedisValue, std::allocator<protocol::RedisValue> >::_Vector_base(unsigned long, std::allocator<protocol::RedisValue> const&) /usr/include/c++/11/bits/stl_vector.h:305\n    #6 0x56022db7f249 in std::vector<protocol::RedisValue, std::allocator<protocol::RedisValue> >::vector(unsigned long, std::allocator<protocol::RedisValue> const&) /usr/include/c++/11/bits/stl_vector.h:511\n    #7 0x56022db7a074 in protocol::RedisValue::set_array(unsigned long) /sourcecode/src/protocol/RedisMessage.cc:287\n    #8 0x56022db77146 in fuzzloop /dockerin/fuzz_drivers/tf1729046934385eftr.cpp:28\n    #9 0x56022dbb2589 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n\n==39619==HINT: if you don't care about these errors you may set allocator_may_return_null=1\nSUMMARY: AddressSanitizer: allocation-size-too-big ../../../../src/libsanitizer/asan/asan_new_delete.cpp:99 in operator new(unsigned long)\n崩溃类型是什么？", "A": "out-of-memory", "B": "memcpy-param-overlap", "C": "allocation-size-too-big", "D": "unknown-crash", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==8341==ERROR: AddressSanitizer: requested allocation size 0xd6bf94d5e60 (0xd6bf94d6e60 after adjustments for alignment, red zones etc.) exceeds maximum supported size of 0x10000000000 (thread T0)\n    #0 0x7f9e83f4f887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x557f04c9e632 in mpoller_create /sourcecode/src/kernel/mpoller.c:66\n    #2 0x557f04c976dc in Communicator::create_poller(unsigned long) /sourcecode/src/kernel/Communicator.cc:1428\n    #3 0x557f04c97903 in Communicator::init(unsigned long, unsigned long) /sourcecode/src/kernel/Communicator.cc:1451\n    #4 0x557f04c8dd86 in fuzzloop /dockerin/fuzz_drivers/tf1729046934042wjlr.cpp:42\n    #5 0x557f04cb7439 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n\n==8341==HINT: if you don't care about these errors you may set allocator_may_return_null=1\nSUMMARY: AddressSanitizer: allocation-size-too-big ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145 in __interceptor_malloc\n崩溃类型是什么？", "A": "global-buffer-overflow", "B": "allocation-size-too-big", "C": "calloc parameters overflow", "D": "bad-free", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==30850==ERROR: AddressSanitizer: requested allocation size 0x1ad7f29abca (0x1ad7f29bbd0 after adjustments for alignment, red zones etc.) exceeds maximum supported size of 0x10000000000 (thread T0)\n    #0 0x7fc2fa46d887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55a1fdcc047b in ring_buf_resize include/internal/ring_buf.h:244\n    #2 0x55a1fdcc0964 in ossl_quic_sstream_new ssl/quic/quic_sstream.c:69\n    #3 0x55a1fdcbf604 in fuzzloop /dockerin/fuzz_drivers/tf1730183726456bdiy.c:22\n    #4 0x55a1fdcccb99 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n\n==30850==HINT: if you don't care about these errors you may set allocator_may_return_null=1\nSUMMARY: AddressSanitizer: allocation-size-too-big ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145 in __interceptor_malloc\n崩溃类型是什么？", "A": "unknown-crash", "B": "invalid-posix-memalign-alignment", "C": "allocation-size-too-big", "D": "double-free", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==7068==ERROR: AddressSanitizer: requested allocation size 0x1ad7f39abdc (0x1ad7f39bbe0 after adjustments for alignment, red zones etc.) exceeds maximum supported size of 0x10000000000 (thread T0)\n    #0 0x7fd63bf82887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x5582a019584e in hi_malloc /sourcecode/alloc.h:59\n    #2 0x5582a0196a93 in sdsMakeRoomFor /sourcecode/sds.c:232\n    #3 0x5582a01983e8 in sdscatlen /sourcecode/sds.c:384\n    #4 0x5582a01761f7 in __redisAppendCommand /sourcecode/hiredis.c:1116\n    #5 0x5582a01762fc in redisAppendFormattedCommand /sourcecode/hiredis.c:1128\n    #6 0x5582a0167a75 in fuzzloop /dockerin/fuzz_drivers/tf1728369139782pjtn.c:33\n    #7 0x5582a01b3e09 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n\n==7068==HINT: if you don't care about these errors you may set allocator_may_return_null=1\nSUMMARY: AddressSanitizer: allocation-size-too-big ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145 in __interceptor_malloc\n崩溃类型是什么？", "A": "stack-buffer-overflow", "B": "allocation-size-too-big", "C": "bad-free", "D": "invalid-posix-memalign-alignment", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==17775==ERROR: AddressSanitizer: requested allocation size 0x1ad7f29abcb (0x1ad7f29bbd0 after adjustments for alignment, red zones etc.) exceeds maximum supported size of 0x10000000000 (thread T0)\n    #0 0x7f1f78dfe1e7 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cpp:99\n    #1 0x55a893b39331 in __gnu_cxx::new_allocator<char>::allocate(unsigned long, void const*) /usr/include/c++/11/ext/new_allocator.h:127\n    #2 0x55a893b38e35 in std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned long) /usr/include/c++/11/bits/alloc_traits.h:464\n    #3 0x55a893b38766 in std::_Vector_base<char, std::allocator<char> >::_M_allocate(unsigned long) /usr/include/c++/11/bits/stl_vector.h:346\n    #4 0x55a893b37673 in std::vector<char, std::allocator<char> >::_M_default_append(unsigned long) /usr/include/c++/11/bits/vector.tcc:635\n    #5 0x55a893b367da in std::vector<char, std::allocator<char> >::resize(unsigned long) /usr/include/c++/11/bits/stl_vector.h:940\n    #6 0x55a893b35f45 in YAML::ostream_wrapper::write(char const*, unsigned long) /sourcecode/src/ostream_wrapper.cpp:43\n    #7 0x55a893b348f6 in fuzzloop /dockerin/fuzz_drivers/tf1729044067554bpzh.cpp:25\n    #8 0x55a893b427b9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n\n==17775==HINT: if you don't care about these errors you may set allocator_may_return_null=1\nSUMMARY: AddressSanitizer: allocation-size-too-big ../../../../src/libsanitizer/asan/asan_new_delete.cpp:99 in operator new(unsigned long)\n崩溃类型是什么？", "A": "out-of-memory", "B": "larger memory malloc", "C": "allocation-size-too-big", "D": "heap-use-after-free", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7fc62b49cf18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x564f0c9d4884 in leak_malloc_hook /home/clouditera/workdir-engine_c/betafuzz/checkers/leakcheck.c:80\n    #2 0x7fc62b4a2e02 in __sanitizer::RunMallocHooks(void const*, unsigned long) ../../../../src/libsanitizer/sanitizer_common/sanitizer_common.cpp:301\n    #3 0x7fc62b40860b in __asan::Allocator::Allocate(unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType, bool) ../../../../src/libsanitizer/asan/asan_allocator.cpp:611\n    #4 0x7fc62b40419a in __asan::asan_malloc(unsigned long, __sanitizer::BufferedStackTrace*) ../../../../src/libsanitizer/asan/asan_allocator.cpp:980\n    #5 0x7fc62b490861 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:146\n    #6 0x564f0c9abde2 in CommTarget::init(sockaddr const*, unsigned int, int, int) /sourcecode/src/kernel/Communicator.cc:157\n    #7 0x564f0c9a7e32 in CommSchedTarget::init(sockaddr const*, unsigned int, int, int, unsigned long) /sourcecode/src/kernel/CommScheduler.cc:59\n    #8 0x564f0c9a6f17 in fuzzloop /dockerin/fuzz_drivers/tf1729046934026gpie.cpp:41\n    #9 0x564f0c9d34f9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #10 0x564f0c9a6a78 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #11 0x7fc62aea0d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #12 0x7fc62aea0e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #13 0x564f0c9a6bc4 in _start (/dockerin/fuzz_drivers/tf1729046934026gpie.out+0x14bc4)\n崩溃类型是什么？", "A": "stack-buffer-underflow", "B": "double-free", "C": "allocation-size-too-big", "D": "unknown-crash", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==4227==ERROR: AddressSanitizer: requested allocation size 0x1ad7f29abca (0x1ad7f29bbd0 after adjustments for alignment, red zones etc.) exceeds maximum supported size of 0x10000000000 (thread T0)\n    #0 0x7f6566f21887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x5577aebd1615 in flatcc_builder_alloc /sourcecode/src/runtime/builder.c:2039\n    #2 0x5577aebb1774 in fuzzloop /dockerin/fuzz_drivers/tf1728556408598rcyf.c:20\n    #3 0x5577aebe14b9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n\n==4227==HINT: if you don't care about these errors you may set allocator_may_return_null=1\nSUMMARY: AddressSanitizer: allocation-size-too-big ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145 in __interceptor_malloc\n崩溃类型是什么？", "A": "allocation-size-too-big", "B": "stack-buffer-underflow", "C": "SIGABRT", "D": "bad-free", "answer": "A"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7f7117273f18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x5652d0c5f784 in leak_malloc_hook /home/clouditera/workdir-engine_c/betafuzz/checkers/leakcheck.c:80\n    #2 0x7f7117279e02 in __sanitizer::RunMallocHooks(void const*, unsigned long) ../../../../src/libsanitizer/sanitizer_common/sanitizer_common.cpp:301\n    #3 0x7f71171df60b in __asan::Allocator::Allocate(unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType, bool) ../../../../src/libsanitizer/asan/asan_allocator.cpp:611\n    #4 0x7f71171db19a in __asan::asan_malloc(unsigned long, __sanitizer::BufferedStackTrace*) ../../../../src/libsanitizer/asan/asan_allocator.cpp:980\n    #5 0x7f7117267861 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:146\n    #6 0x5652d0c2429a in default_malloc_ex /sourcecode/crypto/mem.c:79\n    #7 0x5652d0c24e12 in CRYPTO_malloc /sourcecode/crypto/mem.c:308\n    #8 0x5652d0c23f6a in BUF_memdup /sourcecode/crypto/buffer/buf_str.c:91\n    #9 0x5652d0c23db9 in fuzzloop /dockerin/fuzz_drivers/tf1728981987322gyqa.c:22\n    #10 0x5652d0c5e3f9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #11 0x5652d0c23b68 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #12 0x7f7116ec3d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #13 0x7f7116ec3e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #14 0x5652d0c23cb4 in _start (/dockerin/fuzz_drivers/tf1728981987322gyqa.out+0x3dcb4)\n崩溃类型是什么？", "A": "stack-buffer-overflow", "B": "SIGABRT", "C": "bad-free", "D": "allocation-size-too-big", "answer": "D"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==2846==ERROR: AddressSanitizer: requested allocation size 0x20000000000 (0x20000001000 after adjustments for alignment, red zones etc.) exceeds maximum supported size of 0x10000000000 (thread T0)\n    #0 0x7f7420220c38 in __interceptor_realloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:164\n    #1 0x557fc683d4ea in flatcc_builder_default_alloc /sourcecode/src/runtime/builder.c:168\n    #2 0x557fc683c89e in fuzzloop /dockerin/fuzz_drivers/tf1728556408599uxgl.c:34\n    #3 0x557fc686c5c9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n\n==2846==HINT: if you don't care about these errors you may set allocator_may_return_null=1\nSUMMARY: AddressSanitizer: allocation-size-too-big ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:164 in __interceptor_realloc\n崩溃类型是什么？", "A": "heap-use-after-free", "B": "memcpy-param-overlap", "C": "bad-free", "D": "allocation-size-too-big", "answer": "D"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==14518==ERROR: AddressSanitizer: requested allocation size 0xd6bf94d5e50 (0xd6bf94d6e50 after adjustments for alignment, red zones etc.) exceeds maximum supported size of 0x10000000000 (thread T0)\n    #0 0x7fb1cdd9f357 in operator new[](unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cpp:102\n    #1 0x5630b908a6a4 in WFResourcePool::create(unsigned long) /sourcecode/src/factory/WFResourcePool.cc:77\n    #2 0x5630b908a8b5 in WFResourcePool::WFResourcePool(unsigned long) /sourcecode/src/factory/WFResourcePool.cc:92\n    #3 0x5630b90899a6 in std::_MakeUniq<WFResourcePool>::__single_object std::make_unique<WFResourcePool, unsigned long&>(unsigned long&) /usr/include/c++/11/bits/unique_ptr.h:962\n    #4 0x5630b90897c8 in fuzzloop /dockerin/fuzz_drivers/tf1729046934163bpfd.cpp:24\n    #5 0x5630b9096f79 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n\n==14518==HINT: if you don't care about these errors you may set allocator_may_return_null=1\nSUMMARY: AddressSanitizer: allocation-size-too-big ../../../../src/libsanitizer/asan/asan_new_delete.cpp:102 in operator new[](unsigned long)\n崩溃类型是什么？", "A": "bad-free", "B": "memcpy-param-overlap", "C": "allocation-size-too-big", "D": "invalid-posix-memalign-alignment", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==209785==ERROR: AddressSanitizer: requested allocation size 0xd6bf94d5e60 (0xd6bf94d6e60 after adjustments for alignment, red zones etc.) exceeds maximum supported size of 0x10000000000 (thread T0)\n    #0 0x7fbf0fe6a887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55cd7281e612 in mpoller_create /sourcecode/src/kernel/mpoller.c:66\n    #2 0x55cd728176bc in Communicator::create_poller(unsigned long) /sourcecode/src/kernel/Communicator.cc:1428\n    #3 0x55cd7280dd66 in fuzzloop /dockerin/fuzz_drivers/tf1729046934035tfdd.cpp:41\n    #4 0x55cd72837419 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n\n==209785==HINT: if you don't care about these errors you may set allocator_may_return_null=1\nSUMMARY: AddressSanitizer: allocation-size-too-big ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145 in __interceptor_malloc\n崩溃类型是什么？", "A": "heap-use-after-free", "B": "unknown-crash", "C": "allocation-size-too-big", "D": "heap-buffer-overflow", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==194==ERROR: AddressSanitizer: requested allocation size 0x1ad7f29abd6 (0x1ad7f29bbd8 after adjustments for alignment, red zones etc.) exceeds maximum supported size of 0x10000000000 (thread T0)\n    #0 0x7fed849ee887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x562ecc136db7 in __flatcc_fb_create_join_path_n /sourcecode/src/compiler/fileio.c:60\n    #2 0x562ecc13722e in __flatcc_fb_create_path_ext_n /sourcecode/src/compiler/fileio.c:88\n    #3 0x562ecc13656b in fuzzloop /dockerin/fuzz_drivers/tf1728556408511bppf.c:20\n    #4 0x562ecc140ef9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n\n==194==HINT: if you don't care about these errors you may set allocator_may_return_null=1\nSUMMARY: AddressSanitizer: allocation-size-too-big ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145 in __interceptor_malloc\n崩溃类型是什么？", "A": "stack-buffer-overflow", "B": "heap-buffer-overflow", "C": "allocation-size-too-big", "D": "memcpy-param-overlap", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==557545==ERROR: AddressSanitizer: attempting free on address which was not malloc()-ed: 0x7ffce4250800 in thread T0\n    #0 0x7fb5acc2fd07 in operator delete(void*) ../../../../src/libsanitizer/asan/asan_new_delete.cpp:160\n    #1 0x555c63c4e854 in WFGraphNode::~WFGraphNode() /sourcecode/src/factory/WFGraphTask.cc:45\n    #2 0x555c63c4df0b in WFGraphNode::done() /sourcecode/src/factory/WFGraphTask.cc:33\n    #3 0x555c63c48bc3 in fuzzloop /dockerin/fuzz_drivers/tf1729655207806frmv.cpp:17\n    #4 0x555c63c68489 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #5 0x555c63c485c8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #6 0x7fb5ac006d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #7 0x7fb5ac006e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #8 0x555c63c48714 in _start (/dockerin/fuzz_drivers/tf1729655207806frmv.out+0x40714)\n\nAddress 0x7ffce4250800 is located in stack of thread T0 at offset 48 in frame\n    #0 0x555c63c4890b in fuzzloop /dockerin/fuzz_drivers/tf1729655207806frmv.cpp:14\n\n  This frame has 1 object(s):\n    [48, 152) 'node' (line 15) <== Memory access at offset 48 is inside this variable\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: bad-free ../../../../src/libsanitizer/asan/asan_new_delete.cpp:160 in operator delete(void*)\n崩溃类型是什么？", "A": "bad-free", "B": "heap-buffer-overflow", "C": "heap-use-after-free", "D": "unknown-crash", "answer": "A"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==558728==ERROR: AddressSanitizer: attempting free on address which was not malloc()-ed: 0x7fffbdca8630 in thread T0\n    #0 0x7f22f22f424f in operator delete(void*, unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cpp:172\n    #1 0x55eedb4ce97f in WFResolverTask::~WFResolverTask() (/dockerin/fuzz_drivers/tf1729655329697noaw.out+0x2d497f)\n    #2 0x55eedb4e0c3a in WFResolverTask::task_callback() /sourcecode/src/nameservice/WFDnsResolver.cc:752\n    #3 0x55eedb4dab77 in WFResolverTask::done() /sourcecode/src/nameservice/WFDnsResolver.cc:579\n    #4 0x55eedb4c84c2 in fuzzloop /dockerin/fuzz_drivers/tf1729655329697noaw.cpp:47\n    #5 0x55eedb644d19 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #6 0x55eedb4c7838 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #7 0x7f22f16cad8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #8 0x7f22f16cae3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #9 0x55eedb4c7984 in _start (/dockerin/fuzz_drivers/tf1729655329697noaw.out+0x2cd984)\n\nAddress 0x7fffbdca8630 is located in stack of thread T0 at offset 384 in frame\n    #0 0x55eedb4c7b94 in fuzzloop /dockerin/fuzz_drivers/tf1729655329697noaw.cpp:17\n\n  This frame has 6 object(s):\n    [48, 49) '<unknown>'\n    [64, 96) 'ep_params' (line 30)\n    [128, 168) 'ns_params' (line 20)\n    [208, 280) 'uri' (line 19)\n    [320, 352) 'callback' (line 42)\n    [384, 576) 'task' (line 44) <== Memory access at offset 384 is inside this variable\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: bad-free ../../../../src/libsanitizer/asan/asan_new_delete.cpp:172 in operator delete(void*, unsigned long)\n崩溃类型是什么？", "A": "out-of-memory", "B": "double-free", "C": "bad-free", "D": "allocation-size-too-big", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==376835==ERROR: AddressSanitizer: attempting free on address which was not malloc()-ed: 0x7ffeb37642f0 in thread T0\n    #0 0x7f33fd2c624f in operator delete(void*, unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cpp:172\n    #1 0x55ab5fbf286d in PolicyAddrParams::~PolicyAddrParams() _include/workflow/WFServiceGovernance.h:75\n    #2 0x55ab5fbf2bda in EndpointAddress::~EndpointAddress() _include/workflow/WFServiceGovernance.h:97\n    #3 0x55ab5fbf204f in fuzzloop /dockerin/fuzz_drivers/tf1729655254723gomd.cpp:27\n    #4 0x55ab5fdbc409 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #5 0x55ab5fbf1978 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #6 0x7f33fc69cd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #7 0x7f33fc69ce3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #8 0x55ab5fbf1ac4 in _start (/dockerin/fuzz_drivers/tf1729655254723gomd.out+0x376ac4)\n\nAddress 0x7ffeb37642f0 is located in stack of thread T0 at offset 160 in frame\n    #0 0x55ab5fbf1b98 in fuzzloop /dockerin/fuzz_drivers/tf1729655254723gomd.cpp:15\n\n  This frame has 6 object(s):\n    [48, 49) '<unknown>'\n    [64, 120) 'addrParams' (line 18)\n    [160, 216) 'params' (line 23) <== Memory access at offset 160 is inside this variable\n    [256, 288) '<unknown>'\n    [320, 472) 'addr' (line 24)\n    [544, 856) 'policy' (line 17)\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: bad-free ../../../../src/libsanitizer/asan/asan_new_delete.cpp:172 in operator delete(void*, unsigned long)\n崩溃类型是什么？", "A": "global-buffer-overflow", "B": "bad-free", "C": "double-free", "D": "invalid-posix-memalign-alignment", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==16971==ERROR: AddressSanitizer: calloc parameters overflow: count * size (-956286606 * 4) cannot be represented in type size_t (thread T0)\n    #0 0x7fc88bb92a57 in __interceptor_calloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:154\n    #1 0x561510ab47b0 in real_calloc /sourcecode/src/stdlib/SDL_malloc.c:5197\n    #2 0x561510ab4de8 in SDL_calloc_REAL /sourcecode/src/stdlib/SDL_malloc.c:5311\n    #3 0x5615105f6dc8 in SDL_NewAudioStream_REAL /sourcecode/src/audio/SDL_audiocvt.c:1056\n    #4 0x56151025be2c in SDL_NewAudioStream /sourcecode/src/dynapi/SDL_dynapi_procs.h:680\n    #5 0x561510245a5e in fuzzloop /dockerin/fuzz_drivers/tf1728900796364mhut.c:30\n    #6 0x561510b01279 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n\n==16971==HINT: if you don't care about these errors you may set allocator_may_return_null=1\nSUMMARY: AddressSanitizer: calloc-overflow ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:154 in __interceptor_calloc\n崩溃类型是什么？", "A": "invalid-posix-memalign-alignment", "B": "calloc parameters overflow", "C": "stack-buffer-overflow", "D": "allocation-size-too-big", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==574700==ERROR: AddressSanitizer: attempting double-free on 0x602000001830 in thread T0:\n    #0 0x7f6a1a72b537 in __interceptor_free ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:127\n    #1 0x556a55742153 in CommTarget::deinit() /sourcecode/src/kernel/Communicator.cc:184\n    #2 0x556a55731b49 in CommSchedTarget::deinit() /sourcecode/src/kernel/CommScheduler.cc:89\n    #3 0x556a5572f48c in fuzzloop /dockerin/fuzz_drivers/tf1729655579145upfd.cpp:34\n    #4 0x556a55798049 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #5 0x556a5572ec18 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #6 0x7f6a19b04d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #7 0x7f6a19b04e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #8 0x556a5572ed64 in _start (/dockerin/fuzz_drivers/tf1729655579145upfd.out+0x9fd64)\n\n0x602000001830 is located 0 bytes inside of 16-byte region [0x602000001830,0x602000001840)\nfreed by thread T0 here:\n    #0 0x7f6a1a72b537 in __interceptor_free ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:127\n    #1 0x556a55742153 in CommTarget::deinit() /sourcecode/src/kernel/Communicator.cc:184\n    #2 0x556a55731b49 in CommSchedTarget::deinit() /sourcecode/src/kernel/CommScheduler.cc:89\n    #3 0x556a5572f48c in fuzzloop /dockerin/fuzz_drivers/tf1729655579145upfd.cpp:34\n    #4 0x556a55798049 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n\npreviously allocated by thread T0 here:\n    #0 0x7f6a1a72b887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x556a557412ff in CommTarget::init(sockaddr const*, unsigned int, int, int) /sourcecode/src/kernel/Communicator.cc:157\n    #2 0x556a55730fe2 in CommSchedTarget::init(sockaddr const*, unsigned int, int, int, unsigned long) /sourcecode/src/kernel/CommScheduler.cc:59\n    #3 0x556a5572f21b in fuzzloop /dockerin/fuzz_drivers/tf1729655579145upfd.cpp:29\n    #4 0x556a55798049 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n\nSUMMARY: AddressSanitizer: double-free ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:127 in __interceptor_free\n崩溃类型是什么？", "A": "stack-buffer-overflow", "B": "double-free", "C": "heap-buffer-overflow", "D": "global-buffer-overflow", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==4986==ERROR: AddressSanitizer: global-buffer-overflow on address 0x557268e4d358 at pc 0x557268b89fc6 bp 0x7ffefff0cd40 sp 0x7ffefff0cd30\nREAD of size 8 at 0x557268e4d358 thread T0\n    #0 0x557268b89fc5 in http_date2rfc7231 /sourcecode/lib/facil/http/http.c:2200\n    #1 0x557268a7eb4d in fuzzloop /dockerin/fuzz_drivers/tf1730095527706kecl.c:28\n    #2 0x557268bfd649 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x557268a7dab8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7f46df723d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7f46df723e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x557268a7dc04 in _start (/dockerin/fuzz_drivers/tf1730095527706kecl.out+0x1dbc04)\n\n0x557268e4d358 is located 8 bytes to the right of global variable '*.Lubsan_data1368' defined in '/sourcecode/lib/facil/http/http.c' (0x557268e4d340) of size 16\n0x557268e4d358 is located 40 bytes to the left of global variable '*.Lubsan_data1369' defined in '/sourcecode/lib/facil/http/http.c' (0x557268e4d380) of size 16\nSUMMARY: AddressSanitizer: global-buffer-overflow /sourcecode/lib/facil/http/http.c:2200 in http_date2rfc7231\nShadow bytes around the buggy address:\n  0x0aaecd1c1a10: 00 00 00 00 f9 f9 f9 f9 00 00 f9 f9 f9 f9 f9 f9\n  0x0aaecd1c1a20: 00 00 00 00 f9 f9 f9 f9 00 00 00 00 f9 f9 f9 f9\n  0x0aaecd1c1a30: 00 00 f9 f9 f9 f9 f9 f9 00 00 00 00 f9 f9 f9 f9\n  0x0aaecd1c1a40: 00 00 00 00 f9 f9 f9 f9 00 00 00 00 f9 f9 f9 f9\n  0x0aaecd1c1a50: 00 00 f9 f9 f9 f9 f9 f9 00 00 00 00 f9 f9 f9 f9\n=>0x0aaecd1c1a60: 00 00 00 00 f9 f9 f9 f9 00 00 f9[f9]f9 f9 f9 f9\n  0x0aaecd1c1a70: 00 00 f9 f9 f9 f9 f9 f9 00 00 f9 f9 f9 f9 f9 f9\n  0x0aaecd1c1a80: 00 00 00 00 f9 f9 f9 f9 00 00 00 00 f9 f9 f9 f9\n  0x0aaecd1c1a90: 00 00 00 00 f9 f9 f9 f9 00 00 f9 f9 f9 f9 f9 f9\n  0x0aaecd1c1aa0: 00 00 00 00 f9 f9 f9 f9 00 00 00 00 f9 f9 f9 f9\n  0x0aaecd1c1ab0: 00 00 f9 f9 f9 f9 f9 f9 00 00 f9 f9 f9 f9 f9 f9\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "calloc parameters overflow", "B": "unknown-crash", "C": "global-buffer-overflow", "D": "out-of-memory", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==171==ERROR: AddressSanitizer: global-buffer-overflow on address 0x55e2e8df0b3b at pc 0x55e2e8aab830 bp 0x7ffd37e4ca80 sp 0x7ffd37e4ca70\nREAD of size 1 at 0x55e2e8df0b3b thread T0\n    #0 0x55e2e8aab82f in mustache__load_data /sourcecode/lib/facil/fiobj/mustache_parser.h:812\n    #1 0x55e2e8ab44c4 in mustache_load /sourcecode/lib/facil/fiobj/mustache_parser.h:1193\n    #2 0x55e2e8abe9f7 in fiobj_mustache_new /sourcecode/lib/facil/fiobj/fiobj_mustache.c:46\n    #3 0x55e2e8aa6433 in fuzzloop /sharedockerin/ta1730101612191tajm/test_file.c:22\n    #4 0x55e2e8baf449 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #5 0x55e2e8aa5a98 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #6 0x7fe0d9d87d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #7 0x7fe0d9d87e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #8 0x55e2e8aa5be4 in _start (/sharedockerin/ta1730101612191tajm/clouditera+0x136be4)\n\n0x55e2e8df0b3b is located 23 bytes to the right of global variable 'FIO_LOG_LEVEL' defined in './lib/facil/fio.h:459:27' (0x55e2e8df0b20) of size 4\n0x55e2e8df0b3b is located 37 bytes to the left of global variable 'fio_hash_secret_marker1' defined in './lib/facil/fio.h:2459:31' (0x55e2e8df0b60) of size 1\n  'fio_hash_secret_marker1' is ascii string ''\nSUMMARY: AddressSanitizer: global-buffer-overflow /sourcecode/lib/facil/fiobj/mustache_parser.h:812 in mustache__load_data\nShadow bytes around the buggy address:\n  0x0abcdd1b6110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0abcdd1b6120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0abcdd1b6130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0abcdd1b6140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0abcdd1b6150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n=>0x0abcdd1b6160: 00 00 00 00 04 f9 f9[f9]f9 f9 f9 f9 01 f9 f9 f9\n  0x0abcdd1b6170: f9 f9 f9 f9 01 f9 f9 f9 f9 f9 f9 f9 04 f9 f9 f9\n  0x0abcdd1b6180: f9 f9 f9 f9 01 f9 f9 f9 f9 f9 f9 f9 01 f9 f9 f9\n  0x0abcdd1b6190: f9 f9 f9 f9 04 f9 f9 f9 f9 f9 f9 f9 01 f9 f9 f9\n  0x0abcdd1b61a0: f9 f9 f9 f9 01 f9 f9 f9 f9 f9 f9 f9 00 00 00 00\n  0x0abcdd1b61b0: 01 f9 f9 f9 f9 f9 f9 f9 01 f9 f9 f9 f9 f9 f9 f9\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "heap-use-after-free", "B": "bad-free", "C": "global-buffer-overflow", "D": "SIGABRT", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==1963==ERROR: AddressSanitizer: global-buffer-overflow on address 0x5633c3412b24 at pc 0x7f0d943c3397 bp 0x7fff98081c70 sp 0x7fff98081418\nREAD of size 691 at 0x5633c3412b24 thread T0\n    #0 0x7f0d943c3396 in __interceptor_memcpy ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:827\n    #1 0x5633c30d00d3 in mustache__load_file /sourcecode/lib/facil/fiobj/mustache_parser.h:899\n    #2 0x5633c30d64e5 in mustache_load /sourcecode/lib/facil/fiobj/mustache_parser.h:1198\n    #3 0x5633c30e08e8 in fiobj_mustache_load /sourcecode/lib/facil/fiobj/fiobj_mustache.c:32\n    #4 0x5633c30c83db in fuzzloop /dockerin/fuzz_drivers/tf1729823101556tsvr.c:19\n    #5 0x5633c31d13d9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #6 0x5633c30c7a98 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #7 0x7f0d93a64d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #8 0x7f0d93a64e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #9 0x5633c30c7be4 in _start (/dockerin/fuzz_drivers/tf1729823101556tsvr.out+0x136be4)\n\n0x5633c3412b24 is located 0 bytes to the right of global variable 'FIO_LOG_LEVEL' defined in './lib/facil/fio.h:459:27' (0x5633c3412b20) of size 4\n0x5633c3412b24 is located 60 bytes to the left of global variable 'fio_hash_secret_marker1' defined in './lib/facil/fio.h:2459:31' (0x5633c3412b60) of size 1\n  'fio_hash_secret_marker1' is ascii string ''\nSUMMARY: AddressSanitizer: global-buffer-overflow ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:827 in __interceptor_memcpy\nShadow bytes around the buggy address:\n  0x0ac6f867a510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0ac6f867a520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0ac6f867a530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0ac6f867a540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0ac6f867a550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n=>0x0ac6f867a560: 00 00 00 00[04]f9 f9 f9 f9 f9 f9 f9 01 f9 f9 f9\n  0x0ac6f867a570: f9 f9 f9 f9 01 f9 f9 f9 f9 f9 f9 f9 04 f9 f9 f9\n  0x0ac6f867a580: f9 f9 f9 f9 01 f9 f9 f9 f9 f9 f9 f9 01 f9 f9 f9\n  0x0ac6f867a590: f9 f9 f9 f9 04 f9 f9 f9 f9 f9 f9 f9 01 f9 f9 f9\n  0x0ac6f867a5a0: f9 f9 f9 f9 01 f9 f9 f9 f9 f9 f9 f9 00 00 00 00\n  0x0ac6f867a5b0: 01 f9 f9 f9 f9 f9 f9 f9 01 f9 f9 f9 f9 f9 f9 f9\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "allocation-size-too-big", "B": "SIGABRT", "C": "global-buffer-overflow", "D": "unknown-crash", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==171==ERROR: AddressSanitizer: global-buffer-overflow on address 0x55e2e8df0b24 at pc 0x7fe0da6e6397 bp 0x7ffd37e4c980 sp 0x7ffd37e4c128\nREAD of size 348 at 0x55e2e8df0b24 thread T0\n    #0 0x7fe0da6e6396 in __interceptor_memcpy ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:827\n    #1 0x55e2e8aa8d5d in mustache__data_segment_write /sourcecode/lib/facil/fiobj/mustache_parser.h:672\n    #2 0x55e2e8aabb26 in mustache__load_data /sourcecode/lib/facil/fiobj/mustache_parser.h:817\n    #3 0x55e2e8ab44c4 in mustache_load /sourcecode/lib/facil/fiobj/mustache_parser.h:1193\n    #4 0x55e2e8abe9f7 in fiobj_mustache_new /sourcecode/lib/facil/fiobj/fiobj_mustache.c:46\n    #5 0x55e2e8aa6433 in fuzzloop /sharedockerin/ta1730101612191tajm/test_file.c:22\n    #6 0x55e2e8baf449 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #7 0x55e2e8aa5a98 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #8 0x7fe0d9d87d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #9 0x7fe0d9d87e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #10 0x55e2e8aa5be4 in _start (/sharedockerin/ta1730101612191tajm/clouditera+0x136be4)\n\n0x55e2e8df0b24 is located 0 bytes to the right of global variable 'FIO_LOG_LEVEL' defined in './lib/facil/fio.h:459:27' (0x55e2e8df0b20) of size 4\n0x55e2e8df0b24 is located 60 bytes to the left of global variable 'fio_hash_secret_marker1' defined in './lib/facil/fio.h:2459:31' (0x55e2e8df0b60) of size 1\n  'fio_hash_secret_marker1' is ascii string ''\nSUMMARY: AddressSanitizer: global-buffer-overflow ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:827 in __interceptor_memcpy\nShadow bytes around the buggy address:\n  0x0abcdd1b6110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0abcdd1b6120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0abcdd1b6130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0abcdd1b6140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0abcdd1b6150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n=>0x0abcdd1b6160: 00 00 00 00[04]f9 f9 f9 f9 f9 f9 f9 01 f9 f9 f9\n  0x0abcdd1b6170: f9 f9 f9 f9 01 f9 f9 f9 f9 f9 f9 f9 04 f9 f9 f9\n  0x0abcdd1b6180: f9 f9 f9 f9 01 f9 f9 f9 f9 f9 f9 f9 01 f9 f9 f9\n  0x0abcdd1b6190: f9 f9 f9 f9 04 f9 f9 f9 f9 f9 f9 f9 01 f9 f9 f9\n  0x0abcdd1b61a0: f9 f9 f9 f9 01 f9 f9 f9 f9 f9 f9 f9 00 00 00 00\n  0x0abcdd1b61b0: 01 f9 f9 f9 f9 f9 f9 f9 01 f9 f9 f9 f9 f9 f9 f9\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "heap-buffer-overflow", "B": "allocation-size-too-big", "C": "larger memory malloc", "D": "global-buffer-overflow", "answer": "D"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==66603==ERROR: AddressSanitizer: global-buffer-overflow on address 0x55e7f999be01 at pc 0x55e7f961d209 bp 0x7ffeca6d0f70 sp 0x7ffeca6d0f60\nREAD of size 1 at 0x55e7f999be01 thread T0\n    #0 0x55e7f961d208 in SDL_ultoa_REAL /sourcecode/src/stdlib/SDL_string.c:820\n    #1 0x55e7f8db4fec in SDL_ultoa_DEFAULT /sourcecode/src/dynapi/SDL_dynapi_procs.h:441\n    #2 0x55e7f8dc2a39 in SDL_ultoa /sourcecode/src/dynapi/SDL_dynapi_procs.h:441\n    #3 0x55e7f8dafa29 in fuzzloop /dockerin/fuzz_drivers/tf1728900807599rhea.c:27\n    #4 0x55e7f966b239 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #5 0x55e7f8daf7c8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #6 0x7f1f05187d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #7 0x7f1f05187e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #8 0x55e7f8daf914 in _start (/dockerin/fuzz_drivers/tf1728900807599rhea.out+0xc77914)\n\n0x55e7f999be01 is located 25 bytes to the right of global variable 'VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT' defined in '/sourcecode/src/events/../video/./khronos/vulkan/vulkan_core.h:6550:39' (0x55e7f999bde0) of size 8\n0x55e7f999be01 is located 31 bytes to the left of global variable 'VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT_KHR' defined in '/sourcecode/src/events/../video/./khronos/vulkan/vulkan_core.h:6551:39' (0x55e7f999be20) of size 8\nSUMMARY: AddressSanitizer: global-buffer-overflow /sourcecode/src/stdlib/SDL_string.c:820 in SDL_ultoa_REAL\nShadow bytes around the buggy address:\n  0x0abd7f32b770: f9 f9 f9 f9 00 f9 f9 f9 f9 f9 f9 f9 00 f9 f9 f9\n  0x0abd7f32b780: f9 f9 f9 f9 00 f9 f9 f9 f9 f9 f9 f9 00 f9 f9 f9\n  0x0abd7f32b790: f9 f9 f9 f9 00 f9 f9 f9 f9 f9 f9 f9 00 f9 f9 f9\n  0x0abd7f32b7a0: f9 f9 f9 f9 00 f9 f9 f9 f9 f9 f9 f9 00 f9 f9 f9\n  0x0abd7f32b7b0: f9 f9 f9 f9 00 f9 f9 f9 f9 f9 f9 f9 00 f9 f9 f9\n=>0x0abd7f32b7c0:[f9]f9 f9 f9 00 f9 f9 f9 f9 f9 f9 f9 00 f9 f9 f9\n  0x0abd7f32b7d0: f9 f9 f9 f9 00 f9 f9 f9 f9 f9 f9 f9 00 f9 f9 f9\n  0x0abd7f32b7e0: f9 f9 f9 f9 00 f9 f9 f9 f9 f9 f9 f9 00 f9 f9 f9\n  0x0abd7f32b7f0: f9 f9 f9 f9 00 f9 f9 f9 f9 f9 f9 f9 00 f9 f9 f9\n  0x0abd7f32b800: f9 f9 f9 f9 00 f9 f9 f9 f9 f9 f9 f9 00 f9 f9 f9\n  0x0abd7f32b810: f9 f9 f9 f9 00 f9 f9 f9 f9 f9 f9 f9 00 f9 f9 f9\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "unknown-crash", "B": "double-free", "C": "allocation-size-too-big", "D": "global-buffer-overflow", "answer": "D"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==28865==ERROR: AddressSanitizer: global-buffer-overflow on address 0x55be2957f084 at pc 0x55be28c9a16e bp 0x7ffdb02e1f10 sp 0x7ffdb02e1f00\nREAD of size 1 at 0x55be2957f084 thread T0\n    #0 0x55be28c9a16d in SDL_ultoa_REAL /sourcecode/src/stdlib/SDL_string.c:820\n    #1 0x55be28c988e9 in fuzzloop /dockerin/fuzz_drivers/tf1728900807926xwvk.c:22\n    #2 0x55be2950ede9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x55be28c98688 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7fe8176a9d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7fe8176a9e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x55be28c987d4 in _start (/dockerin/fuzz_drivers/tf1728900807926xwvk.out+0xc2b7d4)\n\n0x55be2957f084 is located 28 bytes to the right of global variable 'VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT' defined in '/sourcecode/src/events/../video/./khronos/vulkan/vulkan_core.h:6738:39' (0x55be2957f060) of size 8\n0x55be2957f084 is located 28 bytes to the left of global variable 'VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT_KHR' defined in '/sourcecode/src/events/../video/./khronos/vulkan/vulkan_core.h:6739:39' (0x55be2957f0a0) of size 8\nSUMMARY: AddressSanitizer: global-buffer-overflow /sourcecode/src/stdlib/SDL_string.c:820 in SDL_ultoa_REAL\nShadow bytes around the buggy address:\n  0x0ab8452a7dc0: f9 f9 f9 f9 00 f9 f9 f9 f9 f9 f9 f9 00 f9 f9 f9\n  0x0ab8452a7dd0: f9 f9 f9 f9 00 f9 f9 f9 f9 f9 f9 f9 00 f9 f9 f9\n  0x0ab8452a7de0: f9 f9 f9 f9 00 f9 f9 f9 f9 f9 f9 f9 00 f9 f9 f9\n  0x0ab8452a7df0: f9 f9 f9 f9 00 f9 f9 f9 f9 f9 f9 f9 00 f9 f9 f9\n  0x0ab8452a7e00: f9 f9 f9 f9 00 f9 f9 f9 f9 f9 f9 f9 00 f9 f9 f9\n=>0x0ab8452a7e10:[f9]f9 f9 f9 00 f9 f9 f9 f9 f9 f9 f9 00 f9 f9 f9\n  0x0ab8452a7e20: f9 f9 f9 f9 00 f9 f9 f9 f9 f9 f9 f9 00 f9 f9 f9\n  0x0ab8452a7e30: f9 f9 f9 f9 00 f9 f9 f9 f9 f9 f9 f9 00 f9 f9 f9\n  0x0ab8452a7e40: f9 f9 f9 f9 00 f9 f9 f9 f9 f9 f9 f9 00 f9 f9 f9\n  0x0ab8452a7e50: f9 f9 f9 f9 00 f9 f9 f9 f9 f9 f9 f9 00 f9 f9 f9\n  0x0ab8452a7e60: f9 f9 f9 f9 00 f9 f9 f9 f9 f9 f9 f9 00 f9 f9 f9\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "allocation-size-too-big", "B": "SIGABRT", "C": "global-buffer-overflow", "D": "larger memory malloc", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==42470==ERROR: AddressSanitizer: global-buffer-overflow on address 0x55ca128942cf at pc 0x55ca11fb15bf bp 0x7ffe86e056f0 sp 0x7ffe86e056e0\nREAD of size 1 at 0x55ca128942cf thread T0\n    #0 0x55ca11fb15be in SDL_ulltoa_REAL /sourcecode/src/stdlib/SDL_string.c:862\n    #1 0x55ca11fb1421 in SDL_lltoa_REAL /sourcecode/src/stdlib/SDL_string.c:846\n    #2 0x55ca11faf8e9 in fuzzloop /dockerin/fuzz_drivers/tf1728900807112kenm.c:22\n    #3 0x55ca12825de9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #4 0x55ca11faf688 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #5 0x7f0acc153d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #6 0x7f0acc153e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #7 0x55ca11faf7d4 in _start (/dockerin/fuzz_drivers/tf1728900807112kenm.out+0xc2b7d4)\n\n0x55ca128942cf is located 39 bytes to the right of global variable 'VK_PIPELINE_STAGE_2_CLUSTER_CULLING_SHADER_BIT_HUAWEI' defined in '/sourcecode/src/events/../video/./khronos/vulkan/vulkan_core.h:6589:39' (0x55ca128942a0) of size 8\n0x55ca128942cf is located 17 bytes to the left of global variable 'VK_PIPELINE_STAGE_2_OPTICAL_FLOW_BIT_NV' defined in '/sourcecode/src/events/../video/./khronos/vulkan/vulkan_core.h:6590:39' (0x55ca128942e0) of size 8\nSUMMARY: AddressSanitizer: global-buffer-overflow /sourcecode/src/stdlib/SDL_string.c:862 in SDL_ulltoa_REAL\nShadow bytes around the buggy address:\n  0x0ab9c250a800: f9 f9 f9 f9 00 f9 f9 f9 f9 f9 f9 f9 00 f9 f9 f9\n  0x0ab9c250a810: f9 f9 f9 f9 00 f9 f9 f9 f9 f9 f9 f9 00 f9 f9 f9\n  0x0ab9c250a820: f9 f9 f9 f9 00 f9 f9 f9 f9 f9 f9 f9 00 f9 f9 f9\n  0x0ab9c250a830: f9 f9 f9 f9 00 f9 f9 f9 f9 f9 f9 f9 00 f9 f9 f9\n  0x0ab9c250a840: f9 f9 f9 f9 00 f9 f9 f9 f9 f9 f9 f9 00 f9 f9 f9\n=>0x0ab9c250a850: f9 f9 f9 f9 00 f9 f9 f9 f9[f9]f9 f9 00 f9 f9 f9\n  0x0ab9c250a860: f9 f9 f9 f9 00 f9 f9 f9 f9 f9 f9 f9 00 f9 f9 f9\n  0x0ab9c250a870: f9 f9 f9 f9 00 f9 f9 f9 f9 f9 f9 f9 00 f9 f9 f9\n  0x0ab9c250a880: f9 f9 f9 f9 00 f9 f9 f9 f9 f9 f9 f9 00 f9 f9 f9\n  0x0ab9c250a890: f9 f9 f9 f9 00 f9 f9 f9 f9 f9 f9 f9 00 f9 f9 f9\n  0x0ab9c250a8a0: f9 f9 f9 f9 00 f9 f9 f9 f9 f9 f9 f9 00 f9 f9 f9\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "memcpy-param-overlap", "B": "global-buffer-overflow", "C": "allocation-size-too-big", "D": "unknown-crash", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==634411==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000120 at pc 0x564b8554478b bp 0x7ffe7b542300 sp 0x7ffe7b5422f0\nWRITE of size 8 at 0x602000000120 thread T0\n    #0 0x564b8554478a in SubTask::set_pointer(void*) /sourcecode/_include/workflow/SubTask.h:39\n    #1 0x564b8554c589 in SeriesWork::push_back(SubTask*) /sourcecode/src/factory/Workflow.cc:103\n    #2 0x564b85542833 in WFGraphTask::create_graph_node(SubTask*) /sourcecode/src/factory/WFGraphTask.cc:52\n    #3 0x564b8553baa9 in fuzzloop /dockerin/fuzz_drivers/tf1729655933303gguj.cpp:27\n    #4 0x564b8555e1a9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #5 0x564b8553b5c8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #6 0x7fbe71043d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #7 0x7fbe71043e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #8 0x564b8553b714 in _start (/dockerin/fuzz_drivers/tf1729655933303gguj.out+0x43714)\n\n0x602000000120 is located 4 bytes to the right of 12-byte region [0x602000000110,0x60200000011c)\nallocated by thread T0 here:\n    #0 0x7fbe71c6a887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x564b8555e3bc in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/_include/workflow/SubTask.h:39 in SubTask::set_pointer(void*)\nShadow bytes around the buggy address:\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 04\n=>0x0c047fff8020: fa fa 00 04[fa]fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "out-of-memory", "B": "heap-buffer-overflow", "C": "double-free", "D": "stack-buffer-underflow", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==158411==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6060000000c0 at pc 0x55c5633698d6 bp 0x7ffef3b7feb0 sp 0x7ffef3b7fea0\nREAD of size 8 at 0x6060000000c0 thread T0\n    #0 0x55c5633698d5 in UPSWeightedRandomPolicy::recover_one_server(EndpointAddress const*) /sourcecode/src/nameservice/UpstreamPolicies.cc:584\n    #1 0x55c56335304c in fuzzloop /dockerin/fuzz_drivers/tf1729593105363twbj.cpp:41\n    #2 0x55c563520ee9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x55c563352978 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7f1559321d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7f1559321e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x55c563352ac4 in _start (/dockerin/fuzz_drivers/tf1729593105363twbj.out+0x381ac4)\n\n0x6060000000c0 is located 8 bytes to the right of 56-byte region [0x606000000080,0x6060000000b8)\nallocated by thread T0 here:\n    #0 0x7f1559f4a1e7 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cpp:99\n    #1 0x55c5633542db in std::_MakeUniq<PolicyAddrParams>::__single_object std::make_unique<PolicyAddrParams>() /usr/include/c++/11/bits/unique_ptr.h:962\n    #2 0x55c563352d99 in fuzzloop /dockerin/fuzz_drivers/tf1729593105363twbj.cpp:39\n    #3 0x55c563520ee9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/src/nameservice/UpstreamPolicies.cc:584 in UPSWeightedRandomPolicy::recover_one_server(EndpointAddress const*)\nShadow bytes around the buggy address:\n  0x0c0c7fff7fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c0c7fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c0c7fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c0c7fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c0c7fff8000: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa\n=>0x0c0c7fff8010: 00 00 00 00 00 00 00 fa[fa]fa fa fa fa fa fa fa\n  0x0c0c7fff8020: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c0c7fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c0c7fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c0c7fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c0c7fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "double-free", "B": "stack-buffer-overflow", "C": "stack-buffer-underflow", "D": "heap-buffer-overflow", "answer": "D"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==3830==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000120 at pc 0x55fa6337c15a bp 0x7ffc9b4bd540 sp 0x7ffc9b4bd530\nREAD of size 8 at 0x602000000120 thread T0\n    #0 0x55fa6337c159 in rb_replace_node /sourcecode/src/kernel/rbtree.c:372\n    #1 0x55fa6337587e in fuzzloop /dockerin/fuzz_drivers/tf1729593326323kjve.cpp:33\n    #2 0x55fa63384d69 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x55fa63375348 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7f7ae8527d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7f7ae8527e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x55fa63375494 in _start (/dockerin/fuzz_drivers/tf1729593326323kjve.out+0x17494)\n\n0x602000000120 is located 4 bytes to the right of 12-byte region [0x602000000110,0x60200000011c)\nallocated by thread T0 here:\n    #0 0x7f7ae914e887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55fa63384f7c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/src/kernel/rbtree.c:372 in rb_replace_node\nShadow bytes around the buggy address:\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 04\n=>0x0c047fff8020: fa fa 00 04[fa]fa 00 04 fa fa 00 04 fa fa 00 04\n  0x0c047fff8030: fa fa 00 04 fa fa 01 fa fa fa 01 fa fa fa 00 04\n  0x0c047fff8040: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04\n  0x0c047fff8050: fa fa 00 04 fa fa 01 fa fa fa 01 fa fa fa 00 04\n  0x0c047fff8060: fa fa 00 04 fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "global-buffer-overflow", "B": "heap-buffer-overflow", "C": "unknown-crash", "D": "larger memory malloc", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==551378==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200000011c at pc 0x55884ec7e208 bp 0x7fffa26ef5f0 sp 0x7fffa26ef5e0\nWRITE of size 1 at 0x60200000011c thread T0\n    #0 0x55884ec7e207 in StringUtil::url_decode(char*, unsigned long) /sourcecode/src/util/StringUtil.cc:76\n    #1 0x55884ec7d9fa in fuzzloop /dockerin/fuzz_drivers/tf1729593388901mobm.cpp:17\n    #2 0x55884ec8e849 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x55884ec7d7a8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7ff454028d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7ff454028e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x55884ec7d8f4 in _start (/dockerin/fuzz_drivers/tf1729593388901mobm.out+0x1c8f4)\n\n0x60200000011c is located 0 bytes to the right of 12-byte region [0x602000000110,0x60200000011c)\nallocated by thread T0 here:\n    #0 0x7ff454c4f887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55884ec8ea5c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/src/util/StringUtil.cc:76 in StringUtil::url_decode(char*, unsigned long)\nShadow bytes around the buggy address:\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 04\n=>0x0c047fff8020: fa fa 00[04]fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "double-free", "B": "heap-buffer-overflow", "C": "unknown-crash", "D": "stack-buffer-overflow", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==202==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020000004cb at pc 0x55e9350ea0fb bp 0x7ffd0317ad60 sp 0x7ffd0317ad50\nWRITE of size 1 at 0x6020000004cb thread T0\n    #0 0x55e9350ea0fa in http_decode_url_unsafe /sourcecode/lib/facil/http/http.c:2433\n    #1 0x55e934fd780a in fuzzloop /sharedockerin/ta1729829438469rhkp/test_file.c:29\n    #2 0x55e935156249 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x55e934fd6ab8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7f8c08d78d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7f8c08d78e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x55e934fd6c04 in _start (/sharedockerin/ta1729829438469rhkp/clouditera+0x1dbc04)\n\n0x6020000004cb is located 171 bytes to the right of 16-byte region [0x602000000410,0x602000000420)\nallocated by thread T0 here:\n    #0 0x7f8c09751887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55e93515645c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/lib/facil/http/http.c:2433 in http_decode_url_unsafe\nShadow bytes around the buggy address:\n  0x0c047fff8040: fa fa 05 fa fa fa 00 00 fa fa 05 fa fa fa 00 04\n  0x0c047fff8050: fa fa 00 04 fa fa 05 fa fa fa 07 fa fa fa 05 fa\n  0x0c047fff8060: fa fa 05 fa fa fa 00 fa fa fa 00 01 fa fa 00 01\n  0x0c047fff8070: fa fa 05 fa fa fa 00 04 fa fa 00 04 fa fa fd fd\n  0x0c047fff8080: fa fa 00 00 fa fa fd fa fa fa fd fa fa fa fd fa\n=>0x0c047fff8090: fa fa fd fa fa fa fd fa fa[fa]fd fa fa fa fd fa\n  0x0c047fff80a0: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fff80b0: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fff80c0: fa fa fd fa fa fa fd fd fa fa fd fa fa fa fd fa\n  0x0c047fff80d0: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fff80e0: fa fa fd fd fa fa fd fa fa fa fd fa fa fa fd fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "heap-buffer-overflow", "B": "invalid-posix-memalign-alignment", "C": "double-free", "D": "out-of-memory", "answer": "A"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==203==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200002e793 at pc 0x7f240bc29397 bp 0x7ffec82fcbb0 sp 0x7ffec82fc358\nREAD of size 3 at 0x60200002e793 thread T0\n    #0 0x7f240bc29396 in __interceptor_memcpy ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:827\n    #1 0x556c194f6cf3 in uint3korr /sourcecode/src/protocol/mysql_byteorder.h:179\n    #2 0x556c194f7255 in decode_length_safe /sourcecode/src/protocol/mysql_byteorder.c:53\n    #3 0x556c194f672e in fuzzloop /sharedockerin/ta1729664329765ysdw/test_file.cpp:24\n    #4 0x556c194fff29 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #5 0x556c194f63a8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #6 0x7f240b07cd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #7 0x7f240b07ce3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #8 0x556c194f64f4 in _start (/sharedockerin/ta1729664329765ysdw/clouditera+0xf4f4)\n\n0x60200002e793 is located 0 bytes to the right of 3-byte region [0x60200002e790,0x60200002e793)\nallocated by thread T0 here:\n    #0 0x7f240bca3887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x556c1950013c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:827 in __interceptor_memcpy\nShadow bytes around the buggy address:\n  0x0c047fffdca0: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd\n  0x0c047fffdcb0: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd\n  0x0c047fffdcc0: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd\n  0x0c047fffdcd0: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd\n  0x0c047fffdce0: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd\n=>0x0c047fffdcf0: fa fa[03]fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fffdd00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fffdd10: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fffdd20: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fffdd30: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fffdd40: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "global-buffer-overflow", "B": "heap-use-after-free", "C": "out-of-memory", "D": "heap-buffer-overflow", "answer": "D"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==208==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020000142f3 at pc 0x7f9c7b7fd397 bp 0x7ffd5263deb0 sp 0x7ffd5263d658\nREAD of size 3 at 0x6020000142f3 thread T0\n    #0 0x7f9c7b7fd396 in __interceptor_memcpy ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:827\n    #1 0x56133dd4f986 in uint3korr /sourcecode/src/protocol/mysql_byteorder.h:179\n    #2 0x56133dd4fee8 in decode_length_safe /sourcecode/src/protocol/mysql_byteorder.c:53\n    #3 0x56133dd4cea3 in parse_field_count /sourcecode/src/protocol/mysql_parser.c:357\n    #4 0x56133dd49262 in mysql_parser_parse /sourcecode/src/protocol/mysql_parser.c:81\n    #5 0x56133dd4777b in fuzzloop /sharedockerin/ta1729664331891fgfr/test_file.cpp:21\n    #6 0x56133dd58bc9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #7 0x56133dd47448 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #8 0x7f9c7ac50d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #9 0x7f9c7ac50e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #10 0x56133dd47594 in _start (/sharedockerin/ta1729664331891fgfr/clouditera+0x19594)\n\n0x6020000142f3 is located 0 bytes to the right of 3-byte region [0x6020000142f0,0x6020000142f3)\nallocated by thread T0 here:\n    #0 0x7f9c7b877887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x56133dd58ddc in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:827 in __interceptor_memcpy\nShadow bytes around the buggy address:\n  0x0c047fffa800: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fffa810: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fffa820: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fffa830: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fffa840: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n=>0x0c047fffa850: fa fa fa fa fa fa fa fa fa fa fa fa fa fa[03]fa\n  0x0c047fffa860: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fffa870: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fffa880: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fa fa\n  0x0c047fffa890: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fffa8a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "double-free", "B": "heap-buffer-overflow", "C": "global-buffer-overflow", "D": "allocation-size-too-big", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==6226==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000008 at pc 0x55b2ec897a6d bp 0x7ffc613c80c0 sp 0x7ffc613c80b0\nWRITE of size 2 at 0x602000000008 thread T0\n    #0 0x55b2ec897a6c in block_free /sourcecode/lib/facil/fio.c:7837\n    #1 0x55b2ec89853b in block_slice_free /sourcecode/lib/facil/fio.c:7935\n    #2 0x55b2ec898e11 in fio_free /sourcecode/lib/facil/fio.c:8097\n    #3 0x55b2ec898e8a in fio_realloc2 /sourcecode/lib/facil/fio.c:8129\n    #4 0x55b2ec898fca in fio_realloc /sourcecode/lib/facil/fio.c:8136\n    #5 0x55b2ec82126e in fuzzloop /dockerin/fuzz_drivers/tf1729828850338ecip.c:39\n    #6 0x55b2ec8d0e69 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #7 0x55b2ec8209d8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #8 0x7fac7132cd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #9 0x7fac7132ce3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #10 0x55b2ec820b24 in _start (/dockerin/fuzz_drivers/tf1729828850338ecip.out+0xc5b24)\n\n0x602000000008 is located 8 bytes to the left of 15-byte region [0x602000000010,0x60200000001f)\nallocated by thread T0 here:\n    #0 0x7fac71d05887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x7fac713ab58e in strdup (/lib/x86_64-linux-gnu/libc.so.6+0xa858e)\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/lib/facil/fio.c:7837 in block_free\nShadow bytes around the buggy address:\n  0x0c047fff7fb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n=>0x0c047fff8000: fa[fa]00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa fd fd\n  0x0c047fff8020: fa fa fd fd fa fa fd fa fa fa fd fa fa fa 00 04\n  0x0c047fff8030: fa fa 00 fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fff8040: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fff8050: fa fa fd fa fa fa fd fd fa fa fd fa fa fa fd fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "invalid-posix-memalign-alignment", "B": "global-buffer-overflow", "C": "heap-buffer-overflow", "D": "allocation-size-too-big", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==4171==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200000069c at pc 0x7fcdc14b204f bp 0x7ffcd8d78110 sp 0x7ffcd8d778a0\nWRITE of size 13 at 0x60200000069c thread T0\n    #0 0x7fcdc14b204e in __interceptor_vsprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1687\n    #1 0x7fcdc14b227e in __interceptor_sprintf ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1730\n    #2 0x555cbf4b51c5 in fio_ftoa /sourcecode/lib/facil/fio.c:4997\n    #3 0x555cbf471288 in fuzzloop /dockerin/fuzz_drivers/tf1729822402974mtmw.c:26\n    #4 0x555cbf520e69 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #5 0x555cbf4709d8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #6 0x7fcdc0b2ed8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #7 0x7fcdc0b2ee3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #8 0x555cbf470b24 in _start (/dockerin/fuzz_drivers/tf1729822402974mtmw.out+0xc5b24)\n\n0x60200000069c is located 0 bytes to the right of 12-byte region [0x602000000690,0x60200000069c)\nallocated by thread T0 here:\n    #0 0x7fcdc1507887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x555cbf52107c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1687 in __interceptor_vsprintf\nShadow bytes around the buggy address:\n  0x0c047fff8080: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fff8090: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fff80a0: fa fa 00 04 fa fa fd fd fa fa 00 fa fa fa fd fa\n  0x0c047fff80b0: fa fa 01 fa fa fa fd fa fa fa fd fd fa fa fd fa\n  0x0c047fff80c0: fa fa fd fa fa fa fd fd fa fa fd fa fa fa fd fa\n=>0x0c047fff80d0: fa fa 00[04]fa fa 00 fa fa fa 01 fa fa fa fa fa\n  0x0c047fff80e0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff80f0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8100: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8110: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8120: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "double-free", "B": "stack-buffer-overflow", "C": "heap-buffer-overflow", "D": "calloc parameters overflow", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==203==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000037391 at pc 0x56551533e989 bp 0x7fff18d98920 sp 0x7fff18d98910\nREAD of size 2 at 0x602000037391 thread T0\n    #0 0x56551533e988 in uint2korr /sourcecode/src/protocol/mysql_byteorder.h:44\n    #1 0x56551533f126 in decode_length_safe /sourcecode/src/protocol/mysql_byteorder.c:45\n    #2 0x56551533f592 in decode_string /sourcecode/src/protocol/mysql_byteorder.c:77\n    #3 0x56551533e73c in fuzzloop /sharedockerin/ta1729664330266xzik/test_file.cpp:22\n    #4 0x565515347f59 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #5 0x56551533e3a8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #6 0x7f99e539fd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #7 0x7f99e539fe3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #8 0x56551533e4f4 in _start (/sharedockerin/ta1729664330266xzik/clouditera+0xf4f4)\n\n0x602000037392 is located 0 bytes to the right of 2-byte region [0x602000037390,0x602000037392)\nallocated by thread T0 here:\n    #0 0x7f99e5fc6887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x56551534816c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/src/protocol/mysql_byteorder.h:44 in uint2korr\nShadow bytes around the buggy address:\n  0x0c047fffee20: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd\n  0x0c047fffee30: fa fa fd fa fa fa fd fd fa fa fd fd fa fa fd fd\n  0x0c047fffee40: fa fa fd fa fa fa fd fa fa fa fd fd fa fa fd fd\n  0x0c047fffee50: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fd\n  0x0c047fffee60: fa fa fd fd fa fa fd fd fa fa 00 00 fa fa fd fd\n=>0x0c047fffee70: fa fa[02]fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fffee80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fffee90: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fffeea0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fffeeb0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fffeec0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "heap-buffer-overflow", "B": "allocation-size-too-big", "C": "stack-buffer-overflow", "D": "global-buffer-overflow", "answer": "A"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==148925==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6060000000b8 at pc 0x55eca9ee875c bp 0x7fff60758590 sp 0x7fff60758580\nREAD of size 4 at 0x6060000000b8 thread T0\n    #0 0x55eca9ee875b in UPSGroupPolicy::add_server_locked(EndpointAddress*) /sourcecode/src/nameservice/UpstreamPolicies.cc:292\n    #1 0x55eca9eee8c9 in UPSWeightedRandomPolicy::add_server_locked(EndpointAddress*) /sourcecode/src/nameservice/UpstreamPolicies.cc:480\n    #2 0x55eca9ef6aa8 in UPSVNSWRRPolicy::add_server_locked(EndpointAddress*) /sourcecode/src/nameservice/UpstreamPolicies.cc:655\n    #3 0x55eca9edaff0 in fuzzloop /dockerin/fuzz_drivers/tf1729593105364aiic.cpp:40\n    #4 0x55ecaa0a96a9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #5 0x55eca9eda978 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #6 0x7f970e3c4d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #7 0x7f970e3c4e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #8 0x55eca9edaac4 in _start (/dockerin/fuzz_drivers/tf1729593105364aiic.out+0x382ac4)\n\n0x6060000000b8 is located 0 bytes to the right of 56-byte region [0x606000000080,0x6060000000b8)\nallocated by thread T0 here:\n    #0 0x7f970efed1e7 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cpp:99\n    #1 0x55eca9edca2d in std::_MakeUniq<PolicyAddrParams>::__single_object std::make_unique<PolicyAddrParams>() (/dockerin/fuzz_drivers/tf1729593105364aiic.out+0x384a2d)\n    #2 0x55eca9edad3d in fuzzloop /dockerin/fuzz_drivers/tf1729593105364aiic.cpp:38\n    #3 0x55ecaa0a96a9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/src/nameservice/UpstreamPolicies.cc:292 in UPSGroupPolicy::add_server_locked(EndpointAddress*)\nShadow bytes around the buggy address:\n  0x0c0c7fff7fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c0c7fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c0c7fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c0c7fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c0c7fff8000: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa\n=>0x0c0c7fff8010: 00 00 00 00 00 00 00[fa]fa fa fa fa fa fa fa fa\n  0x0c0c7fff8020: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c0c7fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c0c7fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c0c7fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c0c7fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "out-of-memory", "B": "stack-buffer-overflow", "C": "heap-buffer-overflow", "D": "invalid-posix-memalign-alignment", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==1495==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200000011c at pc 0x55e4154e480b bp 0x7fff5465c340 sp 0x7fff5465c330\nWRITE of size 1 at 0x60200000011c thread T0\n    #0 0x55e4154e480a in fio_ltoa /sourcecode/lib/facil/fio.c:4949\n    #1 0x55e41559fdaa in http_date2rfc7231 /sourcecode/lib/facil/http/http.c:2217\n    #2 0x55e41557c4f6 in http_date2str /sourcecode/lib/facil/http/http.h:923\n    #3 0x55e4155a4d90 in http_time2str /sourcecode/lib/facil/http/http.c:2353\n    #4 0x55e41549380a in fuzzloop /dockerin/fuzz_drivers/tf1729828200445vlro.c:29\n    #5 0x55e415612249 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #6 0x55e415492ab8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #7 0x7f49e8339d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #8 0x7f49e8339e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #9 0x55e415492c04 in _start (/dockerin/fuzz_drivers/tf1729828200445vlro.out+0x1dbc04)\n\n0x60200000011c is located 0 bytes to the right of 12-byte region [0x602000000110,0x60200000011c)\nallocated by thread T0 here:\n    #0 0x7f49e8d12887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55e41561245c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/lib/facil/fio.c:4949 in fio_ltoa\nShadow bytes around the buggy address:\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 04\n=>0x0c047fff8020: fa fa 00[04]fa fa 00 fa fa fa 00 fa fa fa fa fa\n  0x0c047fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "stack-buffer-overflow", "B": "heap-buffer-overflow", "C": "memcpy-param-overlap", "D": "larger memory malloc", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==28796==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000d71 at pc 0x562ba18ea8c4 bp 0x7ffc2ddbde60 sp 0x7ffc2ddbde50\nWRITE of size 1 at 0x602000000d71 thread T0\n    #0 0x562ba18ea8c3 in to_hex include/internal/to_hex.h:17\n    #1 0x562ba18ec169 in ossl_to_hex crypto/o_str.c:433\n    #2 0x562ba18ea6e0 in fuzzloop /dockerin/fuzz_drivers/tf1730183726674jmdv.c:26\n    #3 0x562ba18f4aa9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #4 0x562ba18ea408 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #5 0x7fe2549fbd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #6 0x7fe2549fbe3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #7 0x562ba18ea554 in _start (/dockerin/fuzz_drivers/tf1730183726674jmdv.out+0xf554)\n\n0x602000000d71 is located 0 bytes to the right of 1-byte region [0x602000000d70,0x602000000d71)\nallocated by thread T0 here:\n    #0 0x7fe255287887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x562ba18f4cbc in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow include/internal/to_hex.h:17 in to_hex\nShadow bytes around the buggy address:\n  0x0c047fff8150: fa fa fd fd fa fa fd fa fa fa fd fd fa fa fd fa\n  0x0c047fff8160: fa fa fd fd fa fa fd fa fa fa fd fd fa fa fd fa\n  0x0c047fff8170: fa fa fd fa fa fa fd fa fa fa fd fd fa fa fd fa\n  0x0c047fff8180: fa fa fd fd fa fa fd fa fa fa fd fd fa fa fd fa\n  0x0c047fff8190: fa fa fd fd fa fa fd fa fa fa fd fa fa fa fd fd\n=>0x0c047fff81a0: fa fa fd fa fa fa fd fd fa fa fd fa fa fa[01]fa\n  0x0c047fff81b0: fa fa 01 fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff81c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff81d0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff81e0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff81f0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "heap-buffer-overflow", "B": "out-of-memory", "C": "invalid-posix-memalign-alignment", "D": "allocation-size-too-big", "answer": "A"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==3036==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200000011c at pc 0x560db30199fb bp 0x7ffd1b6d64e0 sp 0x7ffd1b6d64d0\nWRITE of size 1 at 0x60200000011c thread T0\n    #0 0x560db30199fa in fio_rand_bytes /sourcecode/lib/facil/fio.c:8219\n    #1 0x560db2fa126e in fuzzloop /dockerin/fuzz_drivers/tf1729822402999banr.c:39\n    #2 0x560db3050e49 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x560db2fa09d8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7f31f91c2d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7f31f91c2e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x560db2fa0b24 in _start (/dockerin/fuzz_drivers/tf1729822402999banr.out+0xc5b24)\n\n0x60200000011c is located 0 bytes to the right of 12-byte region [0x602000000110,0x60200000011c)\nallocated by thread T0 here:\n    #0 0x7f31f9b9b887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x560db305105c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/lib/facil/fio.c:8219 in fio_rand_bytes\nShadow bytes around the buggy address:\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 04\n=>0x0c047fff8020: fa fa 00[04]fa fa 00 fa fa fa 00 fa fa fa fa fa\n  0x0c047fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "stack-buffer-underflow", "B": "allocation-size-too-big", "C": "heap-buffer-overflow", "D": "calloc parameters overflow", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==25302==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000118 at pc 0x5559cc6716fa bp 0x7ffd62c116d0 sp 0x7ffd62c116c0\nREAD of size 8 at 0x602000000118 thread T0\n    #0 0x5559cc6716f9 in Executor::executor_thread_routine(void*) /sourcecode/src/kernel/Executor.cc:83\n    #1 0x5559cc670874 in fuzzloop /dockerin/fuzz_drivers/tf1729593105326rbnn.cpp:25\n    #2 0x5559cc680079 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x5559cc670638 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7faf5ac0fd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7faf5ac0fe3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x5559cc670784 in _start (/dockerin/fuzz_drivers/tf1729593105326rbnn.out+0x1a784)\n\n0x60200000011c is located 0 bytes to the right of 12-byte region [0x602000000110,0x60200000011c)\nallocated by thread T0 here:\n    #0 0x7faf5b836887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x5559cc68028c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/src/kernel/Executor.cc:83 in Executor::executor_thread_routine(void*)\nShadow bytes around the buggy address:\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 04\n=>0x0c047fff8020: fa fa 00[04]fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "heap-buffer-overflow", "B": "heap-use-after-free", "C": "memcpy-param-overlap", "D": "double-free", "answer": "A"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==13071==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6060000000b8 at pc 0x55bbaa3025ae bp 0x7ffeb3487d00 sp 0x7ffeb3487cf0\nREAD of size 4 at 0x6060000000b8 thread T0\n    #0 0x55bbaa3025ad in UPSGroupPolicy::add_server_locked(EndpointAddress*) /sourcecode/src/nameservice/UpstreamPolicies.cc:292\n    #1 0x55bbaa2f5ff0 in fuzzloop /dockerin/fuzz_drivers/tf1729593105357fnjc.cpp:39\n    #2 0x55bbaa4c37c9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x55bbaa2f5978 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7f3f440f6d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7f3f440f6e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x55bbaa2f5ac4 in _start (/dockerin/fuzz_drivers/tf1729593105357fnjc.out+0x380ac4)\n\n0x6060000000b8 is located 0 bytes to the right of 56-byte region [0x606000000080,0x6060000000b8)\nallocated by thread T0 here:\n    #0 0x7f3f44d1f1e7 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cpp:99\n    #1 0x55bbaa2f6bfb in std::_MakeUniq<PolicyAddrParams>::__single_object std::make_unique<PolicyAddrParams>() /usr/include/c++/11/bits/unique_ptr.h:962\n    #2 0x55bbaa2f5d3d in fuzzloop /dockerin/fuzz_drivers/tf1729593105357fnjc.cpp:37\n    #3 0x55bbaa4c37c9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/src/nameservice/UpstreamPolicies.cc:292 in UPSGroupPolicy::add_server_locked(EndpointAddress*)\nShadow bytes around the buggy address:\n  0x0c0c7fff7fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c0c7fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c0c7fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c0c7fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c0c7fff8000: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa\n=>0x0c0c7fff8010: 00 00 00 00 00 00 00[fa]fa fa fa fa fa fa fa fa\n  0x0c0c7fff8020: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c0c7fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c0c7fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c0c7fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c0c7fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "heap-buffer-overflow", "B": "out-of-memory", "C": "memcpy-param-overlap", "D": "unknown-crash", "answer": "A"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==751==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200000015c at pc 0x560e8da6f03e bp 0x7ffdc63abf20 sp 0x7ffdc63abf10\nREAD of size 1 at 0x60200000015c thread T0\n    #0 0x560e8da6f03d in http_decode_url /sourcecode/lib/facil/http/http.c:2391\n    #1 0x560e8d95d81c in fuzzloop /dockerin/fuzz_drivers/tf1729675748915apso.c:29\n    #2 0x560e8dadb289 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x560e8d95cab8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7fac1dcf6d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7fac1dcf6e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x560e8d95cc04 in _start (/dockerin/fuzz_drivers/tf1729675748915apso.out+0x1dac04)\n\n0x60200000015c is located 0 bytes to the right of 12-byte region [0x602000000150,0x60200000015c)\nallocated by thread T0 here:\n    #0 0x7fac1e6cf887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x560e8dadb49c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/lib/facil/http/http.c:2391 in http_decode_url\nShadow bytes around the buggy address:\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 04\n=>0x0c047fff8020: fa fa 00 04 fa fa 00 04 fa fa 00[04]fa fa 00 fa\n  0x0c047fff8030: fa fa 00 fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "invalid-posix-memalign-alignment", "B": "bad-free", "C": "larger memory malloc", "D": "heap-buffer-overflow", "answer": "D"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==46296==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000004ffc at pc 0x7f30d1fd1397 bp 0x7ffe3d8b39b0 sp 0x7ffe3d8b3158\nREAD of size 65535 at 0x602000004ffc thread T0\n    #0 0x7f30d1fd1396 in __interceptor_memcpy ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:827\n    #1 0x7f30d13e0dfb in ASN1_STRING_set crypto/asn1/asn1_lib.c:323\n    #2 0x7f30d19d998c in X509_ATTRIBUTE_set1_data crypto/x509/x509_att.c:365\n    #3 0x7f30d19d9511 in X509_ATTRIBUTE_create_by_OBJ crypto/x509/x509_att.c:303\n    #4 0x7f30d19d93b1 in X509_ATTRIBUTE_create_by_NID crypto/x509/x509_att.c:279\n    #5 0x7f30d19d8cf5 in ossl_x509at_add1_attr_by_NID crypto/x509/x509_att.c:178\n    #6 0x7f30d19d8e8c in X509at_add1_attr_by_NID crypto/x509/x509_att.c:201\n    #7 0x7f30d19d77cc in X509_ACERT_add1_attr_by_NID crypto/x509/x509_acert.c:238\n    #8 0x55d5d89a447c in fuzzloop /dockerin/fuzz_drivers/tf1730183724668yxhp.c:31\n    #9 0x55d5d89aca79 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #10 0x55d5d89a41e8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #11 0x7f30d0a8fd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #12 0x7f30d0a8fe3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #13 0x55d5d89a4334 in _start (/dockerin/fuzz_drivers/tf1730183724668yxhp.out+0xe334)\n\n0x602000004ffc is located 0 bytes to the right of 12-byte region [0x602000004ff0,0x602000004ffc)\nallocated by thread T0 here:\n    #0 0x7f30d204b887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55d5d89acc8c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:827 in __interceptor_memcpy\nShadow bytes around the buggy address:\n  0x0c047fff89a0: fa fa fd fa fa fa fd fa fa fa fd fd fa fa fd fa\n  0x0c047fff89b0: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa fd fa\n  0x0c047fff89c0: fa fa fd fa fa fa fd fd fa fa fd fa fa fa 00 04\n  0x0c047fff89d0: fa fa 00 04 fa fa 00 04 fa fa fd fa fa fa fd fa\n  0x0c047fff89e0: fa fa fd fd fa fa fd fa fa fa 00 04 fa fa 00 04\n=>0x0c047fff89f0: fa fa 00 04 fa fa 04 fa fa fa 04 fa fa fa 00[04]\n  0x0c047fff8a00: fa fa 04 fa fa fa 00 00 fa fa fa fa fa fa fa fa\n  0x0c047fff8a10: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8a20: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8a30: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8a40: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "stack-buffer-underflow", "B": "stack-buffer-overflow", "C": "allocation-size-too-big", "D": "heap-buffer-overflow", "answer": "D"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==172==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200000a81a at pc 0x55f80eff3f66 bp 0x7ffe2fb91070 sp 0x7ffe2fb91060\nREAD of size 1 at 0x60200000a81a thread T0\n    #0 0x55f80eff3f65 in fio_atol_consume_hex /sourcecode/lib/facil/fio.c:4699\n    #1 0x55f80eff55da in fio_atol /sourcecode/lib/facil/fio.c:4776\n    #2 0x55f80efa4c47 in fio_json_parse /sourcecode/lib/facil/fiobj/fio_json_parser.h:453\n    #3 0x55f80efb334c in fiobj_json2obj /sourcecode/lib/facil/fiobj/fiobj_json.c:379\n    #4 0x55f80ef9e3be in fuzzloop /sharedockerin/ta1730101611730qass/test_file.c:19\n    #5 0x55f80f0a3cb9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #6 0x55f80ef9da98 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #7 0x7f9eec816d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #8 0x7f9eec816e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #9 0x55f80ef9dbe4 in _start (/sharedockerin/ta1730101611730qass/clouditera+0x134be4)\n\n0x60200000a81a is located 0 bytes to the right of 10-byte region [0x60200000a810,0x60200000a81a)\nallocated by thread T0 here:\n    #0 0x7f9eed1ef887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55f80f0a3ecc in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/lib/facil/fio.c:4699 in fio_atol_consume_hex\nShadow bytes around the buggy address:\n  0x0c047fff94b0: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fff94c0: fa fa 00 00 fa fa 03 fa fa fa 00 07 fa fa fd fa\n  0x0c047fff94d0: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fff94e0: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fff94f0: fa fa fd fa fa fa fd fa fa fa fd fd fa fa fd fa\n=>0x0c047fff9500: fa fa 00[02]fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff9510: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff9520: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff9530: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff9540: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff9550: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "stack-buffer-overflow", "B": "invalid-posix-memalign-alignment", "C": "allocation-size-too-big", "D": "heap-buffer-overflow", "answer": "D"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==880==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200000011c at pc 0x7fb2bce5ab39 bp 0x7ffc422f15e0 sp 0x7ffc422f0d88\nREAD of size 13 at 0x60200000011c thread T0\n    #0 0x7fb2bce5ab38 in __interceptor_getaddrinfo ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:2594\n    #1 0x55661e9729b9 in fio_local_addr /sourcecode/lib/facil/fio.c:657\n    #2 0x55661e95626e in fuzzloop /dockerin/fuzz_drivers/tf1729822402978oeyf.c:38\n    #3 0x55661ea05e49 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #4 0x55661e9559d8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #5 0x7fb2bc4a8d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #6 0x7fb2bc4a8e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #7 0x55661e955b24 in _start (/dockerin/fuzz_drivers/tf1729822402978oeyf.out+0xc5b24)\n\n0x60200000011c is located 0 bytes to the right of 12-byte region [0x602000000110,0x60200000011c)\nallocated by thread T0 here:\n    #0 0x7fb2bce81887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55661ea0605c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:2594 in __interceptor_getaddrinfo\nShadow bytes around the buggy address:\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 04\n=>0x0c047fff8020: fa fa 00[04]fa fa 00 fa fa fa 00 fa fa fa fa fa\n  0x0c047fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "global-buffer-overflow", "B": "heap-buffer-overflow", "C": "stack-buffer-overflow", "D": "memcpy-param-overlap", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==152624==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000120 at pc 0x56501661c04f bp 0x7ffce95223d0 sp 0x7ffce95223c0\nREAD of size 8 at 0x602000000120 thread T0\n    #0 0x56501661c04e in rb_first /sourcecode/src/kernel/rbtree.c:306\n    #1 0x565016616666 in fuzzloop /dockerin/fuzz_drivers/tf1729594883504dqsh.cpp:18\n    #2 0x565016625ad9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x565016616348 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7fb53ebc5d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7fb53ebc5e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x565016616494 in _start (/dockerin/fuzz_drivers/tf1729594883504dqsh.out+0x17494)\n\n0x602000000120 is located 4 bytes to the right of 12-byte region [0x602000000110,0x60200000011c)\nallocated by thread T0 here:\n    #0 0x7fb53f7ec887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x565016625cec in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/src/kernel/rbtree.c:306 in rb_first\nShadow bytes around the buggy address:\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 04\n=>0x0c047fff8020: fa fa 00 04[fa]fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "heap-buffer-overflow", "B": "larger memory malloc", "C": "bad-free", "D": "invalid-posix-memalign-alignment", "answer": "A"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==4958==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020000001e0 at pc 0x557d426bb8a5 bp 0x7ffe8acf0c20 sp 0x7ffe8acf0c10\nREAD of size 2 at 0x6020000001e0 thread T0\n    #0 0x557d426bb8a4 in value_hash_function /sourcecode/src/compiler/hash_tables/value_set.c:11\n    #1 0x557d426bd49d in ht_remove /sourcecode/external/hash/hash_table_impl.h:199\n    #2 0x557d426bbe61 in fb_value_set_remove /sourcecode/src/compiler/hash_tables/value_set.c:26\n    #3 0x557d426af82e in fuzzloop /dockerin/fuzz_drivers/tf1727601035308xcel.c:36\n    #4 0x557d426c64c9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #5 0x557d426a3548 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #6 0x7fa7170cdd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #7 0x7fa7170cde3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #8 0x557d426a3694 in _start (/dockerin/fuzz_drivers/tf1727601035308xcel.out+0x27694)\n\n0x6020000001e0 is located 4 bytes to the right of 12-byte region [0x6020000001d0,0x6020000001dc)\nallocated by thread T0 here:\n    #0 0x7fa717aa6887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x557d426c66dc in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/src/compiler/hash_tables/value_set.c:11 in value_hash_function\nShadow bytes around the buggy address:\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 04\n  0x0c047fff8020: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 fa\n=>0x0c047fff8030: fa fa 00 fa fa fa 00 04 fa fa 00 04[fa]fa 00 fa\n  0x0c047fff8040: fa fa 00 fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "heap-buffer-overflow", "B": "stack-buffer-underflow", "C": "global-buffer-overflow", "D": "bad-free", "answer": "A"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==309==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000004bb8 at pc 0x55b9b0b38ed8 bp 0x7ffd4ca58240 sp 0x7ffd4ca58230\nREAD of size 8 at 0x602000004bb8 thread T0\n    #0 0x55b9b0b38ed7 in uint8korr /sourcecode/src/protocol/mysql_byteorder.h:58\n    #1 0x55b9b0b39742 in decode_length_safe /sourcecode/src/protocol/mysql_byteorder.c:61\n    #2 0x55b9b0b39909 in decode_string /sourcecode/src/protocol/mysql_byteorder.c:77\n    #3 0x55b9b0b340a8 in parse_ok_packet /sourcecode/src/protocol/mysql_parser.c:207\n    #4 0x55b9b0b3296a in mysql_parser_parse /sourcecode/src/protocol/mysql_parser.c:81\n    #5 0x55b9b0b31703 in fuzzloop /sharedockerin/ta1729664331306rwdc/test_file.cpp:21\n    #6 0x55b9b0b422c9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #7 0x55b9b0b313e8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #8 0x7fc1c2daad8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #9 0x7fc1c2daae3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #10 0x55b9b0b31534 in _start (/sharedockerin/ta1729664331306rwdc/clouditera+0x18534)\n\n0x602000004bbf is located 0 bytes to the right of 15-byte region [0x602000004bb0,0x602000004bbf)\nallocated by thread T0 here:\n    #0 0x7fc1c39d1887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55b9b0b424dc in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/src/protocol/mysql_byteorder.h:58 in uint8korr\nShadow bytes around the buggy address:\n  0x0c047fff8920: fa fa fd fa fa fa 00 00 fa fa 00 04 fa fa fd fa\n  0x0c047fff8930: fa fa fd fd fa fa fd fd fa fa fd fa fa fa fd fd\n  0x0c047fff8940: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd\n  0x0c047fff8950: fa fa fa fa fa fa fd fa fa fa fd fa fa fa fd fd\n  0x0c047fff8960: fa fa fd fd fa fa fa fa fa fa fa fa fa fa fa fa\n=>0x0c047fff8970: fa fa fa fa fa fa 00[07]fa fa fa fa fa fa fd fa\n  0x0c047fff8980: fa fa fa fa fa fa fd fa fa fa fd fd fa fa fd fd\n  0x0c047fff8990: fa fa fa fa fa fa fd fa fa fa fd fd fa fa fd fa\n  0x0c047fff89a0: fa fa fd fd fa fa fd fd fa fa fa fa fa fa fd fa\n  0x0c047fff89b0: fa fa fd fa fa fa fa fa fa fa fd fa fa fa fd fa\n  0x0c047fff89c0: fa fa fd fa fa fa fd fd fa fa fa fa fa fa fd fd\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "SIGABRT", "B": "stack-buffer-underflow", "C": "heap-buffer-overflow", "D": "double-free", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==3571==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000138 at pc 0x562337f74b6d bp 0x7ffc81052cf0 sp 0x7ffc81052ce0\nREAD of size 8 at 0x602000000138 thread T0\n    #0 0x562337f74b6c in http_upgrade2ws /sourcecode/lib/facil/http/http.c:697\n    #1 0x562337e7f92a in fuzzloop /dockerin/fuzz_drivers/tf1729823021368xeeh.c:22\n    #2 0x562337ffe3c9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x562337e7eab8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7fad4091bd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7fad4091be3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x562337e7ec04 in _start (/dockerin/fuzz_drivers/tf1729823021368xeeh.out+0x1dbc04)\n\n0x60200000013c is located 0 bytes to the right of 12-byte region [0x602000000130,0x60200000013c)\nallocated by thread T0 here:\n    #0 0x7fad412f4887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x562337ffe5dc in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/lib/facil/http/http.c:697 in http_upgrade2ws\nShadow bytes around the buggy address:\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 04\n=>0x0c047fff8020: fa fa 00 04 fa fa 00[04]fa fa 00 04 fa fa fa fa\n  0x0c047fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "unknown-crash", "B": "memcpy-param-overlap", "C": "heap-buffer-overflow", "D": "heap-use-after-free", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==1919==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000120 at pc 0x5591b9fa96a3 bp 0x7ffcdcf9e1b0 sp 0x7ffcdcf9e1a0\nWRITE of size 8 at 0x602000000120 thread T0\n    #0 0x5591b9fa96a2 in SubTask::set_pointer(void*) (/dockerin/fuzz_drivers/tf1729593940535brpk.out+0x326a2)\n    #1 0x5591b9faca5d in SeriesWork::SeriesWork(SubTask*, std::function<void (SeriesWork const*)>&&) /sourcecode/src/factory/Workflow.cc:37\n    #2 0x5591b9fa9c31 in Workflow::create_series_work(SubTask*, SubTask*, std::function<void (SeriesWork const*)>) (/dockerin/fuzz_drivers/tf1729593940535brpk.out+0x32c31)\n    #3 0x5591b9fa7b11 in fuzzloop /dockerin/fuzz_drivers/tf1729593940535brpk.cpp:18\n    #4 0x5591b9fc2829 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #5 0x5591b9fa75c8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #6 0x7f55ff692d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #7 0x7f55ff692e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #8 0x5591b9fa7714 in _start (/dockerin/fuzz_drivers/tf1729593940535brpk.out+0x30714)\n\n0x602000000120 is located 4 bytes to the right of 12-byte region [0x602000000110,0x60200000011c)\nallocated by thread T0 here:\n    #0 0x7f56002b9887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x5591b9fc2a3c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow (/dockerin/fuzz_drivers/tf1729593940535brpk.out+0x326a2) in SubTask::set_pointer(void*)\nShadow bytes around the buggy address:\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 04\n=>0x0c047fff8020: fa fa 00 04[fa]fa 00 04 fa fa 00 04 fa fa fa fa\n  0x0c047fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "heap-use-after-free", "B": "SIGABRT", "C": "heap-buffer-overflow", "D": "unknown-crash", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==28260==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000228 at pc 0x55eafa0d0f82 bp 0x7ffc0e898d70 sp 0x7ffc0e898d60\nREAD of size 4 at 0x602000000228 thread T0\n    #0 0x55eafa0d0f81 in Communicator::accept(sockaddr const*, unsigned int, int, void*) /sourcecode/src/kernel/Communicator.cc:1365\n    #1 0x55eafa0b4ed3 in fuzzloop /dockerin/fuzz_drivers/tf1729593105311lowx.cpp:51\n    #2 0x55eafa10e3c9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x55eafa0b4b38 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7f859869dd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7f859869de3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x55eafa0b4c84 in _start (/dockerin/fuzz_drivers/tf1729593105311lowx.out+0x83c84)\n\n0x602000000228 is located 12 bytes to the right of 12-byte region [0x602000000210,0x60200000021c)\nallocated by thread T0 here:\n    #0 0x7f85992c4887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55eafa10e5dc in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/src/kernel/Communicator.cc:1365 in Communicator::accept(sockaddr const*, unsigned int, int, void*)\nShadow bytes around the buggy address:\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 00\n  0x0c047fff8020: fa fa 00 00 fa fa 00 00 fa fa 00 00 fa fa 04 fa\n  0x0c047fff8030: fa fa 04 fa fa fa 04 fa fa fa 04 fa fa fa 00 04\n=>0x0c047fff8040: fa fa 00 04 fa[fa]fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8090: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "heap-buffer-overflow", "B": "unknown-crash", "C": "stack-buffer-overflow", "D": "memcpy-param-overlap", "answer": "A"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==267897==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000158 at pc 0x5598b42f6584 bp 0x7fffb5e2af30 sp 0x7fffb5e2af20\nREAD of size 8 at 0x602000000158 thread T0\n    #0 0x5598b42f6583 in Executor::request(ExecSession*, ExecQueue*) /sourcecode/src/kernel/Executor.cc:132\n    #1 0x5598b42f02ac in ExecRequest::dispatch() (/dockerin/fuzz_drivers/tf1729655213129bbmt.out+0x442ac)\n    #2 0x5598b42f0c5c in Workflow::start_series_work(SubTask*, std::function<void (SeriesWork const*)>) (/dockerin/fuzz_drivers/tf1729655213129bbmt.out+0x44c5c)\n    #3 0x5598b42f0df8 in WFGoTask::start() (/dockerin/fuzz_drivers/tf1729655213129bbmt.out+0x44df8)\n    #4 0x5598b42ede89 in fuzzloop /dockerin/fuzz_drivers/tf1729655213129bbmt.cpp:40\n    #5 0x5598b4312539 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #6 0x5598b42ed818 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #7 0x7ff166957d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #8 0x7ff166957e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #9 0x5598b42ed964 in _start (/dockerin/fuzz_drivers/tf1729655213129bbmt.out+0x41964)\n\n0x60200000015c is located 0 bytes to the right of 12-byte region [0x602000000150,0x60200000015c)\nallocated by thread T0 here:\n    #0 0x7ff16757e887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x5598b431274c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/src/kernel/Executor.cc:132 in Executor::request(ExecSession*, ExecQueue*)\nShadow bytes around the buggy address:\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 04\n=>0x0c047fff8020: fa fa 00 04 fa fa 00 04 fa fa 00[04]fa fa 00 04\n  0x0c047fff8030: fa fa 00 04 fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "heap-buffer-overflow", "B": "out-of-memory", "C": "double-free", "D": "stack-buffer-underflow", "answer": "A"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==299==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000003073 at pc 0x55cab905b08b bp 0x7ffe5cc8c080 sp 0x7ffe5cc8c070\nREAD of size 2 at 0x602000003073 thread T0\n    #0 0x55cab905b08a in uint2korr /sourcecode/src/protocol/mysql_byteorder.h:44\n    #1 0x55cab905b828 in decode_length_safe /sourcecode/src/protocol/mysql_byteorder.c:45\n    #2 0x55cab905626d in parse_ok_packet /sourcecode/src/protocol/mysql_parser.c:194\n    #3 0x55cab9054cf5 in mysql_parser_parse /sourcecode/src/protocol/mysql_parser.c:81\n    #4 0x55cab906b087 in protocol::MySQLResponse::decode_packet(unsigned char const*, unsigned long) /sourcecode/src/protocol/MySQLMessage.cc:623\n    #5 0x55cab8ffd6ae in fuzzloop /sharedockerin/ta1729664328007pfbx/test_file.cpp:19\n    #6 0x55cab90a1929 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #7 0x55cab8ffd2b8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #8 0x7f0f05d35d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #9 0x7f0f05d35e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #10 0x55cab8ffd404 in _start (/sharedockerin/ta1729664328007pfbx/clouditera+0x109404)\n\n0x602000003074 is located 0 bytes to the right of 4-byte region [0x602000003070,0x602000003074)\nallocated by thread T0 here:\n    #0 0x7f0f0695c887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55cab90a1b3c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/src/protocol/mysql_byteorder.h:44 in uint2korr\nShadow bytes around the buggy address:\n  0x0c047fff85b0: fa fa fd fd fa fa fd fa fa fa fd fa fa fa fd fd\n  0x0c047fff85c0: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fff85d0: fa fa fd fd fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fff85e0: fa fa fd fa fa fa fd fa fa fa fd fd fa fa fd fa\n  0x0c047fff85f0: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n=>0x0c047fff8600: fa fa fd fa fa fa fd fa fa fa fd fa fa fa[04]fa\n  0x0c047fff8610: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8620: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8630: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8640: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8650: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "global-buffer-overflow", "B": "out-of-memory", "C": "heap-buffer-overflow", "D": "heap-use-after-free", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==1845==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200000011c at pc 0x55dda867d2b5 bp 0x7ffc4927ad80 sp 0x7ffc4927ad70\nREAD of size 1 at 0x60200000011c thread T0\n    #0 0x55dda867d2b4 in fio_siphash_xy /sourcecode/lib/facil/fio.c:8339\n    #1 0x55dda867e80e in fio_siphash13 /sourcecode/lib/facil/fio.c:8403\n    #2 0x55dda8602c4a in fuzzloop /dockerin/fuzz_drivers/tf1729828200290ivsd.c:23\n    #3 0x55dda86b27f9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #4 0x55dda86029d8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #5 0x7f1455bc7d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #6 0x7f1455bc7e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #7 0x55dda8602b24 in _start (/dockerin/fuzz_drivers/tf1729828200290ivsd.out+0xc4b24)\n\n0x60200000011c is located 0 bytes to the right of 12-byte region [0x602000000110,0x60200000011c)\nallocated by thread T0 here:\n    #0 0x7f14565a0887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55dda86b2a0c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/lib/facil/fio.c:8339 in fio_siphash_xy\nShadow bytes around the buggy address:\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 04\n=>0x0c047fff8020: fa fa 00[04]fa fa 00 fa fa fa 00 fa fa fa 00 fa\n  0x0c047fff8030: fa fa 00 fa fa fa 00 fa fa fa 00 fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "unknown-crash", "B": "out-of-memory", "C": "heap-buffer-overflow", "D": "allocation-size-too-big", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==203==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200007f033 at pc 0x7f99e5f4c397 bp 0x7fff18d98920 sp 0x7fff18d980c8\nREAD of size 3 at 0x60200007f033 thread T0\n    #0 0x7f99e5f4c396 in __interceptor_memcpy ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:827\n    #1 0x56551533ed17 in uint3korr /sourcecode/src/protocol/mysql_byteorder.h:179\n    #2 0x56551533f279 in decode_length_safe /sourcecode/src/protocol/mysql_byteorder.c:53\n    #3 0x56551533f592 in decode_string /sourcecode/src/protocol/mysql_byteorder.c:77\n    #4 0x56551533e73c in fuzzloop /sharedockerin/ta1729664330266xzik/test_file.cpp:22\n    #5 0x565515347f59 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #6 0x56551533e3a8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #7 0x7f99e539fd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #8 0x7f99e539fe3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #9 0x56551533e4f4 in _start (/sharedockerin/ta1729664330266xzik/clouditera+0xf4f4)\n\n0x60200007f033 is located 0 bytes to the right of 3-byte region [0x60200007f030,0x60200007f033)\nallocated by thread T0 here:\n    #0 0x7f99e5fc6887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x56551534816c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:827 in __interceptor_memcpy\nShadow bytes around the buggy address:\n  0x0c0480007db0: fa fa fd fd fa fa fd fa fa fa fd fd fa fa fd fd\n  0x0c0480007dc0: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd\n  0x0c0480007dd0: fa fa fd fd fa fa fd fd fa fa fd fa fa fa fd fa\n  0x0c0480007de0: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd\n  0x0c0480007df0: fa fa fd fd fa fa 01 fa fa fa fd fa fa fa fd fa\n=>0x0c0480007e00: fa fa fd fa fa fa[03]fa fa fa fa fa fa fa fa fa\n  0x0c0480007e10: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c0480007e20: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c0480007e30: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c0480007e40: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c0480007e50: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "heap-use-after-free", "B": "invalid-posix-memalign-alignment", "C": "heap-buffer-overflow", "D": "stack-buffer-underflow", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==5818==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200000015c at pc 0x7f843da0108f bp 0x7fff02f6e7f0 sp 0x7fff02f6df98\nREAD of size 64797 at 0x60200000015c thread T0\n    #0 0x7f843da0108e in __interceptor_fwrite ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1160\n    #1 0x559e90e51d5f in __flatcc_fb_default_error_out /sourcecode/src/compiler/parser.c:25\n    #2 0x559e90e4feb6 in fuzzloop /dockerin/fuzz_drivers/tf1727601035232luzc.c:30\n    #3 0x559e90fc4b39 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #4 0x559e90e4e6f8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #5 0x7f843d09cd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #6 0x7f843d09ce3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #7 0x559e90e4e844 in _start (/dockerin/fuzz_drivers/tf1727601035232luzc.out+0x1e4844)\n\n0x60200000015c is located 0 bytes to the right of 12-byte region [0x602000000150,0x60200000015c)\nallocated by thread T0 here:\n    #0 0x7f843da75887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x559e90fc4d4c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:1160 in __interceptor_fwrite\nShadow bytes around the buggy address:\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 04\n=>0x0c047fff8020: fa fa 00 04 fa fa 00 04 fa fa 00[04]fa fa 00 fa\n  0x0c047fff8030: fa fa 00 fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "allocation-size-too-big", "B": "calloc parameters overflow", "C": "memcpy-param-overlap", "D": "heap-buffer-overflow", "answer": "D"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==775==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000008 at pc 0x562ec4a2cd96 bp 0x7fffa75e83f0 sp 0x7fffa75e83e0\nWRITE of size 2 at 0x602000000008 thread T0\n    #0 0x562ec4a2cd95 in block_free /sourcecode/lib/facil/fio.c:7837\n    #1 0x562ec4a2d864 in block_slice_free /sourcecode/lib/facil/fio.c:7935\n    #2 0x562ec4a2e13a in fio_free /sourcecode/lib/facil/fio.c:8097\n    #3 0x562ec49a45af in fio_str_free /sourcecode/lib/facil/fio.h:3853\n    #4 0x562ec49b2bae in fiobj_str_dealloc /sourcecode/lib/facil/fiobj/fiobj_str.c:65\n    #5 0x562ec499e77a in fiobj_free lib/facil/fiobj/fiobject.h:455\n    #6 0x562ec499e7ea in fuzzloop /dockerin/fuzz_drivers/tf1729823809899xkcw.c:20\n    #7 0x562ec4a8e619 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #8 0x562ec499da98 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #9 0x7fa9a7bdcd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #10 0x7fa9a7bdce3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #11 0x562ec499dbe4 in _start (/dockerin/fuzz_drivers/tf1729823809899xkcw.out+0x116be4)\n\n0x602000000008 is located 8 bytes to the left of 15-byte region [0x602000000010,0x60200000001f)\nallocated by thread T0 here:\n    #0 0x7fa9a85b5887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x7fa9a7c5b58e in strdup (/lib/x86_64-linux-gnu/libc.so.6+0xa858e)\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/lib/facil/fio.c:7837 in block_free\nShadow bytes around the buggy address:\n  0x0c047fff7fb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n=>0x0c047fff8000: fa[fa]00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 04\n  0x0c047fff8020: fa fa 00 04 fa fa 00 fa fa fa 00 fa fa fa fa fa\n  0x0c047fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "allocation-size-too-big", "B": "larger memory malloc", "C": "invalid-posix-memalign-alignment", "D": "heap-buffer-overflow", "answer": "D"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==44400==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200000015c at pc 0x7f7b820af84f bp 0x7ffe2796ecf0 sp 0x7ffe2796e498\nWRITE of size 20 at 0x60200000015c thread T0\n    #0 0x7f7b820af84e in __interceptor___xpg_strerror_r ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:3808\n    #1 0x5580532f7e8a in openssl_strerror_r crypto/o_str.c:390\n    #2 0x5580532f66f1 in fuzzloop /dockerin/fuzz_drivers/tf1730183725548oien.c:27\n    #3 0x558053300ab9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #4 0x5580532f6408 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #5 0x7f7b81892d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #6 0x7f7b81892e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #7 0x5580532f6554 in _start (/dockerin/fuzz_drivers/tf1730183725548oien.out+0xf554)\n\n0x60200000015c is located 0 bytes to the right of 12-byte region [0x602000000150,0x60200000015c)\nallocated by thread T0 here:\n    #0 0x7f7b8211e887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x558053300ccc in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:3808 in __interceptor___xpg_strerror_r\nShadow bytes around the buggy address:\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 04 fa\n=>0x0c047fff8020: fa fa 04 fa fa fa 00 04 fa fa 00[04]fa fa 00 fa\n  0x0c047fff8030: fa fa 00 fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "larger memory malloc", "B": "stack-buffer-overflow", "C": "heap-buffer-overflow", "D": "stack-buffer-underflow", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==2691==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000358 at pc 0x56261aabd937 bp 0x7ffc0b0a42a0 sp 0x7ffc0b0a4290\nREAD of size 8 at 0x602000000358 thread T0\n    #0 0x56261aabd936 in __flatcc_fb_clear_parser /sourcecode/src/compiler/parser.c:1502\n    #1 0x56261aac3f06 in flatcc_destroy_context /sourcecode/src/compiler/flatcc.c:519\n    #2 0x56261aaa497c in fuzzloop /dockerin/fuzz_drivers/tf1727601035340zgjo.c:25\n    #3 0x56261ac195c9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #4 0x56261aaa46f8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #5 0x7f8b9d7e0d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #6 0x7f8b9d7e0e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #7 0x56261aaa4844 in _start (/dockerin/fuzz_drivers/tf1727601035340zgjo.out+0x1e3844)\n\n0x602000000358 is located 572 bytes to the right of 12-byte region [0x602000000110,0x60200000011c)\nallocated by thread T0 here:\n    #0 0x7f8b9e1b9887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x56261ac197dc in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/src/compiler/parser.c:1502 in __flatcc_fb_clear_parser\nShadow bytes around the buggy address:\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 04\n  0x0c047fff8020: fa fa 00 04 fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n=>0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa[fa]fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8090: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff80a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff80b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "out-of-memory", "B": "heap-buffer-overflow", "C": "double-free", "D": "stack-buffer-overflow", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==299==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x619000019941 at pc 0x55cab90581b3 bp 0x7ffe5cc8c210 sp 0x7ffe5cc8c200\nREAD of size 1 at 0x619000019941 thread T0\n    #0 0x55cab90581b2 in parse_row_packet /sourcecode/src/protocol/mysql_parser.c:332\n    #1 0x55cab9054cf5 in mysql_parser_parse /sourcecode/src/protocol/mysql_parser.c:81\n    #2 0x55cab906b087 in protocol::MySQLResponse::decode_packet(unsigned char const*, unsigned long) /sourcecode/src/protocol/MySQLMessage.cc:623\n    #3 0x55cab8ffd6ae in fuzzloop /sharedockerin/ta1729664328007pfbx/test_file.cpp:19\n    #4 0x55cab90a1929 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #5 0x55cab8ffd2b8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #6 0x7f0f05d35d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #7 0x7f0f05d35e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #8 0x55cab8ffd404 in _start (/sharedockerin/ta1729664328007pfbx/clouditera+0x109404)\n\n0x619000019941 is located 0 bytes to the right of 961-byte region [0x619000019580,0x619000019941)\nallocated by thread T0 here:\n    #0 0x7f0f0695c887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55cab90a1b3c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/src/protocol/mysql_parser.c:332 in parse_row_packet\nShadow bytes around the buggy address:\n  0x0c327fffb2d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c327fffb2e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c327fffb2f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c327fffb300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c327fffb310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n=>0x0c327fffb320: 00 00 00 00 00 00 00 00[01]fa fa fa fa fa fa fa\n  0x0c327fffb330: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c327fffb340: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c327fffb350: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c327fffb360: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c327fffb370: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "stack-buffer-overflow", "B": "bad-free", "C": "heap-buffer-overflow", "D": "memcpy-param-overlap", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==7059==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200000011c at pc 0x55e9878185e4 bp 0x7ffe937a7d20 sp 0x7ffe937a7d10\nREAD of size 1 at 0x60200000011c thread T0\n    #0 0x55e9878185e3 in __flatcc_fb_create_make_path_n /sourcecode/src/compiler/fileio.c:114\n    #1 0x55e987817559 in fuzzloop /dockerin/fuzz_drivers/tf1727601035232dfxr.c:19\n    #2 0x55e987821ee9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x55e987817308 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7fcd7767ad8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7fcd7767ae3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x55e987817454 in _start (/dockerin/fuzz_drivers/tf1727601035232dfxr.out+0x11454)\n\n0x60200000011c is located 0 bytes to the right of 12-byte region [0x602000000110,0x60200000011c)\nallocated by thread T0 here:\n    #0 0x7fcd78053887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55e9878220fc in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/src/compiler/fileio.c:114 in __flatcc_fb_create_make_path_n\nShadow bytes around the buggy address:\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 04\n=>0x0c047fff8020: fa fa 00[04]fa fa 00 fa fa fa 00 fa fa fa fa fa\n  0x0c047fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "heap-buffer-overflow", "B": "unknown-crash", "C": "allocation-size-too-big", "D": "double-free", "answer": "A"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==39761==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000d50 at pc 0x55b1bd85896a bp 0x7ffccbab9ef0 sp 0x7ffccbab9ee0\nREAD of size 8 at 0x602000000d50 thread T0\n    #0 0x55b1bd858969 in pitem_new ssl/pqueue.c:25\n    #1 0x55b1bd8586c4 in fuzzloop /dockerin/fuzz_drivers/tf1730183726689zlwt.c:22\n    #2 0x55b1bd861799 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x55b1bd8582d8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7f67dcf0dd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7f67dcf0de3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x55b1bd858424 in _start (/dockerin/fuzz_drivers/tf1730183726689zlwt.out+0xe424)\n\n0x602000000d57 is located 0 bytes to the right of 7-byte region [0x602000000d50,0x602000000d57)\nallocated by thread T0 here:\n    #0 0x7f67dd799887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55b1bd8619ac in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow ssl/pqueue.c:25 in pitem_new\nShadow bytes around the buggy address:\n  0x0c047fff8150: fa fa fd fd fa fa fd fd fa fa fd fa fa fa fd fd\n  0x0c047fff8160: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd\n  0x0c047fff8170: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd\n  0x0c047fff8180: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd\n  0x0c047fff8190: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd\n=>0x0c047fff81a0: fa fa fd fd fa fa fd fd fa fa[07]fa fa fa 00 04\n  0x0c047fff81b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff81c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff81d0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff81e0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff81f0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "heap-buffer-overflow", "B": "invalid-posix-memalign-alignment", "C": "heap-use-after-free", "D": "stack-buffer-overflow", "answer": "A"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==198==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200000e133 at pc 0x55e9350e9252 bp 0x7ffd0317ad30 sp 0x7ffd0317ad20\nWRITE of size 1 at 0x60200000e133 thread T0\n    #0 0x55e9350e9251 in hex2byte /sourcecode/lib/facil/http/http.c:2380\n    #1 0x55e9350e9ed0 in http_decode_url_unsafe /sourcecode/lib/facil/http/http.c:2426\n    #2 0x55e934fd780a in fuzzloop /sharedockerin/ta1729829438469rhkp/test_file.c:29\n    #3 0x55e935156249 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #4 0x55e934fd6ab8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #5 0x7f8c08d78d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #6 0x7f8c08d78e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #7 0x55e934fd6c04 in _start (/sharedockerin/ta1729829438469rhkp/clouditera+0x1dbc04)\n\n0x60200000e133 is located 1 bytes to the right of 2-byte region [0x60200000e130,0x60200000e132)\nallocated by thread T0 here:\n    #0 0x7f8c09751887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55e93515645c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/lib/facil/http/http.c:2380 in hex2byte\nShadow bytes around the buggy address:\n  0x0c047fff9bd0: fa fa fd fa fa fa 00 01 fa fa fd fa fa fa fd fa\n  0x0c047fff9be0: fa fa fd fa fa fa fd fa fa fa fd fd fa fa fd fa\n  0x0c047fff9bf0: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fff9c00: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fd\n  0x0c047fff9c10: fa fa fd fd fa fa fd fa fa fa fd fd fa fa fd fa\n=>0x0c047fff9c20: fa fa fd fd fa fa[02]fa fa fa fa fa fa fa fa fa\n  0x0c047fff9c30: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff9c40: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff9c50: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff9c60: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff9c70: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "calloc parameters overflow", "B": "heap-buffer-overflow", "C": "allocation-size-too-big", "D": "larger memory malloc", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==16137==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020000001e8 at pc 0x55782368d89b bp 0x7fffb211ed50 sp 0x7fffb211ed40\nREAD of size 1 at 0x6020000001e8 thread T0\n    #0 0x55782368d89a in ossl_pw_get_passphrase crypto/passphrase.c:222\n    #1 0x55782368e4e5 in ossl_pw_get_password crypto/passphrase.c:318\n    #2 0x55782368e641 in ossl_pw_pem_password crypto/passphrase.c:326\n    #3 0x55782368c87f in fuzzloop /dockerin/fuzz_drivers/tf1730183726274lwoy.c:27\n    #4 0x557823696d79 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #5 0x55782368c588 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #6 0x7f7bbcbf5d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #7 0x7f7bbcbf5e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #8 0x55782368c6d4 in _start (/dockerin/fuzz_drivers/tf1730183726274lwoy.out+0xf6d4)\n\n0x6020000001e8 is located 12 bytes to the right of 12-byte region [0x6020000001d0,0x6020000001dc)\nallocated by thread T0 here:\n    #0 0x7f7bbd481887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x557823696f8c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow crypto/passphrase.c:222 in ossl_pw_get_passphrase\nShadow bytes around the buggy address:\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 04\n  0x0c047fff8020: fa fa 00 04 fa fa 04 fa fa fa 04 fa fa fa 04 fa\n=>0x0c047fff8030: fa fa 04 fa fa fa 00 04 fa fa 00 04 fa[fa]fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "out-of-memory", "B": "global-buffer-overflow", "C": "heap-use-after-free", "D": "heap-buffer-overflow", "answer": "D"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==584==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200000010f at pc 0x55affb8a2896 bp 0x7ffdd48d4840 sp 0x7ffdd48d4830\nREAD of size 1 at 0x60200000010f thread T0\n    #0 0x55affb8a2895 in fio_base64_decode /sourcecode/lib/facil/fio.c:9351\n    #1 0x55affb7fc2d7 in fuzzloop /dockerin/fuzz_drivers/tf1729823117230eibb.c:19\n    #2 0x55affb8abeb9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x55affb7fb9d8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7fe8f3d71d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7fe8f3d71e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x55affb7fbb24 in _start (/dockerin/fuzz_drivers/tf1729823117230eibb.out+0xc5b24)\n\n0x60200000010f is located 1 bytes to the left of 12-byte region [0x602000000110,0x60200000011c)\nallocated by thread T0 here:\n    #0 0x7fe8f474a887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55affb8ac0cc in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/lib/facil/fio.c:9351 in fio_base64_decode\nShadow bytes around the buggy address:\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 04\n=>0x0c047fff8020: fa[fa]00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04\n  0x0c047fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "heap-use-after-free", "B": "unknown-crash", "C": "heap-buffer-overflow", "D": "invalid-posix-memalign-alignment", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==840==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000380 at pc 0x560ae8c99945 bp 0x7ffd54201440 sp 0x7ffd54201430\nREAD of size 8 at 0x602000000380 thread T0\n    #0 0x560ae8c99944 in flatcc_parse_file /sourcecode/src/compiler/flatcc.c:330\n    #1 0x560ae8c7c991 in fuzzloop /dockerin/fuzz_drivers/tf1727601035344taxy.c:26\n    #2 0x560ae8df15e9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x560ae8c7c6f8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7f35b4eaed8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7f35b4eaee3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x560ae8c7c844 in _start (/dockerin/fuzz_drivers/tf1727601035344taxy.out+0x1e3844)\n\n0x602000000380 is located 548 bytes to the right of 12-byte region [0x602000000150,0x60200000015c)\nallocated by thread T0 here:\n    #0 0x7f35b5887887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x560ae8df17fc in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/src/compiler/flatcc.c:330 in flatcc_parse_file\nShadow bytes around the buggy address:\n  0x0c047fff8020: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa fa fa\n  0x0c047fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n=>0x0c047fff8070:[fa]fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8090: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff80a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff80b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff80c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "heap-buffer-overflow", "B": "stack-buffer-underflow", "C": "heap-use-after-free", "D": "stack-buffer-overflow", "answer": "A"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==16777==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000118 at pc 0x55ba7d1ea9b7 bp 0x7ffdebf2cce0 sp 0x7ffdebf2ccd0\nREAD of size 8 at 0x602000000118 thread T0\n    #0 0x55ba7d1ea9b6 in __gnu_cxx::__normal_iterator<EndpointAddress**, std::vector<EndpointAddress*, std::allocator<EndpointAddress*> > >::__normal_iterator(EndpointAddress** const&) (/dockerin/fuzz_drivers/tf1729593105429mgsa.out+0x3209b6)\n    #1 0x55ba7d1e7e1f in std::vector<EndpointAddress*, std::allocator<EndpointAddress*> >::end() (/dockerin/fuzz_drivers/tf1729593105429mgsa.out+0x31de1f)\n    #2 0x55ba7d1d8d8a in WFServiceGovernance::tracing_deleter(void*) /sourcecode/src/nameservice/WFServiceGovernance.cc:173\n    #3 0x55ba7d1d2a54 in fuzzloop /dockerin/fuzz_drivers/tf1729593105429mgsa.cpp:31\n    #4 0x55ba7d36ddf9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #5 0x55ba7d1d2818 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #6 0x7f920503ed8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #7 0x7f920503ee3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #8 0x55ba7d1d2964 in _start (/dockerin/fuzz_drivers/tf1729593105429mgsa.out+0x308964)\n\n0x60200000011c is located 0 bytes to the right of 12-byte region [0x602000000110,0x60200000011c)\nallocated by thread T0 here:\n    #0 0x7f9205c65887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55ba7d36e00c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow (/dockerin/fuzz_drivers/tf1729593105429mgsa.out+0x3209b6) in __gnu_cxx::__normal_iterator<EndpointAddress**, std::vector<EndpointAddress*, std::allocator<EndpointAddress*> > >::__normal_iterator(EndpointAddress** const&)\nShadow bytes around the buggy address:\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 04\n=>0x0c047fff8020: fa fa 00[04]fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "SIGABRT", "B": "allocation-size-too-big", "C": "bad-free", "D": "heap-buffer-overflow", "answer": "D"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==20634==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200000011c at pc 0x563e44a35baa bp 0x7ffdc155e050 sp 0x7ffdc155e040\nREAD of size 1 at 0x60200000011c thread T0\n    #0 0x563e44a35ba9 in buf2hexstr_sep crypto/o_str.c:308\n    #1 0x563e44a35dee in ossl_buf2hexstr_sep crypto/o_str.c:341\n    #2 0x563e44a346f3 in fuzzloop /dockerin/fuzz_drivers/tf1730183725653rfli.c:27\n    #3 0x563e44a3ead9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #4 0x563e44a34408 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #5 0x7f3f76e6fd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #6 0x7f3f76e6fe3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #7 0x563e44a34554 in _start (/dockerin/fuzz_drivers/tf1730183725653rfli.out+0xf554)\n\n0x60200000011c is located 0 bytes to the right of 12-byte region [0x602000000110,0x60200000011c)\nallocated by thread T0 here:\n    #0 0x7f3f776fb887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x563e44a3ecec in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow crypto/o_str.c:308 in buf2hexstr_sep\nShadow bytes around the buggy address:\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 04\n=>0x0c047fff8020: fa fa 00[04]fa fa 00 fa fa fa 00 fa fa fa 01 fa\n  0x0c047fff8030: fa fa 01 fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "heap-buffer-overflow", "B": "SIGABRT", "C": "stack-buffer-underflow", "D": "memcpy-param-overlap", "answer": "A"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==365162==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000118 at pc 0x561218d12e29 bp 0x7ffd6e6180c0 sp 0x7ffd6e6180b0\nREAD of size 8 at 0x602000000118 thread T0\n    #0 0x561218d12e28 in __gnu_cxx::__normal_iterator<EndpointAddress**, std::vector<EndpointAddress*, std::allocator<EndpointAddress*> > >::__normal_iterator(EndpointAddress** const&) /usr/include/c++/11/bits/stl_iterator.h:1028\n    #1 0x561218d0d6a1 in std::vector<EndpointAddress*, std::allocator<EndpointAddress*> >::end() /usr/include/c++/11/bits/stl_vector.h:830\n    #2 0x561218cfd31b in UPSWeightedRandomPolicy::select_history_weight(WFNSTracing*) /sourcecode/src/nameservice/UpstreamPolicies.cc:512\n    #3 0x561218cedba8 in fuzzloop /dockerin/fuzz_drivers/tf1729655987046rynf.cpp:18\n    #4 0x561218eb7269 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #5 0x561218ced8b8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #6 0x7fa6539efd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #7 0x7fa6539efe3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #8 0x561218ceda04 in _start (/dockerin/fuzz_drivers/tf1729655987046rynf.out+0x374a04)\n\n0x60200000011c is located 0 bytes to the right of 12-byte region [0x602000000110,0x60200000011c)\nallocated by thread T0 here:\n    #0 0x7fa654616887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x561218eb747c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /usr/include/c++/11/bits/stl_iterator.h:1028 in __gnu_cxx::__normal_iterator<EndpointAddress**, std::vector<EndpointAddress*, std::allocator<EndpointAddress*> > >::__normal_iterator(EndpointAddress** const&)\nShadow bytes around the buggy address:\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 04\n=>0x0c047fff8020: fa fa 00[04]fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "stack-buffer-underflow", "B": "heap-buffer-overflow", "C": "memcpy-param-overlap", "D": "out-of-memory", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==4856==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000380 at pc 0x5595d6a14522 bp 0x7ffe1e8deb90 sp 0x7ffe1e8deb80\nREAD of size 8 at 0x602000000380 thread T0\n    #0 0x5595d6a14521 in export_schema /sourcecode/src/compiler/codegen_schema.c:394\n    #1 0x5595d6a155da in __flatcc_fb_codegen_bfbs_to_buffer /sourcecode/src/compiler/codegen_schema.c:523\n    #2 0x5595d69fc10d in flatcc_generate_binary_schema_to_buffer /sourcecode/src/compiler/flatcc.c:436\n    #3 0x5595d69dd9a3 in fuzzloop /dockerin/fuzz_drivers/tf1727601035359geej.c:28\n    #4 0x5595d6b525f9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #5 0x5595d69dd6f8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #6 0x7f7b5256ad8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #7 0x7f7b5256ae3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #8 0x5595d69dd844 in _start (/dockerin/fuzz_drivers/tf1727601035359geej.out+0x1e3844)\n\n0x602000000380 is located 488 bytes to the right of 8-byte region [0x602000000190,0x602000000198)\nallocated by thread T0 here:\n    #0 0x7f7b52f43887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x5595d6b5280c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/src/compiler/codegen_schema.c:394 in export_schema\nShadow bytes around the buggy address:\n  0x0c047fff8020: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 fa\n  0x0c047fff8030: fa fa 00 fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n=>0x0c047fff8070:[fa]fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8090: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff80a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff80b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff80c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "heap-buffer-overflow", "B": "stack-buffer-underflow", "C": "larger memory malloc", "D": "double-free", "answer": "A"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==28111==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200000011c at pc 0x560661419e03 bp 0x7ffd5d79c5c0 sp 0x7ffd5d79c5b0\nREAD of size 1 at 0x60200000011c thread T0\n    #0 0x560661419e02 in StringUtil::url_decode(char*, unsigned long) /sourcecode/src/util/StringUtil.cc:59\n    #1 0x5606614199f9 in fuzzloop /dockerin/fuzz_drivers/tf1729593105338ande.cpp:23\n    #2 0x56066142a879 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x5606614197a8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7fe588677d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7fe588677e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x5606614198f4 in _start (/dockerin/fuzz_drivers/tf1729593105338ande.out+0x1d8f4)\n\n0x60200000011c is located 0 bytes to the right of 12-byte region [0x602000000110,0x60200000011c)\nallocated by thread T0 here:\n    #0 0x7fe58929e887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x56066142aa8c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/src/util/StringUtil.cc:59 in StringUtil::url_decode(char*, unsigned long)\nShadow bytes around the buggy address:\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 04\n=>0x0c047fff8020: fa fa 00[04]fa fa 00 fa fa fa 00 fa fa fa fa fa\n  0x0c047fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "unknown-crash", "B": "heap-buffer-overflow", "C": "memcpy-param-overlap", "D": "allocation-size-too-big", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==1783==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020000001dc at pc 0x559ed850767a bp 0x7ffcf14726f0 sp 0x7ffcf14726e0\nREAD of size 1 at 0x6020000001dc thread T0\n    #0 0x559ed8507679 in scope_hash /sourcecode/src/compiler/hash_tables/scope_table.c:163\n    #1 0x559ed850628d in ht_remove /sourcecode/external/hash/hash_table_impl.h:199\n    #2 0x559ed8504c51 in fb_scope_table_remove /sourcecode/src/compiler/hash_tables/scope_table.c:63\n    #3 0x559ed84f88f4 in fuzzloop /dockerin/fuzz_drivers/tf1727601035287nkab.c:35\n    #4 0x559ed850fd79 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #5 0x559ed84f8528 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #6 0x7fc11b5ccd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #7 0x7fc11b5cce3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #8 0x559ed84f8674 in _start (/dockerin/fuzz_drivers/tf1727601035287nkab.out+0x1d674)\n\n0x6020000001dc is located 0 bytes to the right of 12-byte region [0x6020000001d0,0x6020000001dc)\nallocated by thread T0 here:\n    #0 0x7fc11bfa5887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x559ed850ff8c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/src/compiler/hash_tables/scope_table.c:163 in scope_hash\nShadow bytes around the buggy address:\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 04\n  0x0c047fff8020: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 fa\n=>0x0c047fff8030: fa fa 00 fa fa fa 00 04 fa fa 00[04]fa fa 00 fa\n  0x0c047fff8040: fa fa 00 fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "calloc parameters overflow", "B": "stack-buffer-underflow", "C": "heap-buffer-overflow", "D": "unknown-crash", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==15370==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000190 at pc 0x55c52a9489db bp 0x7ffc9b704100 sp 0x7ffc9b7040f0\nREAD of size 8 at 0x602000000190 thread T0\n    #0 0x55c52a9489da in Communicator::partial_written(unsigned long, void*) /sourcecode/src/kernel/Communicator.cc:1349\n    #1 0x55c52a92cd89 in fuzzloop /dockerin/fuzz_drivers/tf1729593105305gbrd.cpp:40\n    #2 0x55c52a986229 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x55c52a92cb38 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7f6bff13ad8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7f6bff13ae3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x55c52a92cc84 in _start (/dockerin/fuzz_drivers/tf1729593105305gbrd.out+0x83c84)\n\n0x602000000190 is located 52 bytes to the right of 12-byte region [0x602000000150,0x60200000015c)\nallocated by thread T0 here:\n    #0 0x7f6bffd61887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55c52a98643c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/src/kernel/Communicator.cc:1349 in Communicator::partial_written(unsigned long, void*)\nShadow bytes around the buggy address:\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 fa\n  0x0c047fff8020: fa fa 00 fa fa fa 00 04 fa fa 00 04 fa fa fa fa\n=>0x0c047fff8030: fa fa[fa]fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "memcpy-param-overlap", "B": "larger memory malloc", "C": "heap-buffer-overflow", "D": "unknown-crash", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==29897==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6060000000c0 at pc 0x5588c794214e bp 0x7ffd45732b40 sp 0x7ffd45732b30\nREAD of size 8 at 0x6060000000c0 thread T0\n    #0 0x5588c794214d in UPSGroupPolicy::fuse_one_server(EndpointAddress const*) /sourcecode/src/nameservice/UpstreamPolicies.cc:126\n    #1 0x5588c7939ff0 in fuzzloop /dockerin/fuzz_drivers/tf1729593105347qlmi.cpp:39\n    #2 0x5588c7b077c9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x5588c7939978 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7ff53c91ed8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7ff53c91ee3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x5588c7939ac4 in _start (/dockerin/fuzz_drivers/tf1729593105347qlmi.out+0x380ac4)\n\n0x6060000000c0 is located 8 bytes to the right of 56-byte region [0x606000000080,0x6060000000b8)\nallocated by thread T0 here:\n    #0 0x7ff53d5471e7 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cpp:99\n    #1 0x5588c793abfb in std::_MakeUniq<PolicyAddrParams>::__single_object std::make_unique<PolicyAddrParams>() /usr/include/c++/11/bits/unique_ptr.h:962\n    #2 0x5588c7939d3d in fuzzloop /dockerin/fuzz_drivers/tf1729593105347qlmi.cpp:37\n    #3 0x5588c7b077c9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/src/nameservice/UpstreamPolicies.cc:126 in UPSGroupPolicy::fuse_one_server(EndpointAddress const*)\nShadow bytes around the buggy address:\n  0x0c0c7fff7fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c0c7fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c0c7fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c0c7fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c0c7fff8000: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa\n=>0x0c0c7fff8010: 00 00 00 00 00 00 00 fa[fa]fa fa fa fa fa fa fa\n  0x0c0c7fff8020: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c0c7fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c0c7fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c0c7fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c0c7fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "stack-buffer-overflow", "B": "bad-free", "C": "calloc parameters overflow", "D": "heap-buffer-overflow", "answer": "D"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==244==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60400000ff88 at pc 0x55f149eeacfa bp 0x7ffcef6b8370 sp 0x7ffcef6b8360\nREAD of size 8 at 0x60400000ff88 thread T0\n    #0 0x55f149eeacf9 in list_del /sourcecode/_include/workflow/list.h:100\n    #1 0x55f149ef6b2e in json_array_remove /sourcecode/src/util/json_parser.c:1275\n    #2 0x55f149eea734 in fuzzloop /sharedockerin/ta1729664329569nrnw/test_file.cpp:37\n    #3 0x55f149f060c9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #4 0x55f149eea468 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #5 0x7ff211344d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #6 0x7ff211344e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #7 0x55f149eea5b4 in _start (/sharedockerin/ta1729664329569nrnw/clouditera+0x285b4)\n\n0x60400000ff88 is located 8 bytes to the left of 40-byte region [0x60400000ff90,0x60400000ffb8)\nallocated by thread T0 here:\n    #0 0x7ff211f6b887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55f149ef3460 in json_value_parse /sourcecode/src/util/json_parser.c:888\n    #2 0x55f149eea6a4 in fuzzloop /sharedockerin/ta1729664329569nrnw/test_file.cpp:27\n    #3 0x55f149f060c9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/_include/workflow/list.h:100 in list_del\nShadow bytes around the buggy address:\n  0x0c087fff9fa0: fa fa fd fd fd fd fd fa fa fa fd fd fd fd fd fa\n  0x0c087fff9fb0: fa fa 00 00 00 00 00 fa fa fa fd fd fd fd fd fa\n  0x0c087fff9fc0: fa fa fd fd fd fd fd fa fa fa 00 00 00 00 00 fa\n  0x0c087fff9fd0: fa fa fd fd fd fd fd fa fa fa fd fd fd fd fd fa\n  0x0c087fff9fe0: fa fa 00 00 00 00 00 fa fa fa fd fd fd fd fd fa\n=>0x0c087fff9ff0: fa[fa]00 00 00 00 00 fa fa fa 00 00 00 00 00 fa\n  0x0c087fffa000: fa fa 00 00 00 00 00 fa fa fa fd fd fd fd fd fa\n  0x0c087fffa010: fa fa fd fd fd fd fd fa fa fa fd fd fd fd fd fa\n  0x0c087fffa020: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fa\n  0x0c087fffa030: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd\n  0x0c087fffa040: fa fa fd fd fd fd fd fd fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "allocation-size-too-big", "B": "SIGABRT", "C": "out-of-memory", "D": "heap-buffer-overflow", "answer": "D"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==7252==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000134 at pc 0x55e1e3785bb7 bp 0x7fff38715f20 sp 0x7fff38715f10\nREAD of size 4 at 0x602000000134 thread T0\n    #0 0x55e1e3785bb6 in Communicator::create_reply(void*) /sourcecode/src/kernel/Communicator.cc:1322\n    #1 0x55e1e376ad74 in fuzzloop /dockerin/fuzz_drivers/tf1729593105304tufk.cpp:39\n    #2 0x55e1e37c4229 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x55e1e376ab38 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7fb0cd41ed8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7fb0cd41ee3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x55e1e376ac84 in _start (/dockerin/fuzz_drivers/tf1729593105304tufk.out+0x83c84)\n\n0x602000000134 is located 24 bytes to the right of 12-byte region [0x602000000110,0x60200000011c)\nallocated by thread T0 here:\n    #0 0x7fb0ce045887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55e1e37c443c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/src/kernel/Communicator.cc:1322 in Communicator::create_reply(void*)\nShadow bytes around the buggy address:\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 04\n=>0x0c047fff8020: fa fa 00 04 fa fa[fa]fa fa fa fa fa fa fa fa fa\n  0x0c047fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "larger memory malloc", "B": "SIGABRT", "C": "bad-free", "D": "heap-buffer-overflow", "answer": "D"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==369573==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000118 at pc 0x559c2f5ec277 bp 0x7ffe5275a080 sp 0x7ffe5275a070\nREAD of size 8 at 0x602000000118 thread T0\n    #0 0x559c2f5ec276 in rb_last /sourcecode/src/kernel/rbtree.c:318\n    #1 0x559c2f5e6666 in fuzzloop /dockerin/fuzz_drivers/tf1729655884635rjbt.cpp:20\n    #2 0x559c2f5f5ae9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x559c2f5e6348 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7f17bf57fd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7f17bf57fe3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x559c2f5e6494 in _start (/dockerin/fuzz_drivers/tf1729655884635rjbt.out+0x17494)\n\n0x60200000011c is located 0 bytes to the right of 12-byte region [0x602000000110,0x60200000011c)\nallocated by thread T0 here:\n    #0 0x7f17c01a6887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x559c2f5f5cfc in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/src/kernel/rbtree.c:318 in rb_last\nShadow bytes around the buggy address:\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 04\n=>0x0c047fff8020: fa fa 00[04]fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "global-buffer-overflow", "B": "heap-buffer-overflow", "C": "invalid-posix-memalign-alignment", "D": "out-of-memory", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==208==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6180000083af at pc 0x56133dd4c720 bp 0x7ffd5263df90 sp 0x7ffd5263df80\nREAD of size 1 at 0x6180000083af thread T0\n    #0 0x56133dd4c71f in parse_row_packet /sourcecode/src/protocol/mysql_parser.c:332\n    #1 0x56133dd49262 in mysql_parser_parse /sourcecode/src/protocol/mysql_parser.c:81\n    #2 0x56133dd4777b in fuzzloop /sharedockerin/ta1729664331891fgfr/test_file.cpp:21\n    #3 0x56133dd58bc9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #4 0x56133dd47448 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #5 0x7f9c7ac50d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #6 0x7f9c7ac50e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #7 0x56133dd47594 in _start (/sharedockerin/ta1729664331891fgfr/clouditera+0x19594)\n\n0x6180000083af is located 0 bytes to the right of 815-byte region [0x618000008080,0x6180000083af)\nallocated by thread T0 here:\n    #0 0x7f9c7b877887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x56133dd58ddc in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/src/protocol/mysql_parser.c:332 in parse_row_packet\nShadow bytes around the buggy address:\n  0x0c307fff9020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c307fff9030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c307fff9040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c307fff9050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c307fff9060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n=>0x0c307fff9070: 00 00 00 00 00[07]fa fa fa fa fa fa fa fa fa fa\n  0x0c307fff9080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c307fff9090: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c307fff90a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c307fff90b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c307fff90c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "bad-free", "B": "SIGABRT", "C": "heap-buffer-overflow", "D": "memcpy-param-overlap", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==4107==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200000019c at pc 0x7fad78d99397 bp 0x7ffcce335fb0 sp 0x7ffcce335758\nREAD of size 65535 at 0x60200000019c thread T0\n    #0 0x7fad78d99396 in __interceptor_memcpy ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:827\n    #1 0x7fad781bd204 in PKCS5_pbe_set0_algor_ex crypto/asn1/p5_pbe.c:57\n    #2 0x7fad781bd54f in PKCS5_pbe_set_ex crypto/asn1/p5_pbe.c:101\n    #3 0x7fad781bd5bb in PKCS5_pbe_set crypto/asn1/p5_pbe.c:111\n    #4 0x55c4cedcb4dc in fuzzloop /dockerin/fuzz_drivers/tf1730183723804jatv.c:32\n    #5 0x55c4cedd3b19 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #6 0x55c4cedcb1e8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #7 0x7fad77857d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #8 0x7fad77857e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #9 0x55c4cedcb334 in _start (/dockerin/fuzz_drivers/tf1730183723804jatv.out+0xe334)\n\n0x60200000019c is located 0 bytes to the right of 12-byte region [0x602000000190,0x60200000019c)\nallocated by thread T0 here:\n    #0 0x7fad78e13887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55c4cedd3d2c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:827 in __interceptor_memcpy\nShadow bytes around the buggy address:\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 04 fa\n  0x0c047fff8020: fa fa 04 fa fa fa 04 fa fa fa 04 fa fa fa 00 04\n=>0x0c047fff8030: fa fa 00[04]fa fa 04 fa fa fa 04 fa fa fa 00 00\n  0x0c047fff8040: fa fa 00 00 fa fa 03 fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "calloc parameters overflow", "B": "out-of-memory", "C": "heap-buffer-overflow", "D": "larger memory malloc", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==3805==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000008 at pc 0x55575a0f3a7f bp 0x7ffdc9488c70 sp 0x7ffdc9488c60\nWRITE of size 2 at 0x602000000008 thread T0\n    #0 0x55575a0f3a7e in block_free /sourcecode/lib/facil/fio.c:7837\n    #1 0x55575a0f454d in block_slice_free /sourcecode/lib/facil/fio.c:7935\n    #2 0x55575a0f4e23 in fio_free /sourcecode/lib/facil/fio.c:8097\n    #3 0x55575a0f4e9c in fio_realloc2 /sourcecode/lib/facil/fio.c:8129\n    #4 0x55575a07d280 in fuzzloop /dockerin/fuzz_drivers/tf1729822403000wskc.c:27\n    #5 0x55575a12ce79 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #6 0x55575a07c9d8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #7 0x7f50f36d2d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #8 0x7f50f36d2e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #9 0x55575a07cb24 in _start (/dockerin/fuzz_drivers/tf1729822403000wskc.out+0xc5b24)\n\n0x602000000008 is located 8 bytes to the left of 15-byte region [0x602000000010,0x60200000001f)\nallocated by thread T0 here:\n    #0 0x7f50f40ab887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x7f50f375158e in strdup (/lib/x86_64-linux-gnu/libc.so.6+0xa858e)\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/lib/facil/fio.c:7837 in block_free\nShadow bytes around the buggy address:\n  0x0c047fff7fb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n=>0x0c047fff8000: fa[fa]00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa fd fd\n  0x0c047fff8020: fa fa fd fd fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fff8030: fa fa fd fa fa fa 00 04 fa fa 00 fa fa fa 00 fa\n  0x0c047fff8040: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fff8050: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "larger memory malloc", "B": "heap-buffer-overflow", "C": "double-free", "D": "stack-buffer-overflow", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==130==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020000026c2 at pc 0x55fe5c86cfbc bp 0x7ffcd7478250 sp 0x7ffcd7478240\nWRITE of size 1 at 0x6020000026c2 thread T0\n    #0 0x55fe5c86cfbb in fio_ltoa /sourcecode/lib/facil/fio.c:4905\n    #1 0x55fe5c86e169 in fio_ftoa /sourcecode/lib/facil/fio.c:4994\n    #2 0x55fe5c82a288 in fuzzloop /sharedockerin/ta1729829438589flem/test_file.c:39\n    #3 0x55fe5c8d9e69 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #4 0x55fe5c8299d8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #5 0x7fd669870d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #6 0x7fd669870e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #7 0x55fe5c829b24 in _start (/sharedockerin/ta1729829438589flem/clouditera+0xc5b24)\n\n0x6020000026c2 is located 6 bytes to the right of 12-byte region [0x6020000026b0,0x6020000026bc)\nallocated by thread T0 here:\n    #0 0x7fd66a249887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55fe5c8da07c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/lib/facil/fio.c:4905 in fio_ltoa\nShadow bytes around the buggy address:\n  0x0c047fff8480: fa fa fd fa fa fa fd fa fa fa fd fa fa fa 00 05\n  0x0c047fff8490: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fff84a0: fa fa fd fd fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fff84b0: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fff84c0: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fd\n=>0x0c047fff84d0: fa fa fd fa fa fa 00 04[fa]fa 00 fa fa fa 01 fa\n  0x0c047fff84e0: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fff84f0: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fff8500: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fff8510: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fff8520: fa fa fd fd fa fa fd fa fa fa fd fa fa fa fd fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "stack-buffer-underflow", "B": "heap-buffer-overflow", "C": "heap-use-after-free", "D": "stack-buffer-overflow", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==37917==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000148 at pc 0x56228941e8fd bp 0x7ffdfd457f20 sp 0x7ffdfd457f10\nREAD of size 8 at 0x602000000148 thread T0\n    #0 0x56228941e8fc in ossl_quic_sstream_adjust_iov ssl/quic/quic_sstream.c:410\n    #1 0x56228941b69a in fuzzloop /dockerin/fuzz_drivers/tf1730183726446ixgq.c:33\n    #2 0x562289428be9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x56228941b3c8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7f0969132d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7f0969132e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x56228941b514 in _start (/dockerin/fuzz_drivers/tf1730183726446ixgq.out+0xf514)\n\n0x602000000148 is located 8 bytes to the left of 12-byte region [0x602000000150,0x60200000015c)\nallocated by thread T0 here:\n    #0 0x7f09699be887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x562289428dfc in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow ssl/quic/quic_sstream.c:410 in ossl_quic_sstream_adjust_iov\nShadow bytes around the buggy address:\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 fa\n=>0x0c047fff8020: fa fa 00 fa fa fa 00 00 fa[fa]00 04 fa fa 00 04\n  0x0c047fff8030: fa fa 00 fa fa fa 00 fa fa fa 00 fa fa fa 00 fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "larger memory malloc", "B": "heap-buffer-overflow", "C": "unknown-crash", "D": "stack-buffer-underflow", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==2328==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020000001e0 at pc 0x560900bc33db bp 0x7ffec8111610 sp 0x7ffec8111600\nREAD of size 4 at 0x6020000001e0 thread T0\n    #0 0x560900bc33da in flatcc_generate_files /sourcecode/src/compiler/flatcc.c:457\n    #1 0x560900ba497c in fuzzloop /dockerin/fuzz_drivers/tf1727601035341kwev.c:25\n    #2 0x560900d195c9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x560900ba46f8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7f90b98b3d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7f90b98b3e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x560900ba4844 in _start (/dockerin/fuzz_drivers/tf1727601035341kwev.out+0x1e3844)\n\n0x6020000001e0 is located 196 bytes to the right of 12-byte region [0x602000000110,0x60200000011c)\nallocated by thread T0 here:\n    #0 0x7f90ba28c887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x560900d197dc in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/src/compiler/flatcc.c:457 in flatcc_generate_files\nShadow bytes around the buggy address:\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 04\n  0x0c047fff8020: fa fa 00 04 fa fa fa fa fa fa fa fa fa fa fa fa\n=>0x0c047fff8030: fa fa fa fa fa fa fa fa fa fa fa fa[fa]fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "stack-buffer-underflow", "B": "stack-buffer-overflow", "C": "heap-buffer-overflow", "D": "invalid-posix-memalign-alignment", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==227==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000004912 at pc 0x55b9b0b38d00 bp 0x7ffd4ca582c0 sp 0x7ffd4ca582b0\nREAD of size 2 at 0x602000004912 thread T0\n    #0 0x55b9b0b38cff in uint2korr /sourcecode/src/protocol/mysql_byteorder.h:44\n    #1 0x55b9b0b3949d in decode_length_safe /sourcecode/src/protocol/mysql_byteorder.c:45\n    #2 0x55b9b0b39909 in decode_string /sourcecode/src/protocol/mysql_byteorder.c:77\n    #3 0x55b9b0b3720b in parse_column_def_packet /sourcecode/src/protocol/mysql_parser.c:410\n    #4 0x55b9b0b3296a in mysql_parser_parse /sourcecode/src/protocol/mysql_parser.c:81\n    #5 0x55b9b0b31703 in fuzzloop /sharedockerin/ta1729664331306rwdc/test_file.cpp:21\n    #6 0x55b9b0b422c9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #7 0x55b9b0b313e8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #8 0x7fc1c2daad8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #9 0x7fc1c2daae3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #10 0x55b9b0b31534 in _start (/sharedockerin/ta1729664331306rwdc/clouditera+0x18534)\n\n0x602000004913 is located 0 bytes to the right of 3-byte region [0x602000004910,0x602000004913)\nallocated by thread T0 here:\n    #0 0x7fc1c39d1887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55b9b0b424dc in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/src/protocol/mysql_byteorder.h:44 in uint2korr\nShadow bytes around the buggy address:\n  0x0c047fff88d0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fd fa\n  0x0c047fff88e0: fa fa fd fa fa fa fd fa fa fa fd fa fa fa 00 07\n  0x0c047fff88f0: fa fa fd fa fa fa fd fd fa fa fd fa fa fa fd fd\n  0x0c047fff8900: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fa\n  0x0c047fff8910: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n=>0x0c047fff8920: fa fa[03]fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8930: fa fa fa fa fa fa fd fd fa fa fd fa fa fa fd fa\n  0x0c047fff8940: fa fa fd fa fa fa fd fa fa fa fd fd fa fa fd fa\n  0x0c047fff8950: fa fa fd fa fa fa fd fd fa fa fd fa fa fa fd fa\n  0x0c047fff8960: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fa fa\n  0x0c047fff8970: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "heap-buffer-overflow", "B": "unknown-crash", "C": "larger memory malloc", "D": "SIGABRT", "answer": "A"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==26091==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6060000000b8 at pc 0x55ae4892acd0 bp 0x7ffe46121c50 sp 0x7ffe46121c40\nREAD of size 4 at 0x6060000000b8 thread T0\n    #0 0x55ae4892accf in UPSGroupPolicy::add_server_locked(EndpointAddress*) /sourcecode/src/nameservice/UpstreamPolicies.cc:292\n    #1 0x55ae48930e3d in UPSWeightedRandomPolicy::add_server_locked(EndpointAddress*) /sourcecode/src/nameservice/UpstreamPolicies.cc:480\n    #2 0x55ae4891e04c in fuzzloop /dockerin/fuzz_drivers/tf1729593105361sjjz.cpp:41\n    #3 0x55ae48aebee9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #4 0x55ae4891d978 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #5 0x7fc2e8d39d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #6 0x7fc2e8d39e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #7 0x55ae4891dac4 in _start (/dockerin/fuzz_drivers/tf1729593105361sjjz.out+0x381ac4)\n\n0x6060000000b8 is located 0 bytes to the right of 56-byte region [0x606000000080,0x6060000000b8)\nallocated by thread T0 here:\n    #0 0x7fc2e99621e7 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cpp:99\n    #1 0x55ae4891f2db in std::_MakeUniq<PolicyAddrParams>::__single_object std::make_unique<PolicyAddrParams>() /usr/include/c++/11/bits/unique_ptr.h:962\n    #2 0x55ae4891dd99 in fuzzloop /dockerin/fuzz_drivers/tf1729593105361sjjz.cpp:39\n    #3 0x55ae48aebee9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/src/nameservice/UpstreamPolicies.cc:292 in UPSGroupPolicy::add_server_locked(EndpointAddress*)\nShadow bytes around the buggy address:\n  0x0c0c7fff7fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c0c7fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c0c7fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c0c7fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c0c7fff8000: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa\n=>0x0c0c7fff8010: 00 00 00 00 00 00 00[fa]fa fa fa fa fa fa fa fa\n  0x0c0c7fff8020: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c0c7fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c0c7fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c0c7fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c0c7fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "allocation-size-too-big", "B": "out-of-memory", "C": "heap-buffer-overflow", "D": "memcpy-param-overlap", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==634252==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000120 at pc 0x5584971468d4 bp 0x7fff479759f0 sp 0x7fff479759e0\nREAD of size 4 at 0x602000000120 thread T0\n    #0 0x5584971468d3 in IOService::request(IOSession*) /sourcecode/src/kernel/IOService_linux.cc:326\n    #1 0x5584971427de in IORequest::dispatch() _include/workflow/IORequest.h:37\n    #2 0x55849714184c in fuzzloop /dockerin/fuzz_drivers/tf1729655877560calw.cpp:36\n    #3 0x558497151219 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #4 0x558497141488 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #5 0x7fc832529d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #6 0x7fc832529e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #7 0x5584971415d4 in _start (/dockerin/fuzz_drivers/tf1729655877560calw.out+0x1a5d4)\n\n0x602000000120 is located 4 bytes to the right of 12-byte region [0x602000000110,0x60200000011c)\nallocated by thread T0 here:\n    #0 0x7fc833150887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55849715142c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/src/kernel/IOService_linux.cc:326 in IOService::request(IOSession*)\nShadow bytes around the buggy address:\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 04\n=>0x0c047fff8020: fa fa 00 04[fa]fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "out-of-memory", "B": "bad-free", "C": "heap-buffer-overflow", "D": "stack-buffer-underflow", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==16725==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6060000000c0 at pc 0x55aa822cc99a bp 0x7fff88619d70 sp 0x7fff88619d60\nREAD of size 8 at 0x6060000000c0 thread T0\n    #0 0x55aa822cc999 in UPSGroupPolicy::recover_one_server(EndpointAddress const*) /sourcecode/src/nameservice/UpstreamPolicies.cc:119\n    #1 0x55aa822c4ff0 in fuzzloop /dockerin/fuzz_drivers/tf1729593105348wwks.cpp:39\n    #2 0x55aa824927c9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x55aa822c4978 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7fc53c399d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7fc53c399e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x55aa822c4ac4 in _start (/dockerin/fuzz_drivers/tf1729593105348wwks.out+0x380ac4)\n\n0x6060000000c0 is located 8 bytes to the right of 56-byte region [0x606000000080,0x6060000000b8)\nallocated by thread T0 here:\n    #0 0x7fc53cfc21e7 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cpp:99\n    #1 0x55aa822c5bfb in std::_MakeUniq<PolicyAddrParams>::__single_object std::make_unique<PolicyAddrParams>() /usr/include/c++/11/bits/unique_ptr.h:962\n    #2 0x55aa822c4d3d in fuzzloop /dockerin/fuzz_drivers/tf1729593105348wwks.cpp:37\n    #3 0x55aa824927c9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/src/nameservice/UpstreamPolicies.cc:119 in UPSGroupPolicy::recover_one_server(EndpointAddress const*)\nShadow bytes around the buggy address:\n  0x0c0c7fff7fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c0c7fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c0c7fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c0c7fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c0c7fff8000: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa\n=>0x0c0c7fff8010: 00 00 00 00 00 00 00 fa[fa]fa fa fa fa fa fa fa\n  0x0c0c7fff8020: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c0c7fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c0c7fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c0c7fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c0c7fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "unknown-crash", "B": "heap-buffer-overflow", "C": "memcpy-param-overlap", "D": "stack-buffer-overflow", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==203==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000022751 at pc 0x556c194f6965 bp 0x7ffec82fcbb0 sp 0x7ffec82fcba0\nREAD of size 2 at 0x602000022751 thread T0\n    #0 0x556c194f6964 in uint2korr /sourcecode/src/protocol/mysql_byteorder.h:44\n    #1 0x556c194f7102 in decode_length_safe /sourcecode/src/protocol/mysql_byteorder.c:45\n    #2 0x556c194f672e in fuzzloop /sharedockerin/ta1729664329765ysdw/test_file.cpp:24\n    #3 0x556c194fff29 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #4 0x556c194f63a8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #5 0x7f240b07cd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #6 0x7f240b07ce3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #7 0x556c194f64f4 in _start (/sharedockerin/ta1729664329765ysdw/clouditera+0xf4f4)\n\n0x602000022752 is located 0 bytes to the right of 2-byte region [0x602000022750,0x602000022752)\nallocated by thread T0 here:\n    #0 0x7f240bca3887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x556c1950013c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/src/protocol/mysql_byteorder.h:44 in uint2korr\nShadow bytes around the buggy address:\n  0x0c047fffc490: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd\n  0x0c047fffc4a0: fa fa fd fa fa fa fd fd fa fa fd fd fa fa fd fd\n  0x0c047fffc4b0: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd\n  0x0c047fffc4c0: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd\n  0x0c047fffc4d0: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fa\n=>0x0c047fffc4e0: fa fa fd fd fa fa fd fa fa fa[02]fa fa fa fa fa\n  0x0c047fffc4f0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fffc500: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fffc510: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fffc520: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fffc530: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "allocation-size-too-big", "B": "heap-buffer-overflow", "C": "memcpy-param-overlap", "D": "SIGABRT", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==12748==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200000011c at pc 0x56537c9942a2 bp 0x7fff49c68d80 sp 0x7fff49c68d70\nWRITE of size 1 at 0x60200000011c thread T0\n    #0 0x56537c9942a1 in SHA1_Final include/crypto/md32_common.h:248\n    #1 0x56537c9947f2 in fuzzloop /dockerin/fuzz_drivers/tf1730183724123qutv.c:36\n    #2 0x56537c9a1689 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x56537c993288 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7f61b63e9d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7f61b63e9e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x56537c9933d4 in _start (/dockerin/fuzz_drivers/tf1730183724123qutv.out+0xe3d4)\n\n0x60200000011c is located 0 bytes to the right of 12-byte region [0x602000000110,0x60200000011c)\nallocated by thread T0 here:\n    #0 0x7f61b6c75887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x56537c9a189c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow include/crypto/md32_common.h:248 in SHA1_Final\nShadow bytes around the buggy address:\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 04\n=>0x0c047fff8020: fa fa 00[04]fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "allocation-size-too-big", "B": "heap-buffer-overflow", "C": "calloc parameters overflow", "D": "global-buffer-overflow", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==28431==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x61b000000078 at pc 0x55ca4bc5cc91 bp 0x7ffdcf7e2490 sp 0x7ffdcf7e2480\nWRITE of size 8 at 0x61b000000078 thread T0\n    #0 0x55ca4bc5cc90 in WFResourcePool::push(void*) /sourcecode/src/factory/WFResourcePool.h:56\n    #1 0x55ca4bce18b7 in WFResourcePool::post(void*) /sourcecode/src/factory/WFResourcePool.cc:110\n    #2 0x55ca4bbd8bf8 in WFResolverTask::dns_partial_callback(void*) /sourcecode/src/nameservice/WFDnsResolver.cc:659\n    #3 0x55ca4bbd0a34 in fuzzloop /dockerin/fuzz_drivers/tf1729593105429ksgs.cpp:40\n    #4 0x55ca4bd4bee9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #5 0x55ca4bbd07f8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #6 0x7f8766af4d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #7 0x7f8766af4e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #8 0x55ca4bbd0944 in _start (/dockerin/fuzz_drivers/tf1729593105429ksgs.out+0x2c2944)\n\n0x61b000000078 is located 8 bytes to the left of 1600-byte region [0x61b000000080,0x61b0000006c0)\nallocated by thread T0 here:\n    #0 0x7f876771d357 in operator new[](unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cpp:102\n    #1 0x55ca4bce06ef in WFResourcePool::create(unsigned long) /sourcecode/src/factory/WFResourcePool.cc:77\n    #2 0x55ca4bce1226 in WFResourcePool::WFResourcePool(unsigned long) /sourcecode/src/factory/WFResourcePool.cc:92\n    #3 0x55ca4bc65d4c in __DnsClientManager::__DnsClientManager() /sourcecode/src/manager/WFGlobal.cc:636\n    #4 0x55ca4bc6599b in __DnsClientManager::get_instance() /sourcecode/src/manager/WFGlobal.cc:627\n    #5 0x55ca4bc5a78c in WFGlobal::get_dns_respool() /sourcecode/src/manager/WFGlobal.cc:734\n    #6 0x55ca4bbd8afc in WFResolverTask::dns_partial_callback(void*) /sourcecode/src/nameservice/WFDnsResolver.cc:659\n    #7 0x55ca4bbd0a34 in fuzzloop /dockerin/fuzz_drivers/tf1729593105429ksgs.cpp:40\n    #8 0x55ca4bd4bee9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/src/factory/WFResourcePool.h:56 in WFResourcePool::push(void*)\nShadow bytes around the buggy address:\n  0x0c367fff7fb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c367fff7fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c367fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c367fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c367fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n=>0x0c367fff8000: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa[fa]\n  0x0c367fff8010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c367fff8020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c367fff8030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c367fff8040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c367fff8050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "unknown-crash", "B": "global-buffer-overflow", "C": "heap-buffer-overflow", "D": "heap-use-after-free", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==6217==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200000011c at pc 0x55866a7d7c75 bp 0x7ffee431d740 sp 0x7ffee431d730\nREAD of size 1 at 0x60200000011c thread T0\n    #0 0x55866a7d7c74 in fio_siphash_xy /sourcecode/lib/facil/fio.c:8339\n    #1 0x55866a7d91ce in fio_siphash13 /sourcecode/lib/facil/fio.c:8403\n    #2 0x55866a85d023 in http_mimetype_find /sourcecode/lib/facil/http/http.c:2520\n    #3 0x55866a74580a in fuzzloop /dockerin/fuzz_drivers/tf1729822403178sxmq.c:29\n    #4 0x55866a8c4249 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #5 0x55866a744ab8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #6 0x7feda2321d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #7 0x7feda2321e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #8 0x55866a744c04 in _start (/dockerin/fuzz_drivers/tf1729822403178sxmq.out+0x1dbc04)\n\n0x60200000011c is located 0 bytes to the right of 12-byte region [0x602000000110,0x60200000011c)\nallocated by thread T0 here:\n    #0 0x7feda2cfa887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55866a8c445c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/lib/facil/fio.c:8339 in fio_siphash_xy\nShadow bytes around the buggy address:\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 04\n=>0x0c047fff8020: fa fa 00[04]fa fa 00 fa fa fa 00 fa fa fa fa fa\n  0x0c047fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "heap-use-after-free", "B": "global-buffer-overflow", "C": "heap-buffer-overflow", "D": "bad-free", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==32041==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000160 at pc 0x55e1101f7b79 bp 0x7ffc6081ec90 sp 0x7ffc6081ec80\nREAD of size 8 at 0x602000000160 thread T0\n    #0 0x55e1101f7b78 in Communicator::create_request(void*) /sourcecode/src/kernel/Communicator.cc:1264\n    #1 0x55e1101ded74 in fuzzloop /dockerin/fuzz_drivers/tf1729593105309npcb.cpp:39\n    #2 0x55e110238229 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x55e1101deb38 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7f221dbcad8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7f221dbcae3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x55e1101dec84 in _start (/dockerin/fuzz_drivers/tf1729593105309npcb.out+0x83c84)\n\n0x602000000160 is located 68 bytes to the right of 12-byte region [0x602000000110,0x60200000011c)\nallocated by thread T0 here:\n    #0 0x7f221e7f1887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55e11023843c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/src/kernel/Communicator.cc:1264 in Communicator::create_request(void*)\nShadow bytes around the buggy address:\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 04\n=>0x0c047fff8020: fa fa 00 04 fa fa fa fa fa fa fa fa[fa]fa fa fa\n  0x0c047fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "global-buffer-overflow", "B": "heap-buffer-overflow", "C": "stack-buffer-underflow", "D": "SIGABRT", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==971==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200000011c at pc 0x55e92dbfd9a9 bp 0x7ffd280b4960 sp 0x7ffd280b4950\nWRITE of size 1 at 0x60200000011c thread T0\n    #0 0x55e92dbfd9a8 in fio_ltoa /sourcecode/lib/facil/fio.c:4949\n    #1 0x55e92dcbd1b8 in http_date2rfc2109 /sourcecode/lib/facil/http/http.c:2313\n    #2 0x55e92dbac9a8 in fuzzloop /dockerin/fuzz_drivers/tf1729828200420qcna.c:55\n    #3 0x55e92dd2b3e9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #4 0x55e92dbabab8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #5 0x7f765895ed8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #6 0x7f765895ee3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #7 0x55e92dbabc04 in _start (/dockerin/fuzz_drivers/tf1729828200420qcna.out+0x1dbc04)\n\n0x60200000011c is located 0 bytes to the right of 12-byte region [0x602000000110,0x60200000011c)\nallocated by thread T0 here:\n    #0 0x7f7659337887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55e92dd2b5fc in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/lib/facil/fio.c:4949 in fio_ltoa\nShadow bytes around the buggy address:\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 04\n=>0x0c047fff8020: fa fa 00[04]fa fa 04 fa fa fa 04 fa fa fa 00 fa\n  0x0c047fff8030: fa fa 00 fa fa fa 00 04 fa fa 00 04 fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "double-free", "B": "heap-buffer-overflow", "C": "memcpy-param-overlap", "D": "allocation-size-too-big", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==5640==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200000015c at pc 0x555f980671ff bp 0x7fff637cbbe0 sp 0x7fff637cbbd0\nREAD of size 1 at 0x60200000015c thread T0\n    #0 0x555f980671fe in http_decode_path /sourcecode/lib/facil/http/http.c:2441\n    #1 0x555f97f5481c in fuzzloop /dockerin/fuzz_drivers/tf1729822403173atwz.c:30\n    #2 0x555f980d3259 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x555f97f53ab8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7f4ffa51fd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7f4ffa51fe3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x555f97f53c04 in _start (/dockerin/fuzz_drivers/tf1729822403173atwz.out+0x1dbc04)\n\n0x60200000015c is located 0 bytes to the right of 12-byte region [0x602000000150,0x60200000015c)\nallocated by thread T0 here:\n    #0 0x7f4ffaef8887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x555f980d346c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/lib/facil/http/http.c:2441 in http_decode_path\nShadow bytes around the buggy address:\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 04\n=>0x0c047fff8020: fa fa 00 04 fa fa 00 04 fa fa 00[04]fa fa 00 fa\n  0x0c047fff8030: fa fa 00 fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "calloc parameters overflow", "B": "stack-buffer-underflow", "C": "heap-buffer-overflow", "D": "stack-buffer-overflow", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==2066==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000210 at pc 0x56129dd02f4f bp 0x7fff95f7ece0 sp 0x7fff95f7ecd0\nWRITE of size 4 at 0x602000000210 thread T0\n    #0 0x56129dd02f4e in flatcc_parse_buffer /sourcecode/src/compiler/flatcc.c:106\n    #1 0x56129dce79a3 in fuzzloop /dockerin/fuzz_drivers/tf1727601035344xrts.c:27\n    #2 0x56129de5c5f9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x56129dce76f8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7fceeebd5d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7fceeebd5e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x56129dce7844 in _start (/dockerin/fuzz_drivers/tf1727601035344xrts.out+0x1e3844)\n\n0x602000000210 is located 120 bytes to the right of 8-byte region [0x602000000190,0x602000000198)\nallocated by thread T0 here:\n    #0 0x7fceef5ae887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x56129de5c80c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/src/compiler/flatcc.c:106 in flatcc_parse_buffer\nShadow bytes around the buggy address:\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 04\n  0x0c047fff8020: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 fa\n  0x0c047fff8030: fa fa 00 fa fa fa fa fa fa fa fa fa fa fa fa fa\n=>0x0c047fff8040: fa fa[fa]fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8090: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "out-of-memory", "B": "memcpy-param-overlap", "C": "larger memory malloc", "D": "heap-buffer-overflow", "answer": "D"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==1409==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200000fdd6 at pc 0x56160410bb0e bp 0x7ffd1c0580a0 sp 0x7ffd1c058090\nREAD of size 2 at 0x60200000fdd6 thread T0\n    #0 0x56160410bb0d in __flatbuffers_voffset_read /sourcecode/include/flatcc/flatcc_endian.h:91\n    #1 0x56160410bb64 in __flatbuffers_voffset_read_from_pe /sourcecode/include/flatcc/flatcc_endian.h:91\n    #2 0x56160410c3f7 in read_voffset /sourcecode/src/runtime/verifier.c:123\n    #3 0x56160410c6bd in read_vt_entry /sourcecode/src/runtime/verifier.c:159\n    #4 0x56160410cb09 in get_offset_field /sourcecode/src/runtime/verifier.c:219\n    #5 0x56160410e547 in flatcc_verify_vector_field /sourcecode/src/runtime/verifier.c:397\n    #6 0x56160410b95e in fuzzloop /dockerin/fuzz_drivers/tf1727601035431mnsf.c:50\n    #7 0x56160411a5a9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #8 0x56160410b388 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #9 0x7f72ee081d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #10 0x7f72ee081e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #11 0x56160410b4d4 in _start (/dockerin/fuzz_drivers/tf1727601035431mnsf.out+0x134d4)\n\nAddress 0x60200000fdd6 is a wild pointer.\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/include/flatcc/flatcc_endian.h:91 in __flatbuffers_voffset_read\nShadow bytes around the buggy address:\n  0x0c047fff9f60: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff9f70: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff9f80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff9f90: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff9fa0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n=>0x0c047fff9fb0: fa fa fa fa fa fa fa fa fa fa[fa]fa fa fa fa fa\n  0x0c047fff9fc0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff9fd0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff9fe0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff9ff0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fffa000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "heap-use-after-free", "B": "stack-buffer-underflow", "C": "heap-buffer-overflow", "D": "stack-buffer-overflow", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==344477==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020000000c0 at pc 0x5648749f58cc bp 0x7ffe8a58a630 sp 0x7ffe8a58a620\nREAD of size 8 at 0x6020000000c0 thread T0\n    #0 0x5648749f58cb in json_object_prev_name /sourcecode/src/util/json_parser.c:1044\n    #1 0x5648749eb6ce in fuzzloop /dockerin/fuzz_drivers/tf1729594312558nkns.cpp:20\n    #2 0x564874a07049 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x5648749eb468 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7fc3cd0f3d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7fc3cd0f3e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x5648749eb5b4 in _start (/dockerin/fuzz_drivers/tf1729594312558nkns.out+0x285b4)\n\n0x6020000000c0 is located 10 bytes to the right of 6-byte region [0x6020000000b0,0x6020000000b6)\nallocated by thread T0 here:\n    #0 0x7fc3cdd1a887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x564874a6238b in BetaString2Dict /home/clouditera/workdir-engine_c/betafuzz/structure/addDict.c:21\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/src/util/json_parser.c:1044 in json_object_prev_name\nShadow bytes around the buggy address:\n  0x0c047fff7fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n=>0x0c047fff8010: fa fa 06 fa fa fa 06 fa[fa]fa 00 03 fa fa 00 04\n  0x0c047fff8020: fa fa 00 04 fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "heap-use-after-free", "B": "bad-free", "C": "heap-buffer-overflow", "D": "memcpy-param-overlap", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==3221==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200000011c at pc 0x55799d571da2 bp 0x7ffe045eaf90 sp 0x7ffe045eaf80\nWRITE of size 1 at 0x60200000011c thread T0\n    #0 0x55799d571da1 in fio_ltoa /sourcecode/lib/facil/fio.c:4949\n    #1 0x55799d622f48 in http_date2rfc7231 /sourcecode/lib/facil/http/http.c:2217\n    #2 0x55799d5169a8 in fuzzloop /dockerin/fuzz_drivers/tf1729822403171ckoy.c:55\n    #3 0x55799d6953e9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #4 0x55799d515ab8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #5 0x7f64ad9c7d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #6 0x7f64ad9c7e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #7 0x55799d515c04 in _start (/dockerin/fuzz_drivers/tf1729822403171ckoy.out+0x1dbc04)\n\n0x60200000011c is located 0 bytes to the right of 12-byte region [0x602000000110,0x60200000011c)\nallocated by thread T0 here:\n    #0 0x7f64ae3a0887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55799d6955fc in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/lib/facil/fio.c:4949 in fio_ltoa\nShadow bytes around the buggy address:\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 04\n=>0x0c047fff8020: fa fa 00[04]fa fa 04 fa fa fa 04 fa fa fa 00 fa\n  0x0c047fff8030: fa fa 00 fa fa fa 00 04 fa fa 00 04 fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "heap-buffer-overflow", "B": "memcpy-param-overlap", "C": "allocation-size-too-big", "D": "bad-free", "answer": "A"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==4087==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000008 at pc 0x562cc2498a3c bp 0x7ffe650589b0 sp 0x7ffe650589a0\nWRITE of size 2 at 0x602000000008 thread T0\n    #0 0x562cc2498a3b in block_free /sourcecode/lib/facil/fio.c:7837\n    #1 0x562cc249950a in block_slice_free /sourcecode/lib/facil/fio.c:7935\n    #2 0x562cc2499de0 in fio_free /sourcecode/lib/facil/fio.c:8097\n    #3 0x562cc2422259 in fuzzloop /dockerin/fuzz_drivers/tf1729828200233yvld.c:38\n    #4 0x562cc24d1e39 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #5 0x562cc24219d8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #6 0x7efd82ef5d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #7 0x7efd82ef5e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #8 0x562cc2421b24 in _start (/dockerin/fuzz_drivers/tf1729828200233yvld.out+0xc5b24)\n\n0x602000000008 is located 8 bytes to the left of 15-byte region [0x602000000010,0x60200000001f)\nallocated by thread T0 here:\n    #0 0x7efd838ce887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x7efd82f7458e in strdup (/lib/x86_64-linux-gnu/libc.so.6+0xa858e)\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/lib/facil/fio.c:7837 in block_free\nShadow bytes around the buggy address:\n  0x0c047fff7fb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n=>0x0c047fff8000: fa[fa]00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 04\n  0x0c047fff8020: fa fa 00 04 fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "double-free", "B": "out-of-memory", "C": "heap-buffer-overflow", "D": "invalid-posix-memalign-alignment", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==196==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200000e996 at pc 0x55fe3dab8077 bp 0x7fff5ba2d7a0 sp 0x7fff5ba2d790\nWRITE of size 1 at 0x60200000e996 thread T0\n    #0 0x55fe3dab8076 in hex2byte /sourcecode/lib/facil/http/http.c:2377\n    #1 0x55fe3dab9504 in http_decode_path_unsafe /sourcecode/lib/facil/http/http.c:2461\n    #2 0x55fe3d9a680a in fuzzloop /sharedockerin/ta1729829438589mmde/test_file.c:29\n    #3 0x55fe3db25249 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #4 0x55fe3d9a5ab8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #5 0x7f2855d05d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #6 0x7f2855d05e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #7 0x55fe3d9a5c04 in _start (/sharedockerin/ta1729829438589mmde/clouditera+0x1dbc04)\n\n0x60200000e996 is located 2 bytes to the right of 4-byte region [0x60200000e990,0x60200000e994)\nallocated by thread T0 here:\n    #0 0x7f28566de887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55fe3db2545c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/lib/facil/http/http.c:2377 in hex2byte\nShadow bytes around the buggy address:\n  0x0c047fff9ce0: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd\n  0x0c047fff9cf0: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd\n  0x0c047fff9d00: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd\n  0x0c047fff9d10: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd\n  0x0c047fff9d20: fa fa fd fd fa fa 00 04 fa fa 00 04 fa fa fd fd\n=>0x0c047fff9d30: fa fa[04]fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff9d40: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff9d50: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff9d60: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff9d70: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff9d80: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "heap-use-after-free", "B": "invalid-posix-memalign-alignment", "C": "heap-buffer-overflow", "D": "bad-free", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==1705==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000128 at pc 0x55f9946015a3 bp 0x7ffc030f30a0 sp 0x7ffc030f3090\nREAD of size 1 at 0x602000000128 thread T0\n    #0 0x55f9946015a2 in rb_insert_color /sourcecode/src/kernel/rbtree.c:69\n    #1 0x55f9945ff739 in fuzzloop /dockerin/fuzz_drivers/tf1729593996258dnqv.cpp:24\n    #2 0x55f99460ebe9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x55f9945ff348 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7f784dceed8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7f784dceee3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x55f9945ff494 in _start (/dockerin/fuzz_drivers/tf1729593996258dnqv.out+0x17494)\n\n0x602000000128 is located 8 bytes to the left of 12-byte region [0x602000000130,0x60200000013c)\nallocated by thread T0 here:\n    #0 0x7f784e915887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55f99460edfc in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/src/kernel/rbtree.c:69 in rb_insert_color\nShadow bytes around the buggy address:\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 04\n=>0x0c047fff8020: fa fa 00 04 fa[fa]00 04 fa fa 00 04 fa fa 00 04\n  0x0c047fff8030: fa fa 00 04 fa fa 01 fa fa fa 01 fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "larger memory malloc", "B": "heap-buffer-overflow", "C": "invalid-posix-memalign-alignment", "D": "heap-use-after-free", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==3815==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000118 at pc 0x563af0a7b31f bp 0x7ffe382e4010 sp 0x7ffe382e4000\nREAD of size 8 at 0x602000000118 thread T0\n    #0 0x563af0a7b31e in IOService::aio_finish(void*) /sourcecode/src/kernel/IOService_linux.cc:352\n    #1 0x563af0a77644 in fuzzloop /dockerin/fuzz_drivers/tf1729593105334clfp.cpp:28\n    #2 0x563af0a83d59 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x563af0a77408 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7f3428145d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7f3428145e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x563af0a77554 in _start (/dockerin/fuzz_drivers/tf1729593105334clfp.out+0x14554)\n\n0x60200000011c is located 0 bytes to the right of 12-byte region [0x602000000110,0x60200000011c)\nallocated by thread T0 here:\n    #0 0x7f3428d6c887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x563af0a83f6c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/src/kernel/IOService_linux.cc:352 in IOService::aio_finish(void*)\nShadow bytes around the buggy address:\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 04\n=>0x0c047fff8020: fa fa 00[04]fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "heap-buffer-overflow", "B": "invalid-posix-memalign-alignment", "C": "global-buffer-overflow", "D": "unknown-crash", "answer": "A"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==29033==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6060000000c0 at pc 0x55ecadf76d50 bp 0x7ffed537a280 sp 0x7ffed537a270\nREAD of size 8 at 0x6060000000c0 thread T0\n    #0 0x55ecadf76d4f in UPSWeightedRandomPolicy::fuse_one_server(EndpointAddress const*) /sourcecode/src/nameservice/UpstreamPolicies.cc:596\n    #1 0x55ecadf5f04c in fuzzloop /dockerin/fuzz_drivers/tf1729593105367zxxo.cpp:41\n    #2 0x55ecae12cee9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x55ecadf5e978 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7f8d9ffcad8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7f8d9ffcae3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x55ecadf5eac4 in _start (/dockerin/fuzz_drivers/tf1729593105367zxxo.out+0x381ac4)\n\n0x6060000000c0 is located 8 bytes to the right of 56-byte region [0x606000000080,0x6060000000b8)\nallocated by thread T0 here:\n    #0 0x7f8da0bf31e7 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cpp:99\n    #1 0x55ecadf602db in std::_MakeUniq<PolicyAddrParams>::__single_object std::make_unique<PolicyAddrParams>() /usr/include/c++/11/bits/unique_ptr.h:962\n    #2 0x55ecadf5ed99 in fuzzloop /dockerin/fuzz_drivers/tf1729593105367zxxo.cpp:39\n    #3 0x55ecae12cee9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/src/nameservice/UpstreamPolicies.cc:596 in UPSWeightedRandomPolicy::fuse_one_server(EndpointAddress const*)\nShadow bytes around the buggy address:\n  0x0c0c7fff7fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c0c7fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c0c7fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c0c7fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c0c7fff8000: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa\n=>0x0c0c7fff8010: 00 00 00 00 00 00 00 fa[fa]fa fa fa fa fa fa fa\n  0x0c0c7fff8020: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c0c7fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c0c7fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c0c7fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c0c7fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "memcpy-param-overlap", "B": "heap-buffer-overflow", "C": "stack-buffer-overflow", "D": "out-of-memory", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==351077==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020000002d8 at pc 0x556f7deb0a97 bp 0x7ffd9f7f15a0 sp 0x7ffd9f7f1590\nREAD of size 8 at 0x6020000002d8 thread T0\n    #0 0x556f7deb0a96 in __gnu_cxx::__normal_iterator<EndpointAddress**, std::vector<EndpointAddress*, std::allocator<EndpointAddress*> > >::__normal_iterator(EndpointAddress** const&) /usr/include/c++/11/bits/stl_iterator.h:1028\n    #1 0x556f7deab30f in std::vector<EndpointAddress*, std::allocator<EndpointAddress*> >::end() /usr/include/c++/11/bits/stl_vector.h:830\n    #2 0x556f7de9b181 in UPSWeightedRandomPolicy::select_history_weight(WFNSTracing*) /sourcecode/src/nameservice/UpstreamPolicies.cc:512\n    #3 0x556f7de9b80f in UPSWeightedRandomPolicy::first_strategy(ParsedURI const&, WFNSTracing*) /sourcecode/src/nameservice/UpstreamPolicies.cc:526\n    #4 0x556f7de895d7 in fuzzloop /dockerin/fuzz_drivers/tf1729655721845dnzz.cpp:32\n    #5 0x556f7e0536e9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #6 0x556f7de888d8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #7 0x7f4550902d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #8 0x7f4550902e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #9 0x556f7de88a24 in _start (/dockerin/fuzz_drivers/tf1729655721845dnzz.out+0x378a24)\n\n0x6020000002dc is located 0 bytes to the right of 12-byte region [0x6020000002d0,0x6020000002dc)\nallocated by thread T0 here:\n    #0 0x7f4551529887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x556f7e0538fc in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /usr/include/c++/11/bits/stl_iterator.h:1028 in __gnu_cxx::__normal_iterator<EndpointAddress**, std::vector<EndpointAddress*, std::allocator<EndpointAddress*> > >::__normal_iterator(EndpointAddress** const&)\nShadow bytes around the buggy address:\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 04\n  0x0c047fff8020: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04\n  0x0c047fff8030: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04\n  0x0c047fff8040: fa fa 00 04 fa fa 00 04 fa fa 00 04 fa fa 00 04\n=>0x0c047fff8050: fa fa 00 04 fa fa 00 04 fa fa 00[04]fa fa 01 fa\n  0x0c047fff8060: fa fa 01 fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8090: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff80a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "heap-buffer-overflow", "B": "larger memory malloc", "C": "out-of-memory", "D": "bad-free", "answer": "A"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==6707==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000140 at pc 0x56544d220fa1 bp 0x7fff08f77ff0 sp 0x7fff08f77fe0\nREAD of size 8 at 0x602000000140 thread T0\n    #0 0x56544d220fa0 in flatcc_emitter /sourcecode/src/runtime/emitter.c:204\n    #1 0x56544d21c68e in fuzzloop /dockerin/fuzz_drivers/tf1727601035346vvpl.c:34\n    #2 0x56544d22a969 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x56544d21c328 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7f479db2fd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7f479db2fe3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x56544d21c474 in _start (/dockerin/fuzz_drivers/tf1727601035346vvpl.out+0x19474)\n\n0x602000000140 is located 0 bytes to the right of 16-byte region [0x602000000130,0x602000000140)\nallocated by thread T0 here:\n    #0 0x7f479e508887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x56544d222e18 in driverAllocMem /home/clouditera/workdir-engine_c/betafuzz/structure/fuzzagentapi.c:140\n    #2 0x56544d22a969 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/src/runtime/emitter.c:204 in flatcc_emitter\nShadow bytes around the buggy address:\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 04\n=>0x0c047fff8020: fa fa 00 04 fa fa 00 00[fa]fa 00 04 fa fa 00 04\n  0x0c047fff8030: fa fa 00 fa fa fa 00 fa fa fa 04 fa fa fa 04 fa\n  0x0c047fff8040: fa fa 04 fa fa fa 04 fa fa fa 00 fa fa fa 00 fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "global-buffer-overflow", "B": "heap-buffer-overflow", "C": "stack-buffer-overflow", "D": "out-of-memory", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==25377==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000120 at pc 0x564064137d2a bp 0x7fff84bec5f0 sp 0x7fff84bec5e0\nREAD of size 8 at 0x602000000120 thread T0\n    #0 0x564064137d29 in Communicator::handler_thread_routine(void*) /sourcecode/src/kernel/Communicator.cc:1165\n    #1 0x564064120d74 in fuzzloop /dockerin/fuzz_drivers/tf1729593105309pcik.cpp:39\n    #2 0x56406417a219 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x564064120b38 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7fde8714bd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7fde8714be3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x564064120c84 in _start (/dockerin/fuzz_drivers/tf1729593105309pcik.out+0x83c84)\n\n0x602000000120 is located 4 bytes to the right of 12-byte region [0x602000000110,0x60200000011c)\nallocated by thread T0 here:\n    #0 0x7fde87d72887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x56406417a42c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/src/kernel/Communicator.cc:1165 in Communicator::handler_thread_routine(void*)\nShadow bytes around the buggy address:\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 04\n=>0x0c047fff8020: fa fa 00 04[fa]fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "unknown-crash", "B": "heap-buffer-overflow", "C": "out-of-memory", "D": "bad-free", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==299==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200000c113 at pc 0x7f0f068e2397 bp 0x7ffe5cc8c130 sp 0x7ffe5cc8b8d8\nREAD of size 3 at 0x60200000c113 thread T0\n    #0 0x7f0f068e2396 in __interceptor_memcpy ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:827\n    #1 0x55cab905b419 in uint3korr /sourcecode/src/protocol/mysql_byteorder.h:179\n    #2 0x55cab905b97b in decode_length_safe /sourcecode/src/protocol/mysql_byteorder.c:53\n    #3 0x55cab9058936 in parse_field_count /sourcecode/src/protocol/mysql_parser.c:357\n    #4 0x55cab9054cf5 in mysql_parser_parse /sourcecode/src/protocol/mysql_parser.c:81\n    #5 0x55cab906b087 in protocol::MySQLResponse::decode_packet(unsigned char const*, unsigned long) /sourcecode/src/protocol/MySQLMessage.cc:623\n    #6 0x55cab8ffd6ae in fuzzloop /sharedockerin/ta1729664328007pfbx/test_file.cpp:19\n    #7 0x55cab90a1929 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #8 0x55cab8ffd2b8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #9 0x7f0f05d35d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #10 0x7f0f05d35e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #11 0x55cab8ffd404 in _start (/sharedockerin/ta1729664328007pfbx/clouditera+0x109404)\n\n0x60200000c113 is located 0 bytes to the right of 3-byte region [0x60200000c110,0x60200000c113)\nallocated by thread T0 here:\n    #0 0x7f0f0695c887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55cab90a1b3c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:827 in __interceptor_memcpy\nShadow bytes around the buggy address:\n  0x0c047fff97d0: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fff97e0: fa fa fd fd fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fff97f0: fa fa fd fa fa fa fd fd fa fa fd fa fa fa fd fa\n  0x0c047fff9800: fa fa fd fa fa fa fd fd fa fa fd fa fa fa fd fa\n  0x0c047fff9810: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n=>0x0c047fff9820: fa fa[03]fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff9830: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff9840: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff9850: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff9860: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff9870: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "heap-buffer-overflow", "B": "double-free", "C": "bad-free", "D": "out-of-memory", "answer": "A"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==172==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000002a55 at pc 0x55f80efa4d15 bp 0x7ffe2fb91180 sp 0x7ffe2fb91170\nREAD of size 1 at 0x602000002a55 thread T0\n    #0 0x55f80efa4d14 in fio_json_parse /sourcecode/lib/facil/fiobj/fio_json_parser.h:456\n    #1 0x55f80efb334c in fiobj_json2obj /sourcecode/lib/facil/fiobj/fiobj_json.c:379\n    #2 0x55f80ef9e3be in fuzzloop /sharedockerin/ta1730101611730qass/test_file.c:19\n    #3 0x55f80f0a3cb9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #4 0x55f80ef9da98 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #5 0x7f9eec816d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #6 0x7f9eec816e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #7 0x55f80ef9dbe4 in _start (/sharedockerin/ta1730101611730qass/clouditera+0x134be4)\n\n0x602000002a55 is located 0 bytes to the right of 5-byte region [0x602000002a50,0x602000002a55)\nallocated by thread T0 here:\n    #0 0x7f9eed1ef887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55f80f0a3ecc in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/lib/facil/fiobj/fio_json_parser.h:456 in fio_json_parse\nShadow bytes around the buggy address:\n  0x0c047fff84f0: fa fa fd fa fa fa 00 00 fa fa fd fd fa fa fd fa\n  0x0c047fff8500: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fff8510: fa fa fd fa fa fa fd fa fa fa fd fa fa fa 00 00\n  0x0c047fff8520: fa fa fd fd fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fff8530: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n=>0x0c047fff8540: fa fa fd fa fa fa fd fa fa fa[05]fa fa fa fd fa\n  0x0c047fff8550: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fff8560: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fff8570: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fff8580: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fd\n  0x0c047fff8590: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "invalid-posix-memalign-alignment", "B": "heap-use-after-free", "C": "heap-buffer-overflow", "D": "bad-free", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==3149==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200000011c at pc 0x55bbd7b512b5 bp 0x7ffedd6ca4c0 sp 0x7ffedd6ca4b0\nREAD of size 1 at 0x60200000011c thread T0\n    #0 0x55bbd7b512b4 in fio_siphash_xy /sourcecode/lib/facil/fio.c:8339\n    #1 0x55bbd7b527b3 in fio_siphash24 /sourcecode/lib/facil/fio.c:8398\n    #2 0x55bbd7ad6c4a in fuzzloop /dockerin/fuzz_drivers/tf1729822403005mkbx.c:23\n    #3 0x55bbd7b867f9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #4 0x55bbd7ad69d8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #5 0x7fe016317d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #6 0x7fe016317e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #7 0x55bbd7ad6b24 in _start (/dockerin/fuzz_drivers/tf1729822403005mkbx.out+0xc4b24)\n\n0x60200000011c is located 0 bytes to the right of 12-byte region [0x602000000110,0x60200000011c)\nallocated by thread T0 here:\n    #0 0x7fe016cf0887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55bbd7b86a0c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/lib/facil/fio.c:8339 in fio_siphash_xy\nShadow bytes around the buggy address:\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 04\n=>0x0c047fff8020: fa fa 00[04]fa fa 00 fa fa fa 00 fa fa fa 00 fa\n  0x0c047fff8030: fa fa 00 fa fa fa 00 fa fa fa 00 fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "heap-buffer-overflow", "B": "stack-buffer-underflow", "C": "stack-buffer-overflow", "D": "memcpy-param-overlap", "answer": "A"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==4784==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x604000000000 at pc 0x564c7bdc3702 bp 0x7ffe0a6da4e0 sp 0x7ffe0a6da4d0\nREAD of size 8 at 0x604000000000 thread T0\n    #0 0x564c7bdc3701 in big_realloc /sourcecode/lib/facil/fio.c:7964\n    #1 0x564c7bdc3ec8 in fio_realloc2 /sourcecode/lib/facil/fio.c:8115\n    #2 0x564c7bdc3fca in fio_realloc /sourcecode/lib/facil/fio.c:8136\n    #3 0x564c7bd4c26e in fuzzloop /dockerin/fuzz_drivers/tf1729822402999wmkc.c:26\n    #4 0x564c7bdfbe69 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #5 0x564c7bd4b9d8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #6 0x7f26994ead8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #7 0x7f26994eae3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #8 0x564c7bd4bb24 in _start (/dockerin/fuzz_drivers/tf1729822402999wmkc.out+0xc5b24)\n\n0x604000000000 is located 16 bytes to the left of 39-byte region [0x604000000010,0x604000000037)\nallocated by thread T0 here:\n    #0 0x7f2699ec3887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x564c7bdfc07c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /sourcecode/lib/facil/fio.c:7964 in big_realloc\nShadow bytes around the buggy address:\n  0x0c087fff7fb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c087fff7fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c087fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c087fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c087fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n=>0x0c087fff8000:[fa]fa 00 00 00 00 07 fa fa fa fa fa fa fa fa fa\n  0x0c087fff8010: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c087fff8020: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c087fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c087fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c087fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "global-buffer-overflow", "B": "heap-buffer-overflow", "C": "stack-buffer-overflow", "D": "calloc parameters overflow", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==39701==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200000025c at pc 0x7fb86ab5c397 bp 0x7ffc01da9f50 sp 0x7ffc01da96f8\nREAD of size 65535 at 0x60200000025c thread T0\n    #0 0x7fb86ab5c396 in __interceptor_memcpy ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:827\n    #1 0x557e76b995e7 in ASN1_STRING_set crypto/asn1/asn1_lib.c:323\n    #2 0x557e76b7d1f8 in ossl_cmp_sk_ASN1_UTF8STRING_push_str crypto/cmp/cmp_util.c:231\n    #3 0x557e76b7a9f3 in fuzzloop /dockerin/fuzz_drivers/tf1730183725709kljw.c:43\n    #4 0x557e76ba3939 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #5 0x557e76b7a698 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #6 0x7fb86961ad8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #7 0x7fb86961ae3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #8 0x557e76b7a7e4 in _start (/dockerin/fuzz_drivers/tf1730183725709kljw.out+0x2b7e4)\n\n0x60200000025c is located 0 bytes to the right of 12-byte region [0x602000000250,0x60200000025c)\nallocated by thread T0 here:\n    #0 0x7fb86abd6887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x557e76ba3b4c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:827 in __interceptor_memcpy\nShadow bytes around the buggy address:\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 04 fa\n  0x0c047fff8020: fa fa 04 fa fa fa 04 fa fa fa 04 fa fa fa 00 04\n  0x0c047fff8030: fa fa 00 04 fa fa 03 fa fa fa 00 04 fa fa fd fa\n=>0x0c047fff8040: fa fa 02 fa fa fa 00 04 fa fa 00[04]fa fa 04 fa\n  0x0c047fff8050: fa fa 04 fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8090: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "out-of-memory", "B": "heap-buffer-overflow", "C": "memcpy-param-overlap", "D": "allocation-size-too-big", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==355==ERROR: AddressSanitizer: heap-use-after-free on address 0x603000000521 at pc 0x55a62f493308 bp 0x7ffd60e97ab0 sp 0x7ffd60e97aa0\nREAD of size 4 at 0x603000000521 thread T0\n    #0 0x55a62f493307 in uint4korr /sourcecode/src/protocol/mysql_byteorder.h:51\n    #1 0x55a62f49953c in parse_column_def_packet /sourcecode/src/protocol/mysql_parser.c:446\n    #2 0x55a62f494153 in mysql_parser_parse /sourcecode/src/protocol/mysql_parser.c:81\n    #3 0x55a62f4aa4e5 in protocol::MySQLResponse::decode_packet(unsigned char const*, unsigned long) /sourcecode/src/protocol/MySQLMessage.cc:623\n    #4 0x55a62f43c6ae in fuzzloop /sharedockerin/ta1729664330130qvkp/test_file.cpp:25\n    #5 0x55a62f4e0d89 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #6 0x55a62f43c2b8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #7 0x7f67c24acd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #8 0x7f67c24ace3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #9 0x55a62f43c404 in _start (/sharedockerin/ta1729664330130qvkp/clouditera+0x10a404)\n\n0x603000000521 is located 1 bytes inside of 24-byte region [0x603000000520,0x603000000538)\nfreed by thread T0 here:\n    #0 0x7f67c30d3537 in __interceptor_free ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:127\n    #1 0x55a62f4e0fcc in BetaWfree /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:97\n\npreviously allocated by thread T0 here:\n    #0 0x7f67c30d3887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55a62f4e0f9c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-use-after-free /sourcecode/src/protocol/mysql_byteorder.h:51 in uint4korr\nShadow bytes around the buggy address:\n  0x0c067fff8050: fd fd fd fa fa fa fd fd fd fa fa fa fd fd fd fa\n  0x0c067fff8060: fa fa fd fd fd fa fa fa fd fd fd fa fa fa fd fd\n  0x0c067fff8070: fd fa fa fa fd fd fd fa fa fa fd fd fd fa fa fa\n  0x0c067fff8080: fd fd fd fa fa fa fd fd fd fa fa fa fd fd fd fa\n  0x0c067fff8090: fa fa fd fd fd fa fa fa fd fd fd fa fa fa fd fd\n=>0x0c067fff80a0: fd fa fa fa[fd]fd fd fa fa fa fd fd fd fa fa fa\n  0x0c067fff80b0: fd fd fd fa fa fa fd fd fd fa fa fa fd fd fd fd\n  0x0c067fff80c0: fa fa fd fd fd fa fa fa fd fd fd fa fa fa fd fd\n  0x0c067fff80d0: fd fa fa fa fd fd fd fa fa fa fd fd fd fa fa fa\n  0x0c067fff80e0: fd fd fd fa fa fa fd fd fd fd fa fa fd fd fd fa\n  0x0c067fff80f0: fa fa fd fd fd fa fa fa fd fd fd fa fa fa fd fd\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "stack-buffer-underflow", "B": "heap-use-after-free", "C": "memcpy-param-overlap", "D": "heap-buffer-overflow", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==206==ERROR: AddressSanitizer: heap-use-after-free on address 0x60600000178d at pc 0x5591467e97c9 bp 0x7fff157c4410 sp 0x7fff157c4400\nREAD of size 1 at 0x60600000178d thread T0\n    #0 0x5591467e97c8 in hex2byte /sourcecode/lib/facil/http/http.c:2388\n    #1 0x5591467ea504 in http_decode_path_unsafe /sourcecode/lib/facil/http/http.c:2461\n    #2 0x5591466d780a in fuzzloop /sharedockerin/ta1730101611417egzi/test_file.c:29\n    #3 0x559146856249 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #4 0x5591466d6ab8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #5 0x7f7693313d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #6 0x7f7693313e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #7 0x5591466d6c04 in _start (/sharedockerin/ta1730101611417egzi/clouditera+0x1dbc04)\n\n0x60600000178d is located 45 bytes inside of 63-byte region [0x606000001760,0x60600000179f)\nfreed by thread T0 here:\n    #0 0x7f7693cec537 in __interceptor_free ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:127\n    #1 0x5591468b6759 in extract_stack_trace /home/clouditera/workdir-engine_c/betafuzz/structure/customReport.c:119\n\npreviously allocated by thread T0 here:\n    #0 0x7f7693ceca57 in __interceptor_calloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:154\n    #1 0x5591468b6697 in extract_stack_trace /home/clouditera/workdir-engine_c/betafuzz/structure/customReport.c:94\n\nSUMMARY: AddressSanitizer: heap-use-after-free /sourcecode/lib/facil/http/http.c:2388 in hex2byte\nShadow bytes around the buggy address:\n  0x0c0c7fff82a0: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa\n  0x0c0c7fff82b0: fd fd fd fd fd fd fd fa fa fa fa fa fd fd fd fd\n  0x0c0c7fff82c0: fd fd fd fa fa fa fa fa fd fd fd fd fd fd fd fa\n  0x0c0c7fff82d0: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa\n  0x0c0c7fff82e0: 00 00 00 00 00 00 03 fa fa fa fa fa fd fd fd fd\n=>0x0c0c7fff82f0: fd[fd]fd fd fa fa fa fa fd fd fd fd fd fd fd fd\n  0x0c0c7fff8300: fa fa fa fa fd fd fd fd fd fd fd fd fa fa fa fa\n  0x0c0c7fff8310: fd fd fd fd fd fd fd fd fa fa fa fa fd fd fd fd\n  0x0c0c7fff8320: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd\n  0x0c0c7fff8330: fa fa fa fa fd fd fd fd fd fd fd fd fa fa fa fa\n  0x0c0c7fff8340: fd fd fd fd fd fd fd fd fa fa fa fa fd fd fd fd\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "global-buffer-overflow", "B": "heap-use-after-free", "C": "heap-buffer-overflow", "D": "out-of-memory", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==132==ERROR: AddressSanitizer: heap-use-after-free on address 0x603000021981 at pc 0x5565198322ca bp 0x7fffe8f64cf0 sp 0x7fffe8f64ce0\nWRITE of size 1 at 0x603000021981 thread T0\n    #0 0x5565198322c9 in fio_ltoa /sourcecode/lib/facil/fio.c:4855\n    #1 0x556519834169 in fio_ftoa /sourcecode/lib/facil/fio.c:4994\n    #2 0x5565197f0288 in fuzzloop /sharedockerin/ta1730101611642vjjm/test_file.c:39\n    #3 0x55651989fe69 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #4 0x5565197ef9d8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #5 0x7f1097ef3d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #6 0x7f1097ef3e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #7 0x5565197efb24 in _start (/sharedockerin/ta1730101611642vjjm/clouditera+0xc5b24)\n\n0x603000021981 is located 48 bytes to the right of 17-byte region [0x603000021940,0x603000021951)\nallocated by thread T0 here:\n    #0 0x7f10988cc887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x5565198a007c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-use-after-free /sourcecode/lib/facil/fio.c:4855 in fio_ltoa\nShadow bytes around the buggy address:\n  0x0c067fffc2e0: fd fd fd fa fa fa fd fd fd fa fa fa fd fd fd fa\n  0x0c067fffc2f0: fa fa fd fd fd fa fa fa fd fd fd fa fa fa fd fd\n  0x0c067fffc300: fd fa fa fa 00 00 01 fa fa fa fd fd fd fa fa fa\n  0x0c067fffc310: fd fd fd fa fa fa fd fd fd fa fa fa fd fd fd fa\n  0x0c067fffc320: fa fa fd fd fd fa fa fa 00 00 01 fa fa fa fd fd\n=>0x0c067fffc330:[fd]fd fa fa fd fd fd fd fa fa fd fd fd fd fa fa\n  0x0c067fffc340: fd fd fd fd fa fa fd fd fd fd fa fa fd fd fd fd\n  0x0c067fffc350: fa fa fd fd fd fa fa fa fd fd fd fd fa fa fd fd\n  0x0c067fffc360: fd fa fa fa fd fd fd fa fa fa fd fd fd fa fa fa\n  0x0c067fffc370: fd fd fd fa fa fa fd fd fd fa fa fa fd fd fd fa\n  0x0c067fffc380: fa fa fd fd fd fd fa fa fd fd fd fd fa fa fd fd\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "SIGABRT", "B": "bad-free", "C": "larger memory malloc", "D": "heap-use-after-free", "answer": "D"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==214==ERROR: AddressSanitizer: heap-use-after-free on address 0x6020000006d6 at pc 0x55fe3dab972f bp 0x7fff5ba2d7d0 sp 0x7fff5ba2d7c0\nWRITE of size 1 at 0x6020000006d6 thread T0\n    #0 0x55fe3dab972e in http_decode_path_unsafe /sourcecode/lib/facil/http/http.c:2468\n    #1 0x55fe3d9a680a in fuzzloop /sharedockerin/ta1729829438589mmde/test_file.c:29\n    #2 0x55fe3db25249 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x55fe3d9a5ab8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7f2855d05d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7f2855d05e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x55fe3d9a5c04 in _start (/sharedockerin/ta1729829438589mmde/clouditera+0x1dbc04)\n\n0x6020000006d6 is located 449 bytes to the right of 5-byte region [0x602000000510,0x602000000515)\nallocated by thread T0 here:\n    #0 0x7f28566de887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55fe3db2545c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-use-after-free /sourcecode/lib/facil/http/http.c:2468 in http_decode_path_unsafe\nShadow bytes around the buggy address:\n  0x0c047fff8080: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd\n  0x0c047fff8090: fa fa fd fd fa fa fd fd fa fa 05 fa fa fa fd fa\n  0x0c047fff80a0: fa fa 05 fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fff80b0: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fff80c0: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n=>0x0c047fff80d0: fa fa fd fa fa fa fd fa fa fa[fd]fa fa fa fd fa\n  0x0c047fff80e0: fa fa fd fa fa fa fd fd fa fa fd fa fa fa fd fa\n  0x0c047fff80f0: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fff8100: fa fa fd fd fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fff8110: fa fa fd fd fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fff8120: fa fa fd fa fa fa fd fa fa fa fd fd fa fa fd fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "bad-free", "B": "heap-use-after-free", "C": "allocation-size-too-big", "D": "calloc parameters overflow", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==355==ERROR: AddressSanitizer: heap-use-after-free on address 0x6030000004f7 at pc 0x55a62f49a9fc bp 0x7ffd60e97a40 sp 0x7ffd60e97a30\nREAD of size 1 at 0x6030000004f7 thread T0\n    #0 0x55a62f49a9fb in decode_length_safe /sourcecode/src/protocol/mysql_byteorder.c:29\n    #1 0x55a62f49b0f2 in decode_string /sourcecode/src/protocol/mysql_byteorder.c:77\n    #2 0x55a62f498d42 in parse_column_def_packet /sourcecode/src/protocol/mysql_parser.c:420\n    #3 0x55a62f494153 in mysql_parser_parse /sourcecode/src/protocol/mysql_parser.c:81\n    #4 0x55a62f4aa4e5 in protocol::MySQLResponse::decode_packet(unsigned char const*, unsigned long) /sourcecode/src/protocol/MySQLMessage.cc:623\n    #5 0x55a62f43c6ae in fuzzloop /sharedockerin/ta1729664330130qvkp/test_file.cpp:25\n    #6 0x55a62f4e0d89 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #7 0x55a62f43c2b8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #8 0x7f67c24acd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #9 0x7f67c24ace3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #10 0x55a62f43c404 in _start (/sharedockerin/ta1729664330130qvkp/clouditera+0x10a404)\n\n0x6030000004f7 is located 7 bytes inside of 20-byte region [0x6030000004f0,0x603000000504)\nfreed by thread T0 here:\n    #0 0x7f67c30d3537 in __interceptor_free ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:127\n    #1 0x55a62f4e0fcc in BetaWfree /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:97\n\npreviously allocated by thread T0 here:\n    #0 0x7f67c30d3887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55a62f4e0f9c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-use-after-free /sourcecode/src/protocol/mysql_byteorder.c:29 in decode_length_safe\nShadow bytes around the buggy address:\n  0x0c067fff8040: fd fd fa fa fd fd fd fd fa fa fd fd fd fa fa fa\n  0x0c067fff8050: fd fd fd fa fa fa fd fd fd fa fa fa fd fd fd fa\n  0x0c067fff8060: fa fa fd fd fd fa fa fa fd fd fd fa fa fa fd fd\n  0x0c067fff8070: fd fa fa fa fd fd fd fa fa fa fd fd fd fa fa fa\n  0x0c067fff8080: fd fd fd fa fa fa fd fd fd fa fa fa fd fd fd fa\n=>0x0c067fff8090: fa fa fd fd fd fa fa fa fd fd fd fa fa fa[fd]fd\n  0x0c067fff80a0: fd fa fa fa fd fd fd fa fa fa fd fd fd fa fa fa\n  0x0c067fff80b0: fd fd fd fa fa fa fd fd fd fa fa fa fd fd fd fd\n  0x0c067fff80c0: fa fa fd fd fd fa fa fa fd fd fd fa fa fa fd fd\n  0x0c067fff80d0: fd fa fa fa fd fd fd fa fa fa fd fd fd fa fa fa\n  0x0c067fff80e0: fd fd fd fa fa fa fd fd fd fd fa fa fd fd fd fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "memcpy-param-overlap", "B": "double-free", "C": "heap-use-after-free", "D": "allocation-size-too-big", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==355==ERROR: AddressSanitizer: heap-use-after-free on address 0x603000000525 at pc 0x55a62f499670 bp 0x7ffd60e97b60 sp 0x7ffd60e97b50\nREAD of size 1 at 0x603000000525 thread T0\n    #0 0x55a62f49966f in parse_column_def_packet /sourcecode/src/protocol/mysql_parser.c:447\n    #1 0x55a62f494153 in mysql_parser_parse /sourcecode/src/protocol/mysql_parser.c:81\n    #2 0x55a62f4aa4e5 in protocol::MySQLResponse::decode_packet(unsigned char const*, unsigned long) /sourcecode/src/protocol/MySQLMessage.cc:623\n    #3 0x55a62f43c6ae in fuzzloop /sharedockerin/ta1729664330130qvkp/test_file.cpp:25\n    #4 0x55a62f4e0d89 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #5 0x55a62f43c2b8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #6 0x7f67c24acd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #7 0x7f67c24ace3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #8 0x55a62f43c404 in _start (/sharedockerin/ta1729664330130qvkp/clouditera+0x10a404)\n\n0x603000000525 is located 5 bytes inside of 24-byte region [0x603000000520,0x603000000538)\nfreed by thread T0 here:\n    #0 0x7f67c30d3537 in __interceptor_free ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:127\n    #1 0x55a62f4e0fcc in BetaWfree /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:97\n\npreviously allocated by thread T0 here:\n    #0 0x7f67c30d3887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55a62f4e0f9c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-use-after-free /sourcecode/src/protocol/mysql_parser.c:447 in parse_column_def_packet\nShadow bytes around the buggy address:\n  0x0c067fff8050: fd fd fd fa fa fa fd fd fd fa fa fa fd fd fd fa\n  0x0c067fff8060: fa fa fd fd fd fa fa fa fd fd fd fa fa fa fd fd\n  0x0c067fff8070: fd fa fa fa fd fd fd fa fa fa fd fd fd fa fa fa\n  0x0c067fff8080: fd fd fd fa fa fa fd fd fd fa fa fa fd fd fd fa\n  0x0c067fff8090: fa fa fd fd fd fa fa fa fd fd fd fa fa fa fd fd\n=>0x0c067fff80a0: fd fa fa fa[fd]fd fd fa fa fa fd fd fd fa fa fa\n  0x0c067fff80b0: fd fd fd fa fa fa fd fd fd fa fa fa fd fd fd fd\n  0x0c067fff80c0: fa fa fd fd fd fa fa fa fd fd fd fa fa fa fd fd\n  0x0c067fff80d0: fd fa fa fa fd fd fd fa fa fa fd fd fd fa fa fa\n  0x0c067fff80e0: fd fd fd fa fa fa fd fd fd fd fa fa fd fd fd fa\n  0x0c067fff80f0: fa fa fd fd fd fa fa fa fd fd fd fa fa fa fd fd\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "stack-buffer-overflow", "B": "SIGABRT", "C": "heap-use-after-free", "D": "stack-buffer-underflow", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==196==ERROR: AddressSanitizer: heap-use-after-free on address 0x603000000400 at pc 0x55895b0da0fb bp 0x7ffd80fcb8b0 sp 0x7ffd80fcb8a0\nWRITE of size 1 at 0x603000000400 thread T0\n    #0 0x55895b0da0fa in http_decode_url_unsafe /sourcecode/lib/facil/http/http.c:2433\n    #1 0x55895afc780a in fuzzloop /sharedockerin/ta1730101611048ltan/test_file.c:29\n    #2 0x55895b146249 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x55895afc6ab8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7f00f5f46d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7f00f5f46e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x55895afc6c04 in _start (/sharedockerin/ta1730101611048ltan/clouditera+0x1dbc04)\n\n0x603000000400 is located 76 bytes to the right of 20-byte region [0x6030000003a0,0x6030000003b4)\nallocated by thread T0 here:\n    #0 0x7f00f691f887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55895b14645c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-use-after-free /sourcecode/lib/facil/http/http.c:2433 in http_decode_url_unsafe\nShadow bytes around the buggy address:\n  0x0c067fff8030: fa fa fd fd fd fd fa fa fd fd fd fd fa fa fd fd\n  0x0c067fff8040: fd fd fa fa 00 00 00 00 fa fa fd fd fd fa fa fa\n  0x0c067fff8050: 00 00 00 fa fa fa 00 00 00 00 fa fa 00 00 01 fa\n  0x0c067fff8060: fa fa fd fd fd fa fa fa fd fd fd fa fa fa fd fd\n  0x0c067fff8070: fd fa fa fa 00 00 04 fa fa fa fd fd fd fd fa fa\n=>0x0c067fff8080:[fd]fd fd fd fa fa fd fd fd fd fa fa fd fd fd fd\n  0x0c067fff8090: fa fa fd fd fd fd fa fa fd fd fd fd fa fa fd fd\n  0x0c067fff80a0: fd fa fa fa fd fd fd fd fa fa fd fd fd fa fa fa\n  0x0c067fff80b0: fd fd fd fa fa fa fd fd fd fa fa fa fd fd fd fa\n  0x0c067fff80c0: fa fa fd fd fd fa fa fa fd fd fd fa fa fa fd fd\n  0x0c067fff80d0: fd fd fa fa fd fd fd fd fa fa fd fd fd fd fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "allocation-size-too-big", "B": "memcpy-param-overlap", "C": "out-of-memory", "D": "heap-use-after-free", "answer": "D"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==4967==ERROR: AddressSanitizer: heap-use-after-free on address 0x602000000110 at pc 0x7f0358d2b397 bp 0x7ffdf00888d0 sp 0x7ffdf0088078\nREAD of size 12 at 0x602000000110 thread T0\n    #0 0x7f0358d2b396 in __interceptor_memcpy ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:827\n    #1 0x558e6ab24f3b in redis_parser_append_message /sourcecode/src/protocol/redis_parser.c:447\n    #2 0x558e6ab1e837 in fuzzloop /dockerin/fuzz_drivers/tf1729593377980znne.cpp:24\n    #3 0x558e6ab2e8f9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #4 0x558e6ab1e468 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #5 0x7f035817ed8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #6 0x7f035817ee3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #7 0x558e6ab1e5b4 in _start (/dockerin/fuzz_drivers/tf1729593377980znne.out+0x1a5b4)\n\n0x602000000110 is located 0 bytes inside of 12-byte region [0x602000000110,0x60200000011c)\nfreed by thread T0 here:\n    #0 0x7f0358da5c38 in __interceptor_realloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:164\n    #1 0x558e6ab24c52 in redis_parser_append_message /sourcecode/src/protocol/redis_parser.c:439\n    #2 0x558e6ab1e837 in fuzzloop /dockerin/fuzz_drivers/tf1729593377980znne.cpp:24\n    #3 0x558e6ab2e8f9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n\npreviously allocated by thread T0 here:\n    #0 0x7f0358da5887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x558e6ab2eb0c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-use-after-free ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:827 in __interceptor_memcpy\nShadow bytes around the buggy address:\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa 00 07 fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa 00 04\n=>0x0c047fff8020: fa fa[fd]fd fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "heap-buffer-overflow", "B": "heap-use-after-free", "C": "calloc parameters overflow", "D": "bad-free", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==196==ERROR: AddressSanitizer: heap-use-after-free on address 0x60200000c6f3 at pc 0x55895b0d934f bp 0x7ffd80fcb880 sp 0x7ffd80fcb870\nWRITE of size 1 at 0x60200000c6f3 thread T0\n    #0 0x55895b0d934e in hex2byte /sourcecode/lib/facil/http/http.c:2383\n    #1 0x55895b0d9ed0 in http_decode_url_unsafe /sourcecode/lib/facil/http/http.c:2426\n    #2 0x55895afc780a in fuzzloop /sharedockerin/ta1730101611048ltan/test_file.c:29\n    #3 0x55895b146249 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #4 0x55895afc6ab8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #5 0x7f00f5f46d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #6 0x7f00f5f46e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #7 0x55895afc6c04 in _start (/sharedockerin/ta1730101611048ltan/clouditera+0x1dbc04)\n\n0x60200000c6f3 is located 3 bytes inside of 8-byte region [0x60200000c6f0,0x60200000c6f8)\nfreed by thread T0 here:\n    #0 0x7f00f691f887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x7f00f60166ff  (/lib/x86_64-linux-gnu/libc.so.6+0xf96ff)\n    #2 0x60200000ca8f  (<unknown module>)\n\npreviously allocated by thread T0 here:\n    #0 0x7f00f691fc38 in __interceptor_realloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:164\n    #1 0x7f00f6012e73  (/lib/x86_64-linux-gnu/libc.so.6+0xf5e73)\n\nSUMMARY: AddressSanitizer: heap-use-after-free /sourcecode/lib/facil/http/http.c:2383 in hex2byte\nShadow bytes around the buggy address:\n  0x0c047fff9880: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd\n  0x0c047fff9890: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd\n  0x0c047fff98a0: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd\n  0x0c047fff98b0: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd\n  0x0c047fff98c0: fa fa fd fd fa fa fd fd fa fa fd fd fa fa 00 04\n=>0x0c047fff98d0: fa fa fd fa fa fa fd fa fa fa fd fa fa fa[fd]fa\n  0x0c047fff98e0: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fff98f0: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fff9900: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fff9910: fa fa fd fd fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fff9920: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fd\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "global-buffer-overflow", "B": "unknown-crash", "C": "bad-free", "D": "heap-use-after-free", "answer": "D"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==136==ERROR: AddressSanitizer: heap-use-after-free on address 0x602000000110 at pc 0x7fd10b45b397 bp 0x7ffd08600630 sp 0x7ffd085ffdd8\nREAD of size 11 at 0x602000000110 thread T0\n    #0 0x7fd10b45b396 in __interceptor_memcpy ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:827\n    #1 0x5579456bdd41 in AddHookBlob /home/clouditera/workdir-engine_c/betafuzz/structure/addHook.c:87\n    #2 0x7fd10b4b5301 in MemcmpInterceptorCommon(void*, int (*)(void const*, void const*, unsigned long), void const*, void const*, unsigned long) ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:882\n    #3 0x7fd10b4b5bc6 in __interceptor_memcmp ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:892\n    #4 0x7fd10b4b5bc6 in __interceptor_memcmp ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:887\n    #5 0x5579455a9cf5 in fio_cli_hash__find_map_pos_ /sourcecode/lib/facil/fio.h:5907\n    #6 0x5579455ab7dc in fio_cli_hash__insert_or_overwrite_ /sourcecode/lib/facil/fio.h:6005\n    #7 0x5579455ad6c1 in fio_cli_hash_insert /sourcecode/lib/facil/fio.h:6110\n    #8 0x5579455b2b40 in fio_cli_set /sourcecode/lib/facil/cli/fio_cli.c:430\n    #9 0x5579455a428e in fuzzloop /sharedockerin/ta1730101611651wvzs/test_file.c:25\n    #10 0x557945662749 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #11 0x5579455a39f8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #12 0x7fd10aafcd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #13 0x7fd10aafce3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #14 0x5579455a3b44 in _start (/sharedockerin/ta1730101611651wvzs/clouditera+0xd8b44)\n\n0x602000000110 is located 0 bytes inside of 12-byte region [0x602000000110,0x60200000011c)\nfreed by thread T0 here:\n    #0 0x7fd10b4d5537 in __interceptor_free ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:127\n    #1 0x55794566298c in BetaWfree /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:97\n\npreviously allocated by thread T0 here:\n    #0 0x7fd10b4d5887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55794566295c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: heap-use-after-free ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:827 in __interceptor_memcpy\nShadow bytes around the buggy address:\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff8000: fa fa fd fd fa fa 04 fa fa fa 05 fa fa fa 00 02\n  0x0c047fff8010: fa fa 06 fa fa fa 06 fa fa fa 00 03 fa fa fd fd\n=>0x0c047fff8020: fa fa[fd]fd fa fa fd fd fa fa fd fd fa fa 00 04\n  0x0c047fff8030: fa fa 00 04 fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fff8040: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fff8050: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fff8060: fa fa fd fa fa fa fd fa fa fa fd fa fa fa 00 04\n  0x0c047fff8070: fa fa fd fd fa fa 00 04 fa fa fd fd fa fa 00 04\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "bad-free", "B": "calloc parameters overflow", "C": "heap-use-after-free", "D": "double-free", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==711==ERROR: AddressSanitizer: invalid alignment requested in posix_memalign: 1844674407370, alignment must be a power of two and a multiple of sizeof(void*) == 8 (thread T0)\n    #0 0x7f18c540457c in __interceptor_posix_memalign ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:226\n    #1 0x5616102f990b in __portable_aligned_alloc /sourcecode/include/flatcc/portable/paligned_alloc.h:145\n    #2 0x5616103195d3 in flatcc_builder_aligned_alloc /sourcecode/src/runtime/builder.c:2029\n    #3 0x5616102f9789 in fuzzloop /dockerin/fuzz_drivers/tf1727601035333qzkb.c:21\n    #4 0x5616103294d9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n\n==711==HINT: if you don't care about these errors you may set allocator_may_return_null=1\nSUMMARY: AddressSanitizer: invalid-posix-memalign-alignment ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:226 in __interceptor_posix_memalign\n崩溃类型是什么？", "A": "invalid-posix-memalign-alignment", "B": "global-buffer-overflow", "C": "memcpy-param-overlap", "D": "larger memory malloc", "answer": "A"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7f4871c8cf18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x5603964d3644 in leak_malloc_hook /home/clouditera/workdir-engine_c/betafuzz/checkers/leakcheck.c:80\n    #2 0x7f4871c92e02 in __sanitizer::RunMallocHooks(void const*, unsigned long) ../../../../src/libsanitizer/sanitizer_common/sanitizer_common.cpp:301\n    #3 0x7f4871bf860b in __asan::Allocator::Allocate(unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType, bool) ../../../../src/libsanitizer/asan/asan_allocator.cpp:611\n    #4 0x7f4871bf443c in __asan::asan_memalign(unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType) ../../../../src/libsanitizer/asan/asan_allocator.cpp:1039\n    #5 0x7f4871c821a3 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cpp:99\n    #6 0x7f4871ae3724 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned long) (/lib/x86_64-linux-gnu/libstdc++.so.6+0x14c724)\n    #7 0x5603964c4010 in YAML::Stream::get[abi:cxx11](int) /sourcecode/src/stream.cpp:278\n    #8 0x5603964c1dbf in fuzzloop /dockerin/fuzz_drivers/tf1729580069771alte.cpp:25\n    #9 0x5603964d22b9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #10 0x5603964c1928 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #11 0x7f4871690d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #12 0x7f4871690e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #13 0x5603964c1a74 in _start (/dockerin/fuzz_drivers/tf1729580069771alte.out+0x13a74)\n崩溃类型是什么？", "A": "unknown-crash", "B": "global-buffer-overflow", "C": "larger memory malloc", "D": "double-free", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7f6a80b8df18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x562ea75f9d24 in leak_malloc_hook /home/clouditera/workdir-engine_c/betafuzz/checkers/leakcheck.c:80\n    #2 0x7f6a80b93e02 in __sanitizer::RunMallocHooks(void const*, unsigned long) ../../../../src/libsanitizer/sanitizer_common/sanitizer_common.cpp:301\n    #3 0x7f6a80af960b in __asan::Allocator::Allocate(unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType, bool) ../../../../src/libsanitizer/asan/asan_allocator.cpp:611\n    #4 0x7f6a80af519a in __asan::asan_malloc(unsigned long, __sanitizer::BufferedStackTrace*) ../../../../src/libsanitizer/asan/asan_allocator.cpp:980\n    #5 0x7f6a80b81861 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:146\n    #6 0x562ea75a1c5b in CommTarget::init(sockaddr const*, unsigned int, int, int) /sourcecode/src/kernel/Communicator.cc:157\n    #7 0x562ea759e145 in fuzzloop /dockerin/fuzz_drivers/tf1729593105303qyfz.cpp:52\n    #8 0x562ea75f8999 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #9 0x562ea759db98 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #10 0x7f6a7ff5ad8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #11 0x7f6a7ff5ae3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #12 0x562ea759dce4 in _start (/dockerin/fuzz_drivers/tf1729593105303qyfz.out+0x88ce4)\n崩溃类型是什么？", "A": "stack-buffer-overflow", "B": "out-of-memory", "C": "larger memory malloc", "D": "heap-buffer-overflow", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7f681b75cf18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x555fb1835c44 in leak_malloc_hook /home/clouditera/workdir-engine_c/betafuzz/checkers/leakcheck.c:80\n    #2 0x7f681b762e02 in __sanitizer::RunMallocHooks(void const*, unsigned long) ../../../../src/libsanitizer/sanitizer_common/sanitizer_common.cpp:301\n    #3 0x7f681b6c860b in __asan::Allocator::Allocate(unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType, bool) ../../../../src/libsanitizer/asan/asan_allocator.cpp:611\n    #4 0x7f681b6c443c in __asan::asan_memalign(unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType) ../../../../src/libsanitizer/asan/asan_allocator.cpp:1039\n    #5 0x7f681b7521a3 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cpp:99\n    #6 0x7f681b5b3724 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned long) (/lib/x86_64-linux-gnu/libstdc++.so.6+0x14c724)\n    #7 0x555fb182b905 in protocol::TLVMessage::append(void const*, unsigned long*) /sourcecode/src/protocol/TLVMessage.cc:71\n    #8 0x555fb17d60b9 in fuzzloop /dockerin/fuzz_drivers/tf1729655956046jdki.cpp:18\n    #9 0x555fb18348b9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #10 0x555fb17d5cb8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #11 0x7f681ab29d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #12 0x7f681ab29e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #13 0x555fb17d5e04 in _start (/dockerin/fuzz_drivers/tf1729655956046jdki.out+0x91e04)\n崩溃类型是什么？", "A": "invalid-posix-memalign-alignment", "B": "larger memory malloc", "C": "heap-use-after-free", "D": "allocation-size-too-big", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==9497==ERROR: AddressSanitizer: memcpy-param-overlap: memory ranges [0x602000000110,0x61cd7f29acda) and [0x602000000150, 0x61cd7f29ad1a) overlap\n    #0 0x7fc1a5c711ed in __interceptor_memcpy ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:827\n    #1 0x556441c5634d in lzo_memcpy /sourcecode/lzo/minilzo.c:4366\n    #2 0x556441c555fb in fuzzloop /dockerin/fuzz_drivers/tf1728878215798zrlh.c:27\n    #3 0x556441c67919 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #4 0x556441c55398 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #5 0x7fc1a5312d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #6 0x7fc1a5312e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #7 0x556441c554e4 in _start (/dockerin/fuzz_drivers/tf1728878215798zrlh.out+0x1b4e4)\n\n0x60200000011c is located 0 bytes to the right of 12-byte region [0x602000000110,0x60200000011c)\nallocated by thread T0 here:\n    #0 0x7fc1a5ceb887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x556441c67b2c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\n0x60200000015c is located 0 bytes to the right of 12-byte region [0x602000000150,0x60200000015c)\nallocated by thread T0 here:\n    #0 0x7fc1a5ceb887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x556441c67b2c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: memcpy-param-overlap ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:827 in __interceptor_memcpy\n崩溃类型是什么？", "A": "out-of-memory", "B": "SIGABRT", "C": "memcpy-param-overlap", "D": "invalid-posix-memalign-alignment", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==61672==ERROR: AddressSanitizer: memcpy-param-overlap: memory ranges [0x602000000110,0x61cd7f29acda) and [0x602000000150, 0x61cd7f29ad1a) overlap\n    #0 0x7f446f1ca1ed in __interceptor_memcpy ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:827\n    #1 0x55810d53e285 in SDL_memcpy_REAL /sourcecode/src/stdlib/SDL_stdlib.c:527\n    #2 0x55810d53cb10 in fuzzloop /dockerin/fuzz_drivers/tf1728900807102zeyh.c:24\n    #3 0x55810d546a39 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #4 0x55810d53c8a8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #5 0x7f446ef90d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #6 0x7f446ef90e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #7 0x55810d53c9f4 in _start (/dockerin/fuzz_drivers/tf1728900807102zeyh.out+0xf9f4)\n\n0x60200000011c is located 0 bytes to the right of 12-byte region [0x602000000110,0x60200000011c)\nallocated by thread T0 here:\n    #0 0x7f446f244887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55810d546c4c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\n0x60200000015c is located 0 bytes to the right of 12-byte region [0x602000000150,0x60200000015c)\nallocated by thread T0 here:\n    #0 0x7f446f244887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55810d546c4c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: memcpy-param-overlap ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:827 in __interceptor_memcpy\n崩溃类型是什么？", "A": "larger memory malloc", "B": "invalid-posix-memalign-alignment", "C": "memcpy-param-overlap", "D": "calloc parameters overflow", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==26852==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x7fffffff8 bytes\n    #0 0x7f381745b1e7 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cpp:99\n    #1 0x55f20df41187 in __gnu_cxx::new_allocator<void*>::allocate(unsigned long, void const*) /usr/include/c++/11/ext/new_allocator.h:127\n    #2 0x55f20df402bd in std::allocator_traits<std::allocator<void*> >::allocate(std::allocator<void*>&, unsigned long) /usr/include/c++/11/bits/alloc_traits.h:464\n    #3 0x55f20df3fd2a in std::_Vector_base<void*, std::allocator<void*> >::_M_allocate(unsigned long) /usr/include/c++/11/bits/stl_vector.h:346\n    #4 0x55f20df3efe7 in std::vector<void*, std::allocator<void*> >::_M_default_append(unsigned long) /usr/include/c++/11/bits/vector.tcc:635\n    #5 0x55f20df3e596 in std::vector<void*, std::allocator<void*> >::resize(unsigned long) /usr/include/c++/11/bits/stl_vector.h:940\n    #6 0x55f20df3df04 in YAML::AnchorDict<void*>::Register(unsigned long, void*) /sourcecode/include/yaml-cpp/contrib/anchordict.h:28\n    #7 0x55f20df3d891 in YAML::GraphBuilderAdapter::RegisterAnchor(unsigned long, void*) /sourcecode/src/contrib/graphbuilderadapter.cpp:72\n    #8 0x55f20df3d133 in YAML::GraphBuilderAdapter::OnScalar(YAML::Mark const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /sourcecode/src/contrib/graphbuilderadapter.cpp:26\n    #9 0x55f20df39ae6 in fuzzloop /dockerin/fuzz_drivers/tf1729582198612cekd.cpp:38\n    #10 0x55f20df4acc9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n\n==26852==HINT: if you don't care about these errors you may set allocator_may_return_null=1\nSUMMARY: AddressSanitizer: out-of-memory ../../../../src/libsanitizer/asan/asan_new_delete.cpp:99 in operator new(unsigned long)\n崩溃类型是什么？", "A": "invalid-posix-memalign-alignment", "B": "calloc parameters overflow", "C": "out-of-memory", "D": "larger memory malloc", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==151887==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x7fffffff8 bytes\n    #0 0x7f80d6b81887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x562070ae4c82 in __redis_create_array /sourcecode/src/protocol/redis_parser.c:66\n    #2 0x562070ae4fe5 in redis_reply_set_array /sourcecode/src/protocol/redis_parser.c:99\n    #3 0x562070ae3a1f in fuzzloop /dockerin/fuzz_drivers/tf1729594848501evph.cpp:20\n    #4 0x562070af3aa9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n\n==151887==HINT: if you don't care about these errors you may set allocator_may_return_null=1\nSUMMARY: AddressSanitizer: out-of-memory ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145 in __interceptor_malloc\n崩溃类型是什么？", "A": "invalid-posix-memalign-alignment", "B": "stack-buffer-overflow", "C": "calloc parameters overflow", "D": "out-of-memory", "answer": "D"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==41238==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0xbefe8500e8 bytes\n    #0 0x7f6c3b974887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x56189c3c4749 in real_malloc /sourcecode/src/stdlib/SDL_malloc.c:5196\n    #2 0x56189c3c4d26 in SDL_malloc_REAL /sourcecode/src/stdlib/SDL_malloc.c:5295\n    #3 0x56189bcbecf3 in SDL_SIMDAlloc_REAL /sourcecode/src/cpuinfo/SDL_cpuinfo.c:1169\n    #4 0x56189bfbc4b6 in SDL_CreateRGBSurfaceWithFormat_REAL /sourcecode/src/video/SDL_surface.c:156\n    #5 0x56189bb6b611 in SDL_CreateRGBSurfaceWithFormat /sourcecode/src/dynapi/SDL_dynapi_procs.h:643\n    #6 0x56189bb55a44 in fuzzloop /dockerin/fuzz_drivers/tf1728900796533utkw.c:29\n    #7 0x56189c411259 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n\n==41238==HINT: if you don't care about these errors you may set allocator_may_return_null=1\nSUMMARY: AddressSanitizer: out-of-memory ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145 in __interceptor_malloc\n崩溃类型是什么？", "A": "larger memory malloc", "B": "out-of-memory", "C": "stack-buffer-underflow", "D": "global-buffer-overflow", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==374859==ERROR: AddressSanitizer: allocator is out of memory trying to allocate 0x7fffffff8 bytes\n    #0 0x7fbf45521a57 in __interceptor_calloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:154\n    #1 0x5582e91b500b in poller_create /sourcecode/src/kernel/poller.c:1173\n    #2 0x5582e91a6b1d in fuzzloop /dockerin/fuzz_drivers/tf1729655094044ocqe.cpp:21\n    #3 0x5582e91cb8b9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n\n==374859==HINT: if you don't care about these errors you may set allocator_may_return_null=1\nSUMMARY: AddressSanitizer: out-of-memory ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:154 in __interceptor_calloc\n崩溃类型是什么？", "A": "heap-use-after-free", "B": "stack-buffer-overflow", "C": "SIGABRT", "D": "out-of-memory", "answer": "D"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7f792fdf7f18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x557192f11899 in CrashHandler /home/clouditera/workdir-engine_c/betafuzz/checkers/handlecrashes.c:281\n    #2 0x7f792f81451f  (/lib/x86_64-linux-gnu/libc.so.6+0x4251f)\n    #3 0x7f792f8689fb in pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x969fb)\n    #4 0x7f792f814475 in raise (/lib/x86_64-linux-gnu/libc.so.6+0x42475)\n    #5 0x7f792f7fa7f2 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x287f2)\n    #6 0x7f792fba4b9d  (/lib/x86_64-linux-gnu/libstdc++.so.6+0xa2b9d)\n    #7 0x7f792fbb020b  (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae20b)\n    #8 0x7f792fbb0276 in std::terminate() (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae276)\n    #9 0x7f792fbb04d7 in __cxa_throw (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae4d7)\n    #10 0x557192ea94e1 in YAML::Parser::HandleYamlDirective(YAML::Token const&) /sourcecode/src/parser.cpp:72\n    #11 0x557192ea5688 in fuzzloop /dockerin/fuzz_drivers/tf1729061962993jopd.cpp:74\n    #12 0x557192f10a99 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #13 0x557192ea5028 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #14 0x7f792f7fbd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #15 0x7f792f7fbe3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #16 0x557192ea5174 in _start (/dockerin/fuzz_drivers/tf1729061962993jopd.out+0x67174)\n崩溃类型是什么？", "A": "SIGABRT", "B": "double-free", "C": "heap-use-after-free", "D": "memcpy-param-overlap", "answer": "A"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7f7048155f18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x562e6c4f1ed9 in CrashHandler /home/clouditera/workdir-engine_c/betafuzz/checkers/handlecrashes.c:281\n    #2 0x7f704753b51f  (/lib/x86_64-linux-gnu/libc.so.6+0x4251f)\n    #3 0x7f704758f9fb in pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x969fb)\n    #4 0x7f704753b475 in raise (/lib/x86_64-linux-gnu/libc.so.6+0x42475)\n    #5 0x7f70475217f2 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x287f2)\n    #6 0x7f70475823db  (/lib/x86_64-linux-gnu/libc.so.6+0x893db)\n    #7 0x7f70475826ef in __libc_fatal (/lib/x86_64-linux-gnu/libc.so.6+0x896ef)\n    #8 0x7f704758a2e7  (/lib/x86_64-linux-gnu/libc.so.6+0x912e7)\n    #9 0x7f7047591001 in pthread_mutex_lock (/lib/x86_64-linux-gnu/libc.so.6+0x98001)\n    #10 0x562e6c4d0b7b in poller_add_timer /sourcecode/src/kernel/poller.c:1550\n    #11 0x562e6c48b9f0 in mpoller_add_timer /sourcecode/src/kernel/mpoller.h:80\n    #12 0x562e6c4b1e34 in Communicator::sleep(SleepSession*) /sourcecode/src/kernel/Communicator.cc:1852\n    #13 0x562e6c48577e in CommScheduler::sleep(SleepSession*) (/dockerin/fuzz_drivers/tf1729655162704uxlq.out+0xad77e)\n    #14 0x562e6c48615c in SleepRequest::dispatch() (/dockerin/fuzz_drivers/tf1729655162704uxlq.out+0xae15c)\n    #15 0x562e6c486b0c in Workflow::start_series_work(SubTask*, std::function<void (SeriesWork const*)>) (/dockerin/fuzz_drivers/tf1729655162704uxlq.out+0xaeb0c)\n    #16 0x562e6c486ca8 in WFTimerTask::start() (/dockerin/fuzz_drivers/tf1729655162704uxlq.out+0xaeca8)\n    #17 0x562e6c4837bd in fuzzloop /dockerin/fuzz_drivers/tf1729655162704uxlq.cpp:40\n    #18 0x562e6c4f10d9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #19 0x562e6c482c38 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #20 0x7f7047522d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #21 0x7f7047522e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #22 0x562e6c482d84 in _start (/dockerin/fuzz_drivers/tf1729655162704uxlq.out+0xaad84)\n崩溃类型是什么？", "A": "bad-free", "B": "heap-use-after-free", "C": "global-buffer-overflow", "D": "SIGABRT", "answer": "D"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7f2a69910f18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x564343e95f69 in CrashHandler /home/clouditera/workdir-engine_c/betafuzz/checkers/handlecrashes.c:281\n    #2 0x7f2a68f4451f  (/lib/x86_64-linux-gnu/libc.so.6+0x4251f)\n    #3 0x7f2a68f989fb in pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x969fb)\n    #4 0x7f2a68f44475 in raise (/lib/x86_64-linux-gnu/libc.so.6+0x42475)\n    #5 0x7f2a68f2a7f2 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x287f2)\n    #6 0x7f2a68f2a71a  (/lib/x86_64-linux-gnu/libc.so.6+0x2871a)\n    #7 0x7f2a68f3be95 in __assert_fail (/lib/x86_64-linux-gnu/libc.so.6+0x39e95)\n    #8 0x564343dafad2 in fiobj_hash_set /sourcecode/lib/facil/fiobj/fiobj_hash.c:200\n    #9 0x564343da5340 in fuzzloop /dockerin/fuzz_drivers/tf1729850026987ajbd.c:25\n    #10 0x564343e95169 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #11 0x564343da4a98 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #12 0x7f2a68f2bd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #13 0x7f2a68f2be3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #14 0x564343da4be4 in _start (/dockerin/fuzz_drivers/tf1729850026987ajbd.out+0x115be4)\n崩溃类型是什么？", "A": "stack-buffer-underflow", "B": "calloc parameters overflow", "C": "larger memory malloc", "D": "SIGABRT", "answer": "D"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7f65078def18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x55d271f36509 in CrashHandler /home/clouditera/workdir-engine_c/betafuzz/checkers/handlecrashes.c:281\n    #2 0x7f65072fb51f  (/lib/x86_64-linux-gnu/libc.so.6+0x4251f)\n    #3 0x7f650734f9fb in pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x969fb)\n    #4 0x7f65072fb475 in raise (/lib/x86_64-linux-gnu/libc.so.6+0x42475)\n    #5 0x7f65072e17f2 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x287f2)\n    #6 0x7f65072e171a  (/lib/x86_64-linux-gnu/libc.so.6+0x2871a)\n    #7 0x7f65072f2e95 in __assert_fail (/lib/x86_64-linux-gnu/libc.so.6+0x39e95)\n    #8 0x55d271f0f282 in YAML::NodeBuilder::RegisterAnchor(unsigned long, YAML::detail::node&) /sourcecode/src/nodebuilder.cpp:130\n    #9 0x55d271f0e821 in YAML::NodeBuilder::Push(YAML::Mark const&, unsigned long) /sourcecode/src/nodebuilder.cpp:83\n    #10 0x55d271f0e56f in YAML::NodeBuilder::OnScalar(YAML::Mark const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /sourcecode/src/nodebuilder.cpp:49\n    #11 0x55d271f0cec8 in fuzzloop /dockerin/fuzz_drivers/tf1729571804697ojxz.cpp:24\n    #12 0x55d271f35709 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #13 0x55d271f0ca38 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #14 0x7f65072e2d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #15 0x7f65072e2e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #16 0x55d271f0cb84 in _start (/dockerin/fuzz_drivers/tf1729571804697ojxz.out+0x34b84)\n崩溃类型是什么？", "A": "SIGABRT", "B": "out-of-memory", "C": "stack-buffer-underflow", "D": "bad-free", "answer": "A"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7fe2d9027f18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x56384e6c3999 in CrashHandler /home/clouditera/workdir-engine_c/betafuzz/checkers/handlecrashes.c:281\n    #2 0x7fe2d865b51f  (/lib/x86_64-linux-gnu/libc.so.6+0x4251f)\n    #3 0x7fe2d86af9fb in pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x969fb)\n    #4 0x7fe2d865b475 in raise (/lib/x86_64-linux-gnu/libc.so.6+0x42475)\n    #5 0x7fe2d86417f2 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x287f2)\n    #6 0x7fe2d864171a  (/lib/x86_64-linux-gnu/libc.so.6+0x2871a)\n    #7 0x7fe2d8652e95 in __assert_fail (/lib/x86_64-linux-gnu/libc.so.6+0x39e95)\n    #8 0x56384e5dbfbd in fiobj_hash_rehash /sourcecode/lib/facil/fiobj/fiobj_hash.c:50\n    #9 0x56384e5d3319 in fuzzloop /dockerin/fuzz_drivers/tf1728899912457kuib.c:22\n    #10 0x56384e6c2b99 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #11 0x56384e5d2a98 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #12 0x7fe2d8642d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #13 0x7fe2d8642e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #14 0x56384e5d2be4 in _start (/dockerin/fuzz_drivers/tf1728899912457kuib.out+0x115be4)\n崩溃类型是什么？", "A": "memcpy-param-overlap", "B": "global-buffer-overflow", "C": "unknown-crash", "D": "SIGABRT", "answer": "D"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7f539c9dcf18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x556a537c3f09 in CrashHandler /home/clouditera/workdir-engine_c/betafuzz/checkers/handlecrashes.c:281\n    #2 0x7f539c3f951f  (/lib/x86_64-linux-gnu/libc.so.6+0x4251f)\n    #3 0x7f539c44d9fb in pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x969fb)\n    #4 0x7f539c3f9475 in raise (/lib/x86_64-linux-gnu/libc.so.6+0x42475)\n    #5 0x7f539c3df7f2 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x287f2)\n    #6 0x7f539c3df71a  (/lib/x86_64-linux-gnu/libc.so.6+0x2871a)\n    #7 0x7f539c3f0e95 in __assert_fail (/lib/x86_64-linux-gnu/libc.so.6+0x39e95)\n    #8 0x556a53776b70 in YAML::Scanner::peek() /sourcecode/src/scanner.cpp:37\n    #9 0x556a53774249 in fuzzloop /dockerin/fuzz_drivers/tf1729566972748lkxj.cpp:27\n    #10 0x556a537c3109 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #11 0x556a53773e68 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #12 0x7f539c3e0d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #13 0x7f539c3e0e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #14 0x556a53773fb4 in _start (/dockerin/fuzz_drivers/tf1729566972748lkxj.out+0x49fb4)\n崩溃类型是什么？", "A": "calloc parameters overflow", "B": "SIGABRT", "C": "global-buffer-overflow", "D": "heap-use-after-free", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7f3b64c97f18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x562e4c3d3709 in CrashHandler /home/clouditera/workdir-engine_c/betafuzz/checkers/handlecrashes.c:281\n    #2 0x7f3b646b451f  (/lib/x86_64-linux-gnu/libc.so.6+0x4251f)\n    #3 0x7f3b647089fb in pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x969fb)\n    #4 0x7f3b646b4475 in raise (/lib/x86_64-linux-gnu/libc.so.6+0x42475)\n    #5 0x7f3b6469a7f2 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x287f2)\n    #6 0x7f3b64a44b9d  (/lib/x86_64-linux-gnu/libstdc++.so.6+0xa2b9d)\n    #7 0x7f3b64a5020b  (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae20b)\n    #8 0x7f3b64a50276 in std::terminate() (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae276)\n    #9 0x7f3b64a504d7 in __cxa_throw (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae4d7)\n    #10 0x562e4c34a154 in YAML::LoadAllFromFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /sourcecode/src/parse.cpp:68\n    #11 0x562e4c347458 in fuzzloop /dockerin/fuzz_drivers/tf1729580069511oric.cpp:25\n    #12 0x562e4c3d2909 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #13 0x562e4c347098 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #14 0x7f3b6469bd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #15 0x7f3b6469be3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #16 0x562e4c3471e4 in _start (/dockerin/fuzz_drivers/tf1729580069511oric.out+0x881e4)\n崩溃类型是什么？", "A": "SIGABRT", "B": "calloc parameters overflow", "C": "heap-use-after-free", "D": "double-free", "answer": "A"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7f32918ebf18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x559dfaad8f49 in CrashHandler /home/clouditera/workdir-engine_c/betafuzz/checkers/handlecrashes.c:281\n    #2 0x7f3290f1f51f  (/lib/x86_64-linux-gnu/libc.so.6+0x4251f)\n    #3 0x7f3290f739fb in pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x969fb)\n    #4 0x7f3290f1f475 in raise (/lib/x86_64-linux-gnu/libc.so.6+0x42475)\n    #5 0x7f3290f057f2 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x287f2)\n    #6 0x7f3290f0571a  (/lib/x86_64-linux-gnu/libc.so.6+0x2871a)\n    #7 0x7f3290f16e95 in __assert_fail (/lib/x86_64-linux-gnu/libc.so.6+0x39e95)\n    #8 0x559dfa9f39a7 in fiobj_hash_clear /sourcecode/lib/facil/fiobj/fiobj_hash.c:330\n    #9 0x559dfa9e8319 in fuzzloop /dockerin/fuzz_drivers/tf1729822403072ygto.c:23\n    #10 0x559dfaad8149 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #11 0x559dfa9e7a98 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #12 0x7f3290f06d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #13 0x7f3290f06e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #14 0x559dfa9e7be4 in _start (/dockerin/fuzz_drivers/tf1729822403072ygto.out+0x115be4)\n崩溃类型是什么？", "A": "SIGABRT", "B": "stack-buffer-underflow", "C": "larger memory malloc", "D": "out-of-memory", "answer": "A"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7f7bee431f18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x55a8a8481cf9 in CrashHandler /home/clouditera/workdir-engine_c/betafuzz/checkers/handlecrashes.c:281\n    #2 0x7f7bede4e51f  (/lib/x86_64-linux-gnu/libc.so.6+0x4251f)\n    #3 0x7f7bedea29fb in pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x969fb)\n    #4 0x7f7bede4e475 in raise (/lib/x86_64-linux-gnu/libc.so.6+0x42475)\n    #5 0x7f7bede347f2 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x287f2)\n    #6 0x7f7bede3471a  (/lib/x86_64-linux-gnu/libc.so.6+0x2871a)\n    #7 0x7f7bede45e95 in __assert_fail (/lib/x86_64-linux-gnu/libc.so.6+0x39e95)\n    #8 0x55a8a8417b00 in YAML::NodeBuilder::RegisterAnchor(unsigned long, YAML::detail::node&) /sourcecode/src/nodebuilder.cpp:130\n    #9 0x55a8a841709f in YAML::NodeBuilder::Push(YAML::Mark const&, unsigned long) /sourcecode/src/nodebuilder.cpp:83\n    #10 0x55a8a8416e63 in YAML::NodeBuilder::OnSequenceStart(YAML::Mark const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, YAML::EmitterStyle::value) /sourcecode/src/nodebuilder.cpp:57\n    #11 0x55a8a841366f in fuzzloop /dockerin/fuzz_drivers/tf1729061962969kckg.cpp:49\n    #12 0x55a8a8480ef9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #13 0x55a8a8412f58 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #14 0x7f7bede35d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #15 0x7f7bede35e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #16 0x55a8a84130a4 in _start (/dockerin/fuzz_drivers/tf1729061962969kckg.out+0x6b0a4)\n崩溃类型是什么？", "A": "heap-use-after-free", "B": "SIGABRT", "C": "larger memory malloc", "D": "bad-free", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7f27dc948f18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x558ed641a019 in CrashHandler /home/clouditera/workdir-engine_c/betafuzz/checkers/handlecrashes.c:281\n    #2 0x7f27dc36551f  (/lib/x86_64-linux-gnu/libc.so.6+0x4251f)\n    #3 0x7f27dc3b99fb in pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x969fb)\n    #4 0x7f27dc365475 in raise (/lib/x86_64-linux-gnu/libc.so.6+0x42475)\n    #5 0x7f27dc34b7f2 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x287f2)\n    #6 0x7f27dc6f5b9d  (/lib/x86_64-linux-gnu/libstdc++.so.6+0xa2b9d)\n    #7 0x7f27dc70120b  (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae20b)\n    #8 0x7f27dc701276 in std::terminate() (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae276)\n    #9 0x7f27dc7014d7 in __cxa_throw (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae4d7)\n    #10 0x558ed63cf750 in YAML::Scanner::ThrowParserException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const /sourcecode/src/scanner.cpp:389\n    #11 0x558ed63ca2ef in fuzzloop /dockerin/fuzz_drivers/tf1729566972763fgkb.cpp:28\n    #12 0x558ed6419219 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #13 0x558ed63c9e68 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #14 0x7f27dc34cd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #15 0x7f27dc34ce3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #16 0x558ed63c9fb4 in _start (/dockerin/fuzz_drivers/tf1729566972763fgkb.out+0x49fb4)\n崩溃类型是什么？", "A": "calloc parameters overflow", "B": "stack-buffer-underflow", "C": "SIGABRT", "D": "double-free", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7f1c2c9e9f18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x555c69dc9cf9 in CrashHandler /home/clouditera/workdir-engine_c/betafuzz/checkers/handlecrashes.c:281\n    #2 0x7f1c2c40651f  (/lib/x86_64-linux-gnu/libc.so.6+0x4251f)\n    #3 0x7f1c2c45a9fb in pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x969fb)\n    #4 0x7f1c2c406475 in raise (/lib/x86_64-linux-gnu/libc.so.6+0x42475)\n    #5 0x7f1c2c3ec7f2 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x287f2)\n    #6 0x7f1c2c3ec71a  (/lib/x86_64-linux-gnu/libc.so.6+0x2871a)\n    #7 0x7f1c2c3fde95 in __assert_fail (/lib/x86_64-linux-gnu/libc.so.6+0x39e95)\n    #8 0x555c69d5fb00 in YAML::NodeBuilder::RegisterAnchor(unsigned long, YAML::detail::node&) /sourcecode/src/nodebuilder.cpp:130\n    #9 0x555c69d5f09f in YAML::NodeBuilder::Push(YAML::Mark const&, unsigned long) /sourcecode/src/nodebuilder.cpp:83\n    #10 0x555c69d5eeff in YAML::NodeBuilder::OnMapStart(YAML::Mark const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, YAML::EmitterStyle::value) /sourcecode/src/nodebuilder.cpp:67\n    #11 0x555c69d5b66f in fuzzloop /dockerin/fuzz_drivers/tf1729580069689dpjq.cpp:48\n    #12 0x555c69dc8ef9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #13 0x555c69d5af58 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #14 0x7f1c2c3edd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #15 0x7f1c2c3ede3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #16 0x555c69d5b0a4 in _start (/dockerin/fuzz_drivers/tf1729580069689dpjq.out+0x6b0a4)\n崩溃类型是什么？", "A": "memcpy-param-overlap", "B": "double-free", "C": "unknown-crash", "D": "SIGABRT", "answer": "D"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7fae3a376f18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x55a3bd42fb19 in CrashHandler /home/clouditera/workdir-engine_c/betafuzz/checkers/handlecrashes.c:281\n    #2 0x7fae39d9351f  (/lib/x86_64-linux-gnu/libc.so.6+0x4251f)\n    #3 0x7fae39de79fb in pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x969fb)\n    #4 0x7fae39d93475 in raise (/lib/x86_64-linux-gnu/libc.so.6+0x42475)\n    #5 0x7fae39d797f2 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x287f2)\n    #6 0x7fae39d7971a  (/lib/x86_64-linux-gnu/libc.so.6+0x2871a)\n    #7 0x7fae39d8ae95 in __assert_fail (/lib/x86_64-linux-gnu/libc.so.6+0x39e95)\n    #8 0x55a3bd41fa65 in void YAML::EmitterState::_Set<YAML::EMITTER_MANIP>(YAML::Setting<YAML::EMITTER_MANIP>&, YAML::EMITTER_MANIP, YAML::FmtScope::value) /sourcecode/src/emitterstate.h:211\n    #9 0x55a3bd41d66c in YAML::EmitterState::SetFlowType(YAML::GroupType::value, YAML::EMITTER_MANIP, YAML::FmtScope::value) /sourcecode/src/emitterstate.cpp:359\n    #10 0x55a3bd419b97 in fuzzloop /sharedockerin/ta1729581129791rnwv/test_file.cpp:121\n    #11 0x55a3bd42ed19 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #12 0x55a3bd419568 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #13 0x7fae39d7ad8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #14 0x7fae39d7ae3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #15 0x55a3bd4196b4 in _start (/sharedockerin/ta1729581129791rnwv/clouditera+0x216b4)\n崩溃类型是什么？", "A": "bad-free", "B": "heap-use-after-free", "C": "SIGABRT", "D": "calloc parameters overflow", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7ff23bdb8f18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x5572f0af1f09 in CrashHandler /home/clouditera/workdir-engine_c/betafuzz/checkers/handlecrashes.c:281\n    #2 0x7ff23b7d551f  (/lib/x86_64-linux-gnu/libc.so.6+0x4251f)\n    #3 0x7ff23b8299fb in pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x969fb)\n    #4 0x7ff23b7d5475 in raise (/lib/x86_64-linux-gnu/libc.so.6+0x42475)\n    #5 0x7ff23b7bb7f2 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x287f2)\n    #6 0x7ff23bb65b9d  (/lib/x86_64-linux-gnu/libstdc++.so.6+0xa2b9d)\n    #7 0x7ff23bb7120b  (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae20b)\n    #8 0x7ff23bb71276 in std::terminate() (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae276)\n    #9 0x7ff23bb714d7 in __cxa_throw (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae4d7)\n    #10 0x5572f0ae7f31 in YAML::Exp::Escape[abi:cxx11](YAML::Stream&) /sourcecode/src/exp.cpp:134\n    #11 0x5572f0ae35ab in YAML::ScanScalar[abi:cxx11](YAML::Stream&, YAML::ScanScalarParams&) /sourcecode/src/scanscalar.cpp:71\n    #12 0x5572f0ad45ae in YAML::Scanner::ScanQuotedScalar() /sourcecode/src/scantoken.cpp:361\n    #13 0x5572f0aa2249 in fuzzloop /dockerin/fuzz_drivers/tf1729044067573sryj.cpp:34\n    #14 0x5572f0af1109 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #15 0x5572f0aa1e68 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #16 0x7ff23b7bcd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #17 0x7ff23b7bce3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #18 0x5572f0aa1fb4 in _start (/dockerin/fuzz_drivers/tf1729044067573sryj.out+0x49fb4)\n崩溃类型是什么？", "A": "double-free", "B": "invalid-posix-memalign-alignment", "C": "larger memory malloc", "D": "SIGABRT", "answer": "D"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7f11c2f11f18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x560026d3cf09 in CrashHandler /home/clouditera/workdir-engine_c/betafuzz/checkers/handlecrashes.c:281\n    #2 0x7f11c292e51f  (/lib/x86_64-linux-gnu/libc.so.6+0x4251f)\n    #3 0x7f11c29829fb in pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x969fb)\n    #4 0x7f11c292e475 in raise (/lib/x86_64-linux-gnu/libc.so.6+0x42475)\n    #5 0x7f11c29147f2 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x287f2)\n    #6 0x7f11c2cbeb9d  (/lib/x86_64-linux-gnu/libstdc++.so.6+0xa2b9d)\n    #7 0x7f11c2cca20b  (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae20b)\n    #8 0x7f11c2cca276 in std::terminate() (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae276)\n    #9 0x7f11c2cca4d7 in __cxa_throw (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae4d7)\n    #10 0x560026d1ac8c in YAML::Scanner::ScanFlowEnd() /sourcecode/src/scantoken.cpp:106\n    #11 0x560026ced249 in fuzzloop /dockerin/fuzz_drivers/tf1729061963004oqsi.cpp:34\n    #12 0x560026d3c109 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #13 0x560026cece68 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #14 0x7f11c2915d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #15 0x7f11c2915e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #16 0x560026cecfb4 in _start (/dockerin/fuzz_drivers/tf1729061963004oqsi.out+0x49fb4)\n崩溃类型是什么？", "A": "larger memory malloc", "B": "stack-buffer-underflow", "C": "stack-buffer-overflow", "D": "SIGABRT", "answer": "D"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7f184678ff18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x559947a82659 in CrashHandler /home/clouditera/workdir-engine_c/betafuzz/checkers/handlecrashes.c:281\n    #2 0x7f18461ac51f  (/lib/x86_64-linux-gnu/libc.so.6+0x4251f)\n    #3 0x7f18462009fb in pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x969fb)\n    #4 0x7f18461ac475 in raise (/lib/x86_64-linux-gnu/libc.so.6+0x42475)\n    #5 0x7f18461927f2 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x287f2)\n    #6 0x7f184653cb9d  (/lib/x86_64-linux-gnu/libstdc++.so.6+0xa2b9d)\n    #7 0x7f184654820b  (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae20b)\n    #8 0x7f1846548276 in std::terminate() (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae276)\n    #9 0x7f18465484d7 in __cxa_throw (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae4d7)\n    #10 0x559947a65b7d in YAML::Scanner::ScanBlockScalar() /sourcecode/src/scantoken.cpp:416\n    #11 0x559947a33225 in fuzzloop /dockerin/fuzz_drivers/tf1729571827258uqxw.cpp:20\n    #12 0x559947a81859 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #13 0x559947a32e48 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #14 0x7f1846193d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #15 0x7f1846193e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #16 0x559947a32f94 in _start (/dockerin/fuzz_drivers/tf1729571827258uqxw.out+0x45f94)\n崩溃类型是什么？", "A": "memcpy-param-overlap", "B": "global-buffer-overflow", "C": "SIGABRT", "D": "invalid-posix-memalign-alignment", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7fee69fe6f18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x55b635dbc329 in CrashHandler /home/clouditera/workdir-engine_c/betafuzz/checkers/handlecrashes.c:281\n    #2 0x7fee693cc51f  (/lib/x86_64-linux-gnu/libc.so.6+0x4251f)\n    #3 0x7fee694209fb in pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x969fb)\n    #4 0x7fee693cc475 in raise (/lib/x86_64-linux-gnu/libc.so.6+0x42475)\n    #5 0x7fee693b27f2 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x287f2)\n    #6 0x7fee69d93b9d  (/lib/x86_64-linux-gnu/libstdc++.so.6+0xa2b9d)\n    #7 0x7fee69d9f20b  (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae20b)\n    #8 0x7fee69d9f276 in std::terminate() (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae276)\n    #9 0x7fee69d9f4d7 in __cxa_throw (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae4d7)\n    #10 0x55b635dac8e6 in ghc::filesystem::create_directory_symlink(ghc::filesystem::path const&, ghc::filesystem::path const&) include/ghc/filesystem.hpp:4164\n    #11 0x55b635da81b3 in fuzzloop /dockerin/fuzz_drivers/tf1728370218698szbj.cpp:45\n    #12 0x55b635dbb529 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #13 0x55b635da7a28 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #14 0x7fee693b3d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #15 0x7fee693b3e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #16 0x55b635da7b74 in _start (/dockerin/fuzz_drivers/tf1728370218698szbj.out+0x20b74)\n崩溃类型是什么？", "A": "invalid-posix-memalign-alignment", "B": "global-buffer-overflow", "C": "SIGABRT", "D": "unknown-crash", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7f9145a26f18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x561722c956f9 in CrashHandler /home/clouditera/workdir-engine_c/betafuzz/checkers/handlecrashes.c:281\n    #2 0x7f914544351f  (/lib/x86_64-linux-gnu/libc.so.6+0x4251f)\n    #3 0x7f91454979fb in pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x969fb)\n    #4 0x7f9145443475 in raise (/lib/x86_64-linux-gnu/libc.so.6+0x42475)\n    #5 0x7f91454297f2 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x287f2)\n    #6 0x7f91457d3b9d  (/lib/x86_64-linux-gnu/libstdc++.so.6+0xa2b9d)\n    #7 0x7f91457df20b  (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae20b)\n    #8 0x7f91457df276 in std::terminate() (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae276)\n    #9 0x7f91457df4d7 in __cxa_throw (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae4d7)\n    #10 0x561722c0af0f in YAML::LoadFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /sourcecode/src/parse.cpp:35\n    #11 0x561722c0942f in fuzzloop /dockerin/fuzz_drivers/tf1729566972582yatb.cpp:25\n    #12 0x561722c948f9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #13 0x561722c09078 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #14 0x7f914542ad8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #15 0x7f914542ae3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #16 0x561722c091c4 in _start (/dockerin/fuzz_drivers/tf1729566972582yatb.out+0x881c4)\n崩溃类型是什么？", "A": "SIGABRT", "B": "invalid-posix-memalign-alignment", "C": "double-free", "D": "stack-buffer-overflow", "answer": "A"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7f0b283f1f18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x564cc0536f09 in CrashHandler /home/clouditera/workdir-engine_c/betafuzz/checkers/handlecrashes.c:281\n    #2 0x7f0b27e0e51f  (/lib/x86_64-linux-gnu/libc.so.6+0x4251f)\n    #3 0x7f0b27e629fb in pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x969fb)\n    #4 0x7f0b27e0e475 in raise (/lib/x86_64-linux-gnu/libc.so.6+0x42475)\n    #5 0x7f0b27df47f2 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x287f2)\n    #6 0x7f0b2819eb9d  (/lib/x86_64-linux-gnu/libstdc++.so.6+0xa2b9d)\n    #7 0x7f0b281aa20b  (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae20b)\n    #8 0x7f0b281aa276 in std::terminate() (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae276)\n    #9 0x7f0b281aa4d7 in __cxa_throw (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae4d7)\n    #10 0x564cc0526186 in YAML::ScanTagSuffix[abi:cxx11](YAML::Stream&) /sourcecode/src/scantag.cpp:77\n    #11 0x564cc051836e in YAML::Scanner::ScanTag() /sourcecode/src/scantoken.cpp:286\n    #12 0x564cc04e7249 in fuzzloop /sharedockerin/ta1729063013902abwy/test_file.cpp:34\n    #13 0x564cc0536109 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #14 0x564cc04e6e68 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #15 0x7f0b27df5d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #16 0x7f0b27df5e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #17 0x564cc04e6fb4 in _start (/sharedockerin/ta1729063013902abwy/clouditera+0x49fb4)\n崩溃类型是什么？", "A": "heap-buffer-overflow", "B": "calloc parameters overflow", "C": "SIGABRT", "D": "stack-buffer-underflow", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7ff9b9dc1f18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x55e62cc29749 in CrashHandler /home/clouditera/workdir-engine_c/betafuzz/checkers/handlecrashes.c:281\n    #2 0x7ff9b97de51f  (/lib/x86_64-linux-gnu/libc.so.6+0x4251f)\n    #3 0x7ff9b98329fb in pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x969fb)\n    #4 0x7ff9b97de475 in raise (/lib/x86_64-linux-gnu/libc.so.6+0x42475)\n    #5 0x7ff9b97c47f2 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x287f2)\n    #6 0x7ff9b97c471a  (/lib/x86_64-linux-gnu/libc.so.6+0x2871a)\n    #7 0x7ff9b97d5e95 in __assert_fail (/lib/x86_64-linux-gnu/libc.so.6+0x39e95)\n    #8 0x55e62cbf39e6 in YAML::Emitter::FlowMapPrepareLongKeyValue(YAML::EmitterNodeType::value) /sourcecode/src/emitter.cpp:465\n    #9 0x55e62cbf0bee in fuzzloop /sharedockerin/ta1729587940610octr/test_file.cpp:19\n    #10 0x55e62cc28949 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #11 0x55e62cbf08e8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #12 0x7ff9b97c5d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #13 0x7ff9b97c5e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #14 0x55e62cbf0a34 in _start (/sharedockerin/ta1729587940610octr/clouditera+0x33a34)\n崩溃类型是什么？", "A": "bad-free", "B": "stack-buffer-overflow", "C": "SIGABRT", "D": "stack-buffer-underflow", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7f6d092a4f18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x559953282f69 in CrashHandler /home/clouditera/workdir-engine_c/betafuzz/checkers/handlecrashes.c:281\n    #2 0x7f6d088d851f  (/lib/x86_64-linux-gnu/libc.so.6+0x4251f)\n    #3 0x7f6d0892c9fb in pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x969fb)\n    #4 0x7f6d088d8475 in raise (/lib/x86_64-linux-gnu/libc.so.6+0x42475)\n    #5 0x7f6d088be7f2 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x287f2)\n    #6 0x7f6d088be71a  (/lib/x86_64-linux-gnu/libc.so.6+0x2871a)\n    #7 0x7f6d088cfe95 in __assert_fail (/lib/x86_64-linux-gnu/libc.so.6+0x39e95)\n    #8 0x55995319cf40 in fiobj_hash_replace /sourcecode/lib/facil/fiobj/fiobj_hash.c:240\n    #9 0x559953192340 in fuzzloop /dockerin/fuzz_drivers/tf1729828850384yvoy.c:25\n    #10 0x559953282169 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #11 0x559953191a98 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #12 0x7f6d088bfd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #13 0x7f6d088bfe3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #14 0x559953191be4 in _start (/dockerin/fuzz_drivers/tf1729828850384yvoy.out+0x115be4)\n崩溃类型是什么？", "A": "SIGABRT", "B": "allocation-size-too-big", "C": "bad-free", "D": "double-free", "answer": "A"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7f2428b3bf18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x55af92cf7f09 in CrashHandler /home/clouditera/workdir-engine_c/betafuzz/checkers/handlecrashes.c:281\n    #2 0x7f242855851f  (/lib/x86_64-linux-gnu/libc.so.6+0x4251f)\n    #3 0x7f24285ac9fb in pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x969fb)\n    #4 0x7f2428558475 in raise (/lib/x86_64-linux-gnu/libc.so.6+0x42475)\n    #5 0x7f242853e7f2 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x287f2)\n    #6 0x7f24288e8b9d  (/lib/x86_64-linux-gnu/libstdc++.so.6+0xa2b9d)\n    #7 0x7f24288f420b  (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae20b)\n    #8 0x7f24288f4276 in std::terminate() (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae276)\n    #9 0x7f24288f44d7 in __cxa_throw (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae4d7)\n    #10 0x55af92cd7795 in YAML::Scanner::ScanKey() /sourcecode/src/scantoken.cpp:177\n    #11 0x55af92ca8249 in fuzzloop /dockerin/fuzz_drivers/tf1729580069731zwuq.cpp:33\n    #12 0x55af92cf7109 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #13 0x55af92ca7e68 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #14 0x7f242853fd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #15 0x7f242853fe3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #16 0x55af92ca7fb4 in _start (/dockerin/fuzz_drivers/tf1729580069731zwuq.out+0x49fb4)\n崩溃类型是什么？", "A": "SIGABRT", "B": "out-of-memory", "C": "stack-buffer-overflow", "D": "larger memory malloc", "answer": "A"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7fc3c13f4f18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x55f25f042a09 in CrashHandler /home/clouditera/workdir-engine_c/betafuzz/checkers/handlecrashes.c:281\n    #2 0x7fc3c0e1151f  (/lib/x86_64-linux-gnu/libc.so.6+0x4251f)\n    #3 0x7fc3c0e659fb in pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x969fb)\n    #4 0x7fc3c0e11475 in raise (/lib/x86_64-linux-gnu/libc.so.6+0x42475)\n    #5 0x7fc3c0df77f2 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x287f2)\n    #6 0x7fc3c0df771a  (/lib/x86_64-linux-gnu/libc.so.6+0x2871a)\n    #7 0x7fc3c0e08e95 in __assert_fail (/lib/x86_64-linux-gnu/libc.so.6+0x39e95)\n    #8 0x55f25f032951 in void YAML::EmitterState::_Set<YAML::EMITTER_MANIP>(YAML::Setting<YAML::EMITTER_MANIP>&, YAML::EMITTER_MANIP, YAML::FmtScope::value) /sourcecode/src/emitterstate.h:211\n    #9 0x55f25f030149 in YAML::EmitterState::SetOutputCharset(YAML::EMITTER_MANIP, YAML::FmtScope::value) /sourcecode/src/emitterstate.cpp:246\n    #10 0x55f25f02ca84 in fuzzloop /sharedockerin/ta1729063013469qwlc/test_file.cpp:110\n    #11 0x55f25f041c09 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #12 0x55f25f02c568 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #13 0x7fc3c0df8d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #14 0x7fc3c0df8e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #15 0x55f25f02c6b4 in _start (/sharedockerin/ta1729063013469qwlc/clouditera+0x216b4)\n崩溃类型是什么？", "A": "allocation-size-too-big", "B": "calloc parameters overflow", "C": "SIGABRT", "D": "memcpy-param-overlap", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7f4f4a308f18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x55a7ea1ceac9 in CrashHandler /home/clouditera/workdir-engine_c/betafuzz/checkers/handlecrashes.c:281\n    #2 0x7f4f49d2551f  (/lib/x86_64-linux-gnu/libc.so.6+0x4251f)\n    #3 0x7f4f49d799fb in pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x969fb)\n    #4 0x7f4f49d25475 in raise (/lib/x86_64-linux-gnu/libc.so.6+0x42475)\n    #5 0x7f4f49d0b7f2 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x287f2)\n    #6 0x7f4f4a0b5b9d  (/lib/x86_64-linux-gnu/libstdc++.so.6+0xa2b9d)\n    #7 0x7f4f4a0c120b  (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae20b)\n    #8 0x7f4f4a0c1276 in std::terminate() (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae276)\n    #9 0x7f4f4a0c14d7 in __cxa_throw (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae4d7)\n    #10 0x55a7ea1b2771 in YAML::detail::node_data::insert(YAML::detail::node&, YAML::detail::node&, std::shared_ptr<YAML::detail::memory_holder> const&) /sourcecode/src/node_data.cpp:203\n    #11 0x55a7ea1ae02a in fuzzloop /dockerin/fuzz_drivers/tf1729580657241xijt.cpp:33\n    #12 0x55a7ea1cdcc9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #13 0x55a7ea1ada58 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #14 0x7f4f49d0cd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #15 0x7f4f49d0ce3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #16 0x55a7ea1adba4 in _start (/dockerin/fuzz_drivers/tf1729580657241xijt.out+0x2bba4)\n崩溃类型是什么？", "A": "SIGABRT", "B": "unknown-crash", "C": "heap-use-after-free", "D": "larger memory malloc", "answer": "A"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7fb2fbcc4f18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x55eca18806f9 in CrashHandler /home/clouditera/workdir-engine_c/betafuzz/checkers/handlecrashes.c:281\n    #2 0x7fb2fb6e151f  (/lib/x86_64-linux-gnu/libc.so.6+0x4251f)\n    #3 0x7fb2fb7359fb in pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x969fb)\n    #4 0x7fb2fb6e1475 in raise (/lib/x86_64-linux-gnu/libc.so.6+0x42475)\n    #5 0x7fb2fb6c77f2 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x287f2)\n    #6 0x7fb2fba71b9d  (/lib/x86_64-linux-gnu/libstdc++.so.6+0xa2b9d)\n    #7 0x7fb2fba7d20b  (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae20b)\n    #8 0x7fb2fba7d276 in std::terminate() (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae276)\n    #9 0x7fb2fba7d4d7 in __cxa_throw (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae4d7)\n    #10 0x55eca1816591 in YAML::SingleDocParser::LookupAnchor(YAML::Mark const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const /sourcecode/src/singledocparser.cpp:430\n    #11 0x55eca1810bd1 in YAML::SingleDocParser::HandleNode(YAML::EventHandler&) /sourcecode/src/singledocparser.cpp:72\n    #12 0x55eca1810113 in YAML::SingleDocParser::HandleDocument(YAML::EventHandler&) /sourcecode/src/singledocparser.cpp:41\n    #13 0x55eca1807663 in YAML::Parser::HandleNextDocument(YAML::EventHandler&) /sourcecode/src/parser.cpp:37\n    #14 0x55eca17f5b85 in YAML::Load(std::istream&) /sourcecode/src/parse.cpp:25\n    #15 0x55eca17f5534 in YAML::Load(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /sourcecode/src/parse.cpp:14\n    #16 0x55eca17f442f in fuzzloop /sharedockerin/ta1729581130068cuhz/test_file.cpp:25\n    #17 0x55eca187f8f9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #18 0x55eca17f4078 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #19 0x7fb2fb6c8d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #20 0x7fb2fb6c8e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #21 0x55eca17f41c4 in _start (/sharedockerin/ta1729581130068cuhz/clouditera+0x881c4)\n崩溃类型是什么？", "A": "stack-buffer-underflow", "B": "SIGABRT", "C": "unknown-crash", "D": "global-buffer-overflow", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7f8c7a207f18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x55cf69283099 in CrashHandler /home/clouditera/workdir-engine_c/betafuzz/checkers/handlecrashes.c:281\n    #2 0x7f8c79c2451f  (/lib/x86_64-linux-gnu/libc.so.6+0x4251f)\n    #3 0x7f8c79c789fb in pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x969fb)\n    #4 0x7f8c79c24475 in raise (/lib/x86_64-linux-gnu/libc.so.6+0x42475)\n    #5 0x7f8c79c0a7f2 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x287f2)\n    #6 0x7f8c79c0a71a  (/lib/x86_64-linux-gnu/libc.so.6+0x2871a)\n    #7 0x7f8c79c1be95 in __assert_fail (/lib/x86_64-linux-gnu/libc.so.6+0x39e95)\n    #8 0x55cf69253da2 in YAML::EmitterState::ForceFlow() /sourcecode/src/emitterstate.cpp:74\n    #9 0x55cf6924bc4e in YAML::Emitter::EmitEndSeq() /sourcecode/src/emitter.cpp:211\n    #10 0x55cf6924aee6 in YAML::Emitter::SetLocalValue(YAML::EMITTER_MANIP) /sourcecode/src/emitter.cpp:114\n    #11 0x55cf69249d0b in fuzzloop /sharedockerin/ta1729063014331wont/test_file.cpp:102\n    #12 0x55cf69282299 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #13 0x55cf69249908 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #14 0x7f8c79c0bd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #15 0x7f8c79c0be3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #16 0x55cf69249a54 in _start (/sharedockerin/ta1729063014331wont/clouditera+0x34a54)\n崩溃类型是什么？", "A": "memcpy-param-overlap", "B": "heap-buffer-overflow", "C": "out-of-memory", "D": "SIGABRT", "answer": "D"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7fc701292f18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x563d4d8e8b49 in CrashHandler /home/clouditera/workdir-engine_c/betafuzz/checkers/handlecrashes.c:281\n    #2 0x7fc700caf51f  (/lib/x86_64-linux-gnu/libc.so.6+0x4251f)\n    #3 0x7fc700d039fb in pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x969fb)\n    #4 0x7fc700caf475 in raise (/lib/x86_64-linux-gnu/libc.so.6+0x42475)\n    #5 0x7fc700c957f2 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x287f2)\n    #6 0x7fc70103fb9d  (/lib/x86_64-linux-gnu/libstdc++.so.6+0xa2b9d)\n    #7 0x7fc70104b20b  (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae20b)\n    #8 0x7fc70104b276 in std::terminate() (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae276)\n    #9 0x7fc70104b4d7 in __cxa_throw (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae4d7)\n    #10 0x563d4d87df09 in YAML::SingleDocParser::ParseTag(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) /sourcecode/src/singledocparser.cpp:400\n    #11 0x563d4d87dcae in YAML::SingleDocParser::ParseProperties(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) /sourcecode/src/singledocparser.cpp:386\n    #12 0x563d4d8790f6 in YAML::SingleDocParser::HandleNode(YAML::EventHandler&) /sourcecode/src/singledocparser.cpp:80\n    #13 0x563d4d87853d in YAML::SingleDocParser::HandleDocument(YAML::EventHandler&) /sourcecode/src/singledocparser.cpp:41\n    #14 0x563d4d86fa8d in YAML::Parser::HandleNextDocument(YAML::EventHandler&) /sourcecode/src/parser.cpp:37\n    #15 0x563d4d85dfaf in YAML::Load(std::istream&) /sourcecode/src/parse.cpp:25\n    #16 0x563d4d85dcc5 in YAML::Load(char const*) /sourcecode/src/parse.cpp:19\n    #17 0x563d4d85d272 in fuzzloop /sharedockerin/ta1729063014324apvy/test_file.cpp:26\n    #18 0x563d4d8e7d49 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #19 0x563d4d85cf38 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #20 0x7fc700c96d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #21 0x7fc700c96e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #22 0x563d4d85d084 in _start (/sharedockerin/ta1729063014324apvy/clouditera+0x87084)\n崩溃类型是什么？", "A": "SIGABRT", "B": "stack-buffer-underflow", "C": "memcpy-param-overlap", "D": "heap-buffer-overflow", "answer": "A"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7f1cdf848f18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x563e61c4b899 in CrashHandler /home/clouditera/workdir-engine_c/betafuzz/checkers/handlecrashes.c:281\n    #2 0x7f1cdf26551f  (/lib/x86_64-linux-gnu/libc.so.6+0x4251f)\n    #3 0x7f1cdf2b99fb in pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x969fb)\n    #4 0x7f1cdf265475 in raise (/lib/x86_64-linux-gnu/libc.so.6+0x42475)\n    #5 0x7f1cdf24b7f2 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x287f2)\n    #6 0x7f1cdf5f5b9d  (/lib/x86_64-linux-gnu/libstdc++.so.6+0xa2b9d)\n    #7 0x7f1cdf60120b  (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae20b)\n    #8 0x7f1cdf601276 in std::terminate() (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae276)\n    #9 0x7f1cdf6014d7 in __cxa_throw (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae4d7)\n    #10 0x563e61be3fcb in YAML::Parser::HandleTagDirective(YAML::Token const&) /sourcecode/src/parser.cpp:98\n    #11 0x563e61bdf688 in fuzzloop /dockerin/fuzz_drivers/tf1729580069713kkub.cpp:73\n    #12 0x563e61c4aa99 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #13 0x563e61bdf028 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #14 0x7f1cdf24cd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #15 0x7f1cdf24ce3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #16 0x563e61bdf174 in _start (/dockerin/fuzz_drivers/tf1729580069713kkub.out+0x67174)\n崩溃类型是什么？", "A": "SIGABRT", "B": "out-of-memory", "C": "memcpy-param-overlap", "D": "stack-buffer-overflow", "answer": "A"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7f9f1e63cf18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x56073e8e8849 in CrashHandler /home/clouditera/workdir-engine_c/betafuzz/checkers/handlecrashes.c:281\n    #2 0x7f9f1da2251f  (/lib/x86_64-linux-gnu/libc.so.6+0x4251f)\n    #3 0x7f9f1da769fb in pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x969fb)\n    #4 0x7f9f1da22475 in raise (/lib/x86_64-linux-gnu/libc.so.6+0x42475)\n    #5 0x7f9f1da087f2 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x287f2)\n    #6 0x56073e815c81 in testing::internal::posix::Abort() /sourcecode/build/googletest-source/googletest/include/gtest/internal/gtest-port.h:2102\n    #7 0x56073e771aa0 in testing::TestPartResultArray::GetTestPartResult(int) const /sourcecode/build/googletest-source/googletest/src/gtest-test-part.cc:72\n    #8 0x56073e742ff9 in fuzzloop /dockerin/fuzz_drivers/tf1728877392065aant.cpp:21\n    #9 0x56073e8e7a49 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #10 0x56073e742cc8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #11 0x7f9f1da09d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #12 0x7f9f1da09e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #13 0x56073e742e14 in _start (/dockerin/fuzz_drivers/tf1728877392065aant.out+0x275e14)\n崩溃类型是什么？", "A": "SIGABRT", "B": "double-free", "C": "stack-buffer-overflow", "D": "heap-buffer-overflow", "answer": "A"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7f0d3104af18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x55855f5e79b9 in CrashHandler /home/clouditera/workdir-engine_c/betafuzz/checkers/handlecrashes.c:281\n    #2 0x7f0d3067e51f  (/lib/x86_64-linux-gnu/libc.so.6+0x4251f)\n    #3 0x7f0d306d29fb in pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x969fb)\n    #4 0x7f0d3067e475 in raise (/lib/x86_64-linux-gnu/libc.so.6+0x42475)\n    #5 0x7f0d306647f2 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x287f2)\n    #6 0x7f0d3066471a  (/lib/x86_64-linux-gnu/libc.so.6+0x2871a)\n    #7 0x7f0d30675e95 in __assert_fail (/lib/x86_64-linux-gnu/libc.so.6+0x39e95)\n    #8 0x55855f501bea in fiobj_hash_pop /sourcecode/lib/facil/fiobj/fiobj_hash.c:219\n    #9 0x55855f4f7333 in fuzzloop /dockerin/fuzz_drivers/tf1729675748868dvxd.c:23\n    #10 0x55855f5e6bb9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #11 0x55855f4f6a98 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #12 0x7f0d30665d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #13 0x7f0d30665e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #14 0x55855f4f6be4 in _start (/dockerin/fuzz_drivers/tf1729675748868dvxd.out+0x115be4)\n崩溃类型是什么？", "A": "SIGABRT", "B": "heap-use-after-free", "C": "double-free", "D": "unknown-crash", "answer": "A"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7f0e5d927f18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x5609b9e77ab9 in CrashHandler /home/clouditera/workdir-engine_c/betafuzz/checkers/handlecrashes.c:281\n    #2 0x7f0e5d34451f  (/lib/x86_64-linux-gnu/libc.so.6+0x4251f)\n    #3 0x7f0e5d3989fb in pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x969fb)\n    #4 0x7f0e5d344475 in raise (/lib/x86_64-linux-gnu/libc.so.6+0x42475)\n    #5 0x7f0e5d32a7f2 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x287f2)\n    #6 0x7f0e5d32a71a  (/lib/x86_64-linux-gnu/libc.so.6+0x2871a)\n    #7 0x7f0e5d33be95 in __assert_fail (/lib/x86_64-linux-gnu/libc.so.6+0x39e95)\n    #8 0x5609b9e0d8b8 in YAML::NodeBuilder::RegisterAnchor(unsigned long, YAML::detail::node&) /sourcecode/src/nodebuilder.cpp:130\n    #9 0x5609b9e0ce57 in YAML::NodeBuilder::Push(YAML::Mark const&, unsigned long) /sourcecode/src/nodebuilder.cpp:83\n    #10 0x5609b9e0cac3 in YAML::NodeBuilder::OnNull(YAML::Mark const&, unsigned long) /sourcecode/src/nodebuilder.cpp:36\n    #11 0x5609b9e094b5 in fuzzloop /dockerin/fuzz_drivers/tf1729044067442rtub.cpp:36\n    #12 0x5609b9e76cb9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #13 0x5609b9e08f58 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #14 0x7f0e5d32bd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #15 0x7f0e5d32be3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #16 0x5609b9e090a4 in _start (/dockerin/fuzz_drivers/tf1729044067442rtub.out+0x6b0a4)\n崩溃类型是什么？", "A": "memcpy-param-overlap", "B": "out-of-memory", "C": "SIGABRT", "D": "stack-buffer-underflow", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7f5f4e548f18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x560b37c85629 in CrashHandler /home/clouditera/workdir-engine_c/betafuzz/checkers/handlecrashes.c:281\n    #2 0x7f5f4d92e51f  (/lib/x86_64-linux-gnu/libc.so.6+0x4251f)\n    #3 0x7f5f4d9829fb in pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x969fb)\n    #4 0x7f5f4d92e475 in raise (/lib/x86_64-linux-gnu/libc.so.6+0x42475)\n    #5 0x7f5f4d9147f2 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x287f2)\n    #6 0x560b37b4c8fb in google::LogMessage::Fail() /sourcecode/src/logging.cc:1885\n    #7 0x560b37c706b8 in google::RawLog__(google::LogSeverity, char const*, int, char const*, ...) /sourcecode/src/raw_logging.cc:206\n    #8 0x560b37b47d57 in google::LogMessage::SendToLog() /sourcecode/src/logging.cc:1773\n    #9 0x560b37b2931c in fuzzloop /dockerin/fuzz_drivers/tf1728609773580dlzy.cpp:73\n    #10 0x560b37c84829 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #11 0x560b37b28f68 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #12 0x7f5f4d915d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #13 0x7f5f4d915e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #14 0x560b37b290b4 in _start (/dockerin/fuzz_drivers/tf1728609773580dlzy.out+0x2130b4)\n崩溃类型是什么？", "A": "SIGABRT", "B": "memcpy-param-overlap", "C": "unknown-crash", "D": "double-free", "answer": "A"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7f374b14ef18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x55a2e91db549 in CrashHandler /home/clouditera/workdir-engine_c/betafuzz/checkers/handlecrashes.c:281\n    #2 0x7f374a53451f  (/lib/x86_64-linux-gnu/libc.so.6+0x4251f)\n    #3 0x7f374a5889fb in pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x969fb)\n    #4 0x7f374a534475 in raise (/lib/x86_64-linux-gnu/libc.so.6+0x42475)\n    #5 0x7f374a51a7f2 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x287f2)\n    #6 0x7f374a51a71a  (/lib/x86_64-linux-gnu/libc.so.6+0x2871a)\n    #7 0x7f374a52be95 in __assert_fail (/lib/x86_64-linux-gnu/libc.so.6+0x39e95)\n    #8 0x7f374a589ed0  (/lib/x86_64-linux-gnu/libc.so.6+0x97ed0)\n    #9 0x55a2e91a5900 in Communicator::reply_idle_conn(CommSession*, CommTarget*) /sourcecode/src/kernel/Communicator.cc:1711\n    #10 0x55a2e918023c in fuzzloop /dockerin/fuzz_drivers/tf1729655176919ewhu.cpp:47\n    #11 0x55a2e91da749 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #12 0x55a2e917fbb8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #13 0x7f374a51bd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #14 0x7f374a51be3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #15 0x55a2e917fd04 in _start (/dockerin/fuzz_drivers/tf1729655176919ewhu.out+0x86d04)\n崩溃类型是什么？", "A": "double-free", "B": "SIGABRT", "C": "stack-buffer-underflow", "D": "memcpy-param-overlap", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7f2565fd7f18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x560a10fa2f49 in CrashHandler /home/clouditera/workdir-engine_c/betafuzz/checkers/handlecrashes.c:281\n    #2 0x7f256560b51f  (/lib/x86_64-linux-gnu/libc.so.6+0x4251f)\n    #3 0x7f256565f9fb in pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x969fb)\n    #4 0x7f256560b475 in raise (/lib/x86_64-linux-gnu/libc.so.6+0x42475)\n    #5 0x7f25655f17f2 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x287f2)\n    #6 0x7f25655f171a  (/lib/x86_64-linux-gnu/libc.so.6+0x2871a)\n    #7 0x7f2565602e95 in __assert_fail (/lib/x86_64-linux-gnu/libc.so.6+0x39e95)\n    #8 0x560a10ebec9a in fiobj_data_assert_dynamic /sourcecode/lib/facil/fiobj/fiobj_data.c:946\n    #9 0x560a10eb2319 in fuzzloop /dockerin/fuzz_drivers/tf1729828200326dsme.c:28\n    #10 0x560a10fa2149 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #11 0x560a10eb1a98 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #12 0x7f25655f2d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #13 0x7f25655f2e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #14 0x560a10eb1be4 in _start (/dockerin/fuzz_drivers/tf1729828200326dsme.out+0x115be4)\n崩溃类型是什么？", "A": "bad-free", "B": "calloc parameters overflow", "C": "SIGABRT", "D": "unknown-crash", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7f0d11c3df18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x559df9d7eba9 in CrashHandler /home/clouditera/workdir-engine_c/betafuzz/checkers/handlecrashes.c:281\n    #2 0x7f0d1102351f  (/lib/x86_64-linux-gnu/libc.so.6+0x4251f)\n    #3 0x7f0d110779fb in pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x969fb)\n    #4 0x7f0d11023475 in raise (/lib/x86_64-linux-gnu/libc.so.6+0x42475)\n    #5 0x7f0d110097f2 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x287f2)\n    #6 0x7f0d119eab9d  (/lib/x86_64-linux-gnu/libstdc++.so.6+0xa2b9d)\n    #7 0x7f0d119f620b  (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae20b)\n    #8 0x7f0d119f6276 in std::terminate() (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae276)\n    #9 0x7f0d119f64d7 in __cxa_throw (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae4d7)\n    #10 0x559df9d5abd1 in ghc::filesystem::copy(ghc::filesystem::path const&, ghc::filesystem::path const&, ghc::filesystem::copy_options) include/ghc/filesystem.hpp:3802\n    #11 0x559df9d4691a in fuzzloop /dockerin/fuzz_drivers/tf1728370218707fsag.cpp:76\n    #12 0x559df9d7dda9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #13 0x559df9d45e98 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #14 0x7f0d1100ad8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #15 0x7f0d1100ae3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #16 0x559df9d45fe4 in _start (/dockerin/fuzz_drivers/tf1728370218707fsag.out+0x4efe4)\n崩溃类型是什么？", "A": "heap-use-after-free", "B": "stack-buffer-underflow", "C": "SIGABRT", "D": "out-of-memory", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7f56d62e8f18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x55ca48badc19 in CrashHandler /home/clouditera/workdir-engine_c/betafuzz/checkers/handlecrashes.c:281\n    #2 0x7f56d56ce51f  (/lib/x86_64-linux-gnu/libc.so.6+0x4251f)\n    #3 0x7f56d57229fb in pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x969fb)\n    #4 0x7f56d56ce475 in raise (/lib/x86_64-linux-gnu/libc.so.6+0x42475)\n    #5 0x7f56d56b47f2 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x287f2)\n    #6 0x7f56d56b471a  (/lib/x86_64-linux-gnu/libc.so.6+0x2871a)\n    #7 0x7f56d56c5e95 in __assert_fail (/lib/x86_64-linux-gnu/libc.so.6+0x39e95)\n    #8 0x7f56d5729138  (/lib/x86_64-linux-gnu/libc.so.6+0x9d138)\n    #9 0x7f56d57239cc  (/lib/x86_64-linux-gnu/libc.so.6+0x979cc)\n    #10 0x55ca48b4fbb4 in CommSchedGroup::add(CommSchedTarget*) /sourcecode/src/kernel/CommScheduler.cc:350\n    #11 0x55ca48b441a1 in fuzzloop /sharedockerin/ta1729664332015nekb/test_file.cpp:20\n    #12 0x55ca48bace19 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #13 0x55ca48b43bd8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #14 0x7f56d56b5d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #15 0x7f56d56b5e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #16 0x55ca48b43d24 in _start (/sharedockerin/ta1729664332015nekb/clouditera+0x9ed24)\n崩溃类型是什么？", "A": "unknown-crash", "B": "larger memory malloc", "C": "heap-use-after-free", "D": "SIGABRT", "answer": "D"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7f36edabff18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x5631b206a629 in CrashHandler /home/clouditera/workdir-engine_c/betafuzz/checkers/handlecrashes.c:281\n    #2 0x7f36ecea551f  (/lib/x86_64-linux-gnu/libc.so.6+0x4251f)\n    #3 0x7f36ecef99fb in pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x969fb)\n    #4 0x7f36ecea5475 in raise (/lib/x86_64-linux-gnu/libc.so.6+0x42475)\n    #5 0x7f36ece8b7f2 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x287f2)\n    #6 0x5631b1f318fb in google::LogMessage::Fail() /sourcecode/src/logging.cc:1885\n    #7 0x5631b20556b8 in google::RawLog__(google::LogSeverity, char const*, int, char const*, ...) /sourcecode/src/raw_logging.cc:206\n    #8 0x5631b1f2cd57 in google::LogMessage::SendToLog() /sourcecode/src/logging.cc:1773\n    #9 0x5631b1f33468 in google::LogMessage::SaveOrSendToLog() /sourcecode/src/logging.cc:1917\n    #10 0x5631b1f0e31c in fuzzloop /dockerin/fuzz_drivers/tf1728368481825daan.cpp:73\n    #11 0x5631b2069829 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #12 0x5631b1f0df68 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #13 0x7f36ece8cd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #14 0x7f36ece8ce3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #15 0x5631b1f0e0b4 in _start (/dockerin/fuzz_drivers/tf1728368481825daan.out+0x2130b4)\n崩溃类型是什么？", "A": "stack-buffer-overflow", "B": "calloc parameters overflow", "C": "SIGABRT", "D": "bad-free", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7f3bdaa5bf18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x561399428759 in CrashHandler /home/clouditera/workdir-engine_c/betafuzz/checkers/handlecrashes.c:281\n    #2 0x7f3bda6c451f  (/lib/x86_64-linux-gnu/libc.so.6+0x4251f)\n    #3 0x7f3bda7189fb in pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x969fb)\n    #4 0x7f3bda6c4475 in raise (/lib/x86_64-linux-gnu/libc.so.6+0x42475)\n    #5 0x7f3bda6aa7f2 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x287f2)\n    #6 0x56139925e0af in OpenSSLDie /sourcecode/crypto/cryptlib.c:919\n    #7 0x561399259cc0 in ssl3_cbc_copy_mac /sourcecode/ssl/s3_cbc.c:276\n    #8 0x561399259068 in fuzzloop /dockerin/fuzz_drivers/tf1728981988695iduw.c:44\n    #9 0x561399427959 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #10 0x561399258cc8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #11 0x7f3bda6abd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #12 0x7f3bda6abe3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #13 0x561399258e14 in _start (/dockerin/fuzz_drivers/tf1728981988695iduw.out+0xa1e14)\n崩溃类型是什么？", "A": "SIGABRT", "B": "global-buffer-overflow", "C": "calloc parameters overflow", "D": "larger memory malloc", "answer": "A"}
{"question": "程序触发崩溃，崩溃日志如下：\nFuzzAgent Warning:No such file or directory,linux-vdso.so.1\n    #0 0x7fc584e00f18 in __sanitizer_print_stack_trace ../../../../src/libsanitizer/asan/asan_stack.cpp:86\n    #1 0x55fb5e2d3789 in CrashHandler /home/clouditera/workdir-engine_c/betafuzz/checkers/handlecrashes.c:281\n    #2 0x7fc5841e651f  (/lib/x86_64-linux-gnu/libc.so.6+0x4251f)\n    #3 0x7fc58423a9fb in pthread_kill (/lib/x86_64-linux-gnu/libc.so.6+0x969fb)\n    #4 0x7fc5841e6475 in raise (/lib/x86_64-linux-gnu/libc.so.6+0x42475)\n    #5 0x7fc5841cc7f2 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x287f2)\n    #6 0x7fc584badb9d  (/lib/x86_64-linux-gnu/libstdc++.so.6+0xa2b9d)\n    #7 0x7fc584bb920b  (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae20b)\n    #8 0x7fc584bb9276 in std::terminate() (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae276)\n    #9 0x7fc584bb94d7 in __cxa_throw (/lib/x86_64-linux-gnu/libstdc++.so.6+0xae4d7)\n    #10 0x7fc584bb066d in std::__throw_bad_function_call() (/lib/x86_64-linux-gnu/libstdc++.so.6+0xa566d)\n    #11 0x55fb5e12f604 in std::function<unsigned int (char const*, char const*, char const*)>::operator()(char const*, char const*, char const*) const (/dockerin/fuzz_drivers/tf1729655087871vsfn.out+0x3a1604)\n    #12 0x55fb5e123898 in UPSManualPolicy::another_strategy(ParsedURI const&, WFNSTracing*) /sourcecode/src/nameservice/UpstreamPolicies.cc:705\n    #13 0x55fb5e108183 in fuzzloop /dockerin/fuzz_drivers/tf1729655087871vsfn.cpp:25\n    #14 0x55fb5e2d2989 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #15 0x55fb5e1078d8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #16 0x7fc5841cdd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #17 0x7fc5841cde3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #18 0x55fb5e107a24 in _start (/dockerin/fuzz_drivers/tf1729655087871vsfn.out+0x379a24)\n崩溃类型是什么？", "A": "larger memory malloc", "B": "stack-buffer-underflow", "C": "SIGABRT", "D": "calloc parameters overflow", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==358088==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fff4f825060 at pc 0x560498056c1d bp 0x7fff4f824f00 sp 0x7fff4f824ef0\nREAD of size 8 at 0x7fff4f825060 thread T0\n    #0 0x560498056c1c in protocol::MySQLMessage::append(void const*, unsigned long*) /sourcecode/src/protocol/MySQLMessage.cc:101\n    #1 0x560497ff374f in fuzzloop /dockerin/fuzz_drivers/tf1729655844394tgvv.cpp:28\n    #2 0x5604980986f9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x560497ff3278 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7f3a5d9e6d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7f3a5d9e6e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x560497ff33c4 in _start (/dockerin/fuzz_drivers/tf1729655844394tgvv.out+0x10b3c4)\n\nAddress 0x7fff4f825060 is located in stack of thread T0 at offset 48 in frame\n    #0 0x560497ff3498 in fuzzloop /dockerin/fuzz_drivers/tf1729655844394tgvv.cpp:21\n\n  This frame has 4 object(s):\n    [48, 52) 'fuzz_len' (line 27) <== Memory access at offset 48 partially overflows this variable\n    [64, 224) 'vectors' (line 30)\n    [288, 1432) 'msg1' (line 23)\n    [1568, 2712) 'msg2' (line 24)\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-overflow /sourcecode/src/protocol/MySQLMessage.cc:101 in protocol::MySQLMessage::append(void const*, unsigned long*)\nShadow bytes around the buggy address:\n  0x100069efc9b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100069efc9c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100069efc9d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100069efc9e0: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 00 f2 f2 f2\n  0x100069efc9f0: 00 f2 f2 f2 00 f3 f3 f3 00 00 00 00 00 00 00 00\n=>0x100069efca00: 00 00 00 00 00 00 f1 f1 f1 f1 f1 f1[04]f2 00 00\n  0x100069efca10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100069efca20: 00 00 f2 f2 f2 f2 f2 f2 f2 f2 00 00 00 00 00 00\n  0x100069efca30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100069efca40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100069efca50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "double-free", "B": "stack-buffer-overflow", "C": "bad-free", "D": "larger memory malloc", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==4562==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffff7a8c900 at pc 0x5595daeb870c bp 0x7ffff7a8c840 sp 0x7ffff7a8c830\nWRITE of size 8 at 0x7ffff7a8c900 thread T0\n    #0 0x5595daeb870b in fio_message_defer /sourcecode/lib/facil/fio.c:6419\n    #1 0x5595dae59539 in fuzzloop /dockerin/fuzz_drivers/tf1730095752286vqnc.c:23\n    #2 0x5595daf091c9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x5595dae589d8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7f2987802d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7f2987802e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x5595dae58b24 in _start (/dockerin/fuzz_drivers/tf1730095752286vqnc.out+0xc5b24)\n\nAddress 0x7ffff7a8c900 is located in stack of thread T0 at offset 128 in frame\n    #0 0x5595dae5923d in fuzzloop /dockerin/fuzz_drivers/tf1730095752286vqnc.c:14\n\n  This frame has 1 object(s):\n    [48, 128) 'msg' (line 16) <== Memory access at offset 128 overflows this variable\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-overflow /sourcecode/lib/facil/fio.c:6419 in fio_message_defer\nShadow bytes around the buggy address:\n  0x10007ef498d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10007ef498e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10007ef498f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10007ef49900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10007ef49910: f1 f1 f1 f1 f1 f1 00 00 00 00 00 00 00 00 00 00\n=>0x10007ef49920:[f3]f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10007ef49930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10007ef49940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10007ef49950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10007ef49960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10007ef49970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "allocation-size-too-big", "B": "stack-buffer-underflow", "C": "heap-use-after-free", "D": "stack-buffer-overflow", "answer": "D"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==638766==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fffa1fce4e8 at pc 0x556af0540b52 bp 0x7fffa1fce410 sp 0x7fffa1fce400\nREAD of size 8 at 0x7fffa1fce4e8 thread T0\n    #0 0x556af0540b51 in Communicator::append_request(void const*, unsigned long*, __poller_message*) src/kernel/Communicator.cc:1203\n    #1 0x556af05530ca in fuzzloop /dockerin/fuzz_drivers/tf1729656038589skmf.cpp:55\n    #2 0x556af0584199 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x556af0528b78 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7f0ea4be3d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7f0ea4be3e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x556af0528cc4 in _start (/dockerin/fuzz_drivers/tf1729656038589skmf.out+0x86cc4)\n\nAddress 0x7fffa1fce4e8 is located in stack of thread T0 at offset 56 in frame\n    #0 0x556af0552bd1 in fuzzloop /dockerin/fuzz_drivers/tf1729656038589skmf.cpp:38\n\n  This frame has 2 object(s):\n    [32, 40) 'size' (line 41)\n    [64, 72) 'msg' (line 42) <== Memory access at offset 56 underflows this variable\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-overflow src/kernel/Communicator.cc:1203 in Communicator::append_request(void const*, unsigned long*, __poller_message*)\nShadow bytes around the buggy address:\n  0x1000743f1c40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x1000743f1c50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x1000743f1c60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x1000743f1c70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x1000743f1c80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n=>0x1000743f1c90: 00 00 00 00 00 00 f1 f1 f1 f1 00 f2 f2[f2]00 f3\n  0x1000743f1ca0: f3 f3 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x1000743f1cb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x1000743f1cc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x1000743f1cd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x1000743f1ce0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "stack-buffer-overflow", "B": "larger memory malloc", "C": "allocation-size-too-big", "D": "unknown-crash", "answer": "A"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==2807==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffc76ceaca0 at pc 0x56292c1cee24 bp 0x7ffc76cea810 sp 0x7ffc76cea800\nWRITE of size 1 at 0x7ffc76ceaca0 thread T0\n    #0 0x56292c1cee23 in http_decode_url /sourcecode/lib/facil/http/http.c:2412\n    #1 0x56292c0bc8c7 in fuzzloop /dockerin/fuzz_drivers/tf1730095317947wbjk.c:19\n    #2 0x56292c23b399 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x56292c0bbab8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7f9eca17ad8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7f9eca17ae3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x56292c0bbc04 in _start (/dockerin/fuzz_drivers/tf1730095317947wbjk.out+0x1dbc04)\n\nAddress 0x7ffc76ceaca0 is located in stack of thread T0 at offset 1056 in frame\n    #0 0x56292c0bc7d9 in fuzzloop /dockerin/fuzz_drivers/tf1730095317947wbjk.c:15\n\n  This frame has 1 object(s):\n    [32, 1056) 'dest' (line 18) <== Memory access at offset 1056 overflows this variable\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-overflow /sourcecode/lib/facil/http/http.c:2412 in http_decode_url\nShadow bytes around the buggy address:\n  0x10000ed95540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10000ed95550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10000ed95560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10000ed95570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10000ed95580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n=>0x10000ed95590: 00 00 00 00[f3]f3 f3 f3 f3 f3 f3 f3 f3 f3 f3 f3\n  0x10000ed955a0: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10000ed955b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10000ed955c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10000ed955d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10000ed955e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "invalid-posix-memalign-alignment", "B": "heap-buffer-overflow", "C": "global-buffer-overflow", "D": "stack-buffer-overflow", "answer": "D"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==3061==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffd38423ea0 at pc 0x55b125c2cce9 bp 0x7ffd38423dd0 sp 0x7ffd38423dc0\nREAD of size 8 at 0x7ffd38423ea0 thread T0\n    #0 0x55b125c2cce8 in dns_parser_append_message /sourcecode/src/protocol/dns_parser.c:815\n    #1 0x55b125c247bb in fuzzloop /dockerin/fuzz_drivers/tf1729594394092marz.cpp:22\n    #2 0x55b125c36f49 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x55b125c24468 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7f59e764ed8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7f59e764ee3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x55b125c245b4 in _start (/dockerin/fuzz_drivers/tf1729594394092marz.out+0x1d5b4)\n\nAddress 0x7ffd38423ea0 is located in stack of thread T0 at offset 48 in frame\n    #0 0x55b125c24688 in fuzzloop /dockerin/fuzz_drivers/tf1729594394092marz.cpp:14\n\n  This frame has 2 object(s):\n    [48, 52) 'fuzz_len' (line 19) <== Memory access at offset 48 partially overflows this variable\n    [64, 184) 'parser' (line 15)\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-overflow /sourcecode/src/protocol/dns_parser.c:815 in dns_parser_append_message\nShadow bytes around the buggy address:\n  0x10002707c780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10002707c790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10002707c7a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10002707c7b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10002707c7c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1\n=>0x10002707c7d0: f1 f1 f1 f1[04]f2 00 00 00 00 00 00 00 00 00 00\n  0x10002707c7e0: 00 00 00 00 00 f3 f3 f3 f3 f3 00 00 00 00 00 00\n  0x10002707c7f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10002707c800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10002707c810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10002707c820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "stack-buffer-underflow", "B": "larger memory malloc", "C": "heap-buffer-overflow", "D": "stack-buffer-overflow", "answer": "D"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==6242==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffe8b6dc710 at pc 0x55e24d07fcec bp 0x7ffe8b6dc620 sp 0x7ffe8b6dc610\nREAD of size 8 at 0x7ffe8b6dc710 thread T0\n    #0 0x55e24d07fceb in fio_message_metadata /sourcecode/lib/facil/fio.c:6369\n    #1 0x55e24d021554 in fuzzloop /dockerin/fuzz_drivers/tf1730095386117tnvu.c:24\n    #2 0x55e24d0d11d9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x55e24d0209d8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7f74c0bfcd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7f74c0bfce3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x55e24d020b24 in _start (/dockerin/fuzz_drivers/tf1730095386117tnvu.out+0xc5b24)\n\nAddress 0x7ffe8b6dc710 is located in stack of thread T0 at offset 144 in frame\n    #0 0x55e24d02123d in fuzzloop /dockerin/fuzz_drivers/tf1730095386117tnvu.c:14\n\n  This frame has 1 object(s):\n    [48, 128) 'msg' (line 16) <== Memory access at offset 144 overflows this variable\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-overflow /sourcecode/lib/facil/fio.c:6369 in fio_message_metadata\nShadow bytes around the buggy address:\n  0x1000516d3890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x1000516d38a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x1000516d38b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x1000516d38c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x1000516d38d0: f1 f1 f1 f1 f1 f1 00 00 00 00 00 00 00 00 00 00\n=>0x1000516d38e0: f3 f3[f3]f3 00 00 00 00 00 00 00 00 00 00 00 00\n  0x1000516d38f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x1000516d3900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x1000516d3910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x1000516d3920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x1000516d3930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "heap-use-after-free", "B": "stack-buffer-overflow", "C": "global-buffer-overflow", "D": "stack-buffer-underflow", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==130==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffc1e2ca890 at pc 0x56552e4bb705 bp 0x7ffc1e2ca790 sp 0x7ffc1e2ca780\nWRITE of size 1 at 0x7ffc1e2ca890 thread T0\n    #0 0x56552e4bb704 in fio_ltoa /sourcecode/lib/facil/fio.c:4869\n    #1 0x56552e479345 in fuzzloop /sharedockerin/ta1730101611991syeu/test_file.c:18\n    #2 0x56552e528fd9 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x56552e4789d8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7f26ae45ed8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7f26ae45ee3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x56552e478b24 in _start (/sharedockerin/ta1730101611991syeu/clouditera+0xc5b24)\n\nAddress 0x7ffc1e2ca890 is located in stack of thread T0 at offset 128 in frame\n    #0 0x56552e4bae89 in fio_ltoa /sourcecode/lib/facil/fio.c:4821\n\n  This frame has 2 object(s):\n    [48, 64) 'notation' (line 4822)\n    [80, 128) 'buf' (line 4826) <== Memory access at offset 128 overflows this variable\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-overflow /sourcecode/lib/facil/fio.c:4869 in fio_ltoa\nShadow bytes around the buggy address:\n  0x100003c514c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100003c514d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100003c514e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100003c514f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100003c51500: 00 00 f1 f1 f1 f1 f1 f1 00 00 f2 f2 00 00 00 00\n=>0x100003c51510: 00 00[f3]f3 f3 f3 00 00 00 00 00 00 00 00 00 00\n  0x100003c51520: 00 00 00 00 f1 f1 f1 f1 f1 f1 00 00 00 00 00 00\n  0x100003c51530: 00 00 04 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00\n  0x100003c51540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100003c51550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100003c51560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "SIGABRT", "B": "stack-buffer-underflow", "C": "bad-free", "D": "stack-buffer-overflow", "answer": "D"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==559067==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffe0fb215cc at pc 0x558c55607ed8 bp 0x7ffe0fb214c0 sp 0x7ffe0fb214b0\nWRITE of size 4 at 0x7ffe0fb215cc thread T0\n    #0 0x558c55607ed7 in CommService::incref() /sourcecode/src/kernel/Communicator.cc:281\n    #1 0x558c555fa6ee in Communicator::accept(sockaddr const*, unsigned int, int, void*) /sourcecode/src/kernel/Communicator.cc:1367\n    #2 0x558c555de11a in fuzzloop /dockerin/fuzz_drivers/tf1729655725590kkgn.cpp:30\n    #3 0x558c55637a09 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #4 0x558c555ddbd8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #5 0x7fb1b616fd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #6 0x7fb1b616fe3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #7 0x558c555ddd24 in _start (/dockerin/fuzz_drivers/tf1729655725590kkgn.out+0x84d24)\n\nAddress 0x7ffe0fb215cc is located in stack of thread T0 at offset 92 in frame\n    #0 0x558c555dddf8 in fuzzloop /dockerin/fuzz_drivers/tf1729655725590kkgn.cpp:17\n\n  This frame has 2 object(s):\n    [48, 88) 'comm' (line 19) <== Memory access at offset 92 overflows this variable\n    [128, 144) 'addr' (line 22)\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-overflow /sourcecode/src/kernel/Communicator.cc:281 in CommService::incref()\nShadow bytes around the buggy address:\n  0x100041f5c260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100041f5c270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100041f5c280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100041f5c290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100041f5c2a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1\n=>0x100041f5c2b0: f1 f1 f1 f1 00 00 00 00 00[f2]f2 f2 f2 f2 00 00\n  0x100041f5c2c0: f3 f3 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100041f5c2d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100041f5c2e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100041f5c2f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100041f5c300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "larger memory malloc", "B": "stack-buffer-overflow", "C": "out-of-memory", "D": "heap-buffer-overflow", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==628024==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffddeaed098 at pc 0x55621b370abc bp 0x7ffddeaece40 sp 0x7ffddeaece30\nREAD of size 4 at 0x7ffddeaed098 thread T0\n    #0 0x55621b370abb in UPSGroupPolicy::add_server_locked(EndpointAddress*) /sourcecode/src/nameservice/UpstreamPolicies.cc:292\n    #1 0x55621b376c29 in UPSWeightedRandomPolicy::add_server_locked(EndpointAddress*) /sourcecode/src/nameservice/UpstreamPolicies.cc:480\n    #2 0x55621b37ee08 in UPSVNSWRRPolicy::add_server_locked(EndpointAddress*) /sourcecode/src/nameservice/UpstreamPolicies.cc:655\n    #3 0x55621b364f7c in fuzzloop /dockerin/fuzz_drivers/tf1729655864284gmwn.cpp:31\n    #4 0x55621b530329 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #5 0x55621b364978 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #6 0x7f9041808d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #7 0x7f9041808e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #8 0x55621b364ac4 in _start (/dockerin/fuzz_drivers/tf1729655864284gmwn.out+0x37aac4)\n\nAddress 0x7ffddeaed098 is located in stack of thread T0 at offset 216 in frame\n    #0 0x55621b364b98 in fuzzloop /dockerin/fuzz_drivers/tf1729655864284gmwn.cpp:15\n\n  This frame has 6 object(s):\n    [48, 49) '<unknown>'\n    [64, 120) 'addrParams' (line 20)\n    [160, 216) 'params' (line 26) <== Memory access at offset 216 overflows this variable\n    [256, 288) '<unknown>'\n    [320, 472) 'addr' (line 29)\n    [544, 920) 'policy' (line 17)\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-overflow /sourcecode/src/nameservice/UpstreamPolicies.cc:292 in UPSGroupPolicy::add_server_locked(EndpointAddress*)\nShadow bytes around the buggy address:\n  0x10003bd559c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10003bd559d0: 00 00 00 00 f1 f1 f1 f1 00 f3 f3 f3 00 00 00 00\n  0x10003bd559e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10003bd559f0: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 f1 f1 f8 f2\n  0x10003bd55a00: 00 00 00 00 00 00 00 f2 f2 f2 f2 f2 00 00 00 00\n=>0x10003bd55a10: 00 00 00[f2]f2 f2 f2 f2 f8 f8 f8 f8 f2 f2 f2 f2\n  0x10003bd55a20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10003bd55a30: 00 00 00 f2 f2 f2 f2 f2 f2 f2 f2 f2 00 00 00 00\n  0x10003bd55a40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10003bd55a50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10003bd55a60: 00 00 00 00 00 00 00 00 00 00 00 f3 f3 f3 f3 f3\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "global-buffer-overflow", "B": "stack-buffer-underflow", "C": "stack-buffer-overflow", "D": "memcpy-param-overlap", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==5858==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fffa297c758 at pc 0x55cccec30e3a bp 0x7fffa297c6a0 sp 0x7fffa297c690\nREAD of size 8 at 0x7fffa297c758 thread T0\n    #0 0x55cccec30e39 in http_sse_set_timout /sourcecode/lib/facil/http/http.c:1346\n    #1 0x55ccceb3397a in fuzzloop /dockerin/fuzz_drivers/tf1730095272215fpyt.c:24\n    #2 0x55cccecb2449 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x55ccceb32ab8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7fe62d537d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7fe62d537e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x55ccceb32c04 in _start (/dockerin/fuzz_drivers/tf1730095272215fpyt.out+0x1dbc04)\n\nAddress 0x7fffa297c758 is located in stack of thread T0 at offset 88 in frame\n    #0 0x55ccceb337d9 in fuzzloop /dockerin/fuzz_drivers/tf1730095272215fpyt.c:14\n\n  This frame has 1 object(s):\n    [48, 88) 'sse' (line 15) <== Memory access at offset 88 overflows this variable\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-overflow /sourcecode/lib/facil/http/http.c:1346 in http_sse_set_timout\nShadow bytes around the buggy address:\n  0x100074527890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x1000745278a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x1000745278b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x1000745278c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x1000745278d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n=>0x1000745278e0: f1 f1 f1 f1 f1 f1 00 00 00 00 00[f3]f3 f3 f3 f3\n  0x1000745278f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100074527900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100074527910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100074527920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100074527930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "memcpy-param-overlap", "B": "SIGABRT", "C": "stack-buffer-overflow", "D": "bad-free", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==640030==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fff56a57bd8 at pc 0x558019ae391a bp 0x7fff56a579d0 sp 0x7fff56a579c0\nREAD of size 4 at 0x7fff56a57bd8 thread T0\n    #0 0x558019ae3919 in UPSGroupPolicy::add_server_locked(EndpointAddress*) /sourcecode/src/nameservice/UpstreamPolicies.cc:292\n    #1 0x558019af2a66 in UPSConsistentHashPolicy::add_server_locked(EndpointAddress*) /sourcecode/src/nameservice/UpstreamPolicies.cc:678\n    #2 0x558019ad906f in fuzzloop /dockerin/fuzz_drivers/tf1729656021490sapd.cpp:31\n    #3 0x558019ca3f19 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #4 0x558019ad8978 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #5 0x7f80ee6ced8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #6 0x7f80ee6cee3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #7 0x558019ad8ac4 in _start (/dockerin/fuzz_drivers/tf1729656021490sapd.out+0x378ac4)\n\nAddress 0x7fff56a57bd8 is located in stack of thread T0 at offset 216 in frame\n    #0 0x558019ad8b98 in fuzzloop /dockerin/fuzz_drivers/tf1729656021490sapd.cpp:15\n\n  This frame has 7 object(s):\n    [48, 49) '<unknown>'\n    [64, 120) 'params' (line 20)\n    [160, 216) 'policyParams' (line 26) <== Memory access at offset 216 overflows this variable\n    [256, 288) '<unknown>'\n    [320, 352) '<unknown>'\n    [384, 536) 'addr' (line 29)\n    [608, 952) 'policy' (line 17)\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-overflow /sourcecode/src/nameservice/UpstreamPolicies.cc:292 in UPSGroupPolicy::add_server_locked(EndpointAddress*)\nShadow bytes around the buggy address:\n  0x10006ad42f20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10006ad42f30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10006ad42f40: 00 00 00 00 00 00 f1 f1 f1 f1 00 f3 f3 f3 00 00\n  0x10006ad42f50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10006ad42f60: f1 f1 f1 f1 f1 f1 f8 f2 00 00 00 00 00 00 00 f2\n=>0x10006ad42f70: f2 f2 f2 f2 00 00 00 00 00 00 00[f2]f2 f2 f2 f2\n  0x10006ad42f80: f8 f8 f8 f8 f2 f2 f2 f2 f8 f8 f8 f8 f2 f2 f2 f2\n  0x10006ad42f90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10006ad42fa0: 00 00 00 f2 f2 f2 f2 f2 f2 f2 f2 f2 00 00 00 00\n  0x10006ad42fb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10006ad42fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "allocation-size-too-big", "B": "unknown-crash", "C": "stack-buffer-overflow", "D": "heap-buffer-overflow", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==755071==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffdd1c4a310 at pc 0x55e418a16a1e bp 0x7ffdd1c4a230 sp 0x7ffdd1c4a220\nREAD of size 8 at 0x7ffdd1c4a310 thread T0\n    #0 0x55e418a16a1d in UPSWeightedRandomPolicy::recover_one_server(EndpointAddress const*) /sourcecode/src/nameservice/UpstreamPolicies.cc:584\n    #1 0x55e418a02e69 in fuzzloop /dockerin/fuzz_drivers/tf1729655247791nkbs.cpp:19\n    #2 0x55e418bcd869 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x55e418a02978 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7fc4167acd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7fc4167ace3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x55e418a02ac4 in _start (/dockerin/fuzz_drivers/tf1729655247791nkbs.out+0x377ac4)\n\nAddress 0x7ffdd1c4a310 is located in stack of thread T0 at offset 128 in frame\n    #0 0x55e418a02b98 in fuzzloop /dockerin/fuzz_drivers/tf1729655247791nkbs.cpp:15\n\n  This frame has 5 object(s):\n    [48, 49) '<unknown>'\n    [64, 120) 'params' (line 17) <== Memory access at offset 128 overflows this variable\n    [160, 192) '<unknown>'\n    [224, 376) 'addr' (line 18)\n    [448, 768) 'policy' (line 16)\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-overflow /sourcecode/src/nameservice/UpstreamPolicies.cc:584 in UPSWeightedRandomPolicy::recover_one_server(EndpointAddress const*)\nShadow bytes around the buggy address:\n  0x10003a381410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10003a381420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10003a381430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10003a381440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10003a381450: 00 00 f1 f1 f1 f1 f1 f1 f8 f2 00 00 00 00 00 00\n=>0x10003a381460: 00 f2[f2]f2 f2 f2 f8 f8 f8 f8 f2 f2 f2 f2 00 00\n  0x10003a381470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10003a381480: 00 f2 f2 f2 f2 f2 f2 f2 f2 f2 00 00 00 00 00 00\n  0x10003a381490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10003a3814a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10003a3814b0: 00 00 f3 f3 f3 f3 f3 f3 f3 f3 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "invalid-posix-memalign-alignment", "B": "out-of-memory", "C": "stack-buffer-overflow", "D": "allocation-size-too-big", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==563637==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffd1e7c0650 at pc 0x561b87197e98 bp 0x7ffd1e7c0570 sp 0x7ffd1e7c0560\nREAD of size 8 at 0x7ffd1e7c0650 thread T0\n    #0 0x561b87197e97 in UPSWeightedRandomPolicy::fuse_one_server(EndpointAddress const*) /sourcecode/src/nameservice/UpstreamPolicies.cc:596\n    #1 0x561b87182e69 in fuzzloop /dockerin/fuzz_drivers/tf1729655487316bfna.cpp:19\n    #2 0x561b8734d869 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #3 0x561b87182978 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #4 0x7f76362acd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #5 0x7f76362ace3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #6 0x561b87182ac4 in _start (/dockerin/fuzz_drivers/tf1729655487316bfna.out+0x377ac4)\n\nAddress 0x7ffd1e7c0650 is located in stack of thread T0 at offset 128 in frame\n    #0 0x561b87182b98 in fuzzloop /dockerin/fuzz_drivers/tf1729655487316bfna.cpp:15\n\n  This frame has 5 object(s):\n    [48, 49) '<unknown>'\n    [64, 120) 'params' (line 17) <== Memory access at offset 128 overflows this variable\n    [160, 192) '<unknown>'\n    [224, 376) 'addr' (line 18)\n    [448, 768) 'policy' (line 16)\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-overflow /sourcecode/src/nameservice/UpstreamPolicies.cc:596 in UPSWeightedRandomPolicy::fuse_one_server(EndpointAddress const*)\nShadow bytes around the buggy address:\n  0x100023cf0070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100023cf0080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100023cf0090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100023cf00a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100023cf00b0: 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1 f1 f1\n=>0x100023cf00c0: f8 f2 00 00 00 00 00 00 00 f2[f2]f2 f2 f2 f8 f8\n  0x100023cf00d0: f8 f8 f2 f2 f2 f2 00 00 00 00 00 00 00 00 00 00\n  0x100023cf00e0: 00 00 00 00 00 00 00 00 00 f2 f2 f2 f2 f2 f2 f2\n  0x100023cf00f0: f2 f2 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100023cf0100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x100023cf0110: 00 00 00 00 00 00 00 00 00 00 f3 f3 f3 f3 f3 f3\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "allocation-size-too-big", "B": "stack-buffer-overflow", "C": "out-of-memory", "D": "unknown-crash", "answer": "B"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==196==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffe54090f80 at pc 0x7fe5ec799c23 bp 0x7ffe54090e80 sp 0x7ffe54090628\nWRITE of size 32752 at 0x7ffe54090f80 thread T0\n    #0 0x7fe5ec799c22 in __interceptor_memset ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:799\n    #1 0x55973ff0ac53 in block_free /sourcecode/lib/facil/fio.c:7840\n    #2 0x55973ff0b6a0 in block_slice_free /sourcecode/lib/facil/fio.c:7935\n    #3 0x55973ff0bf76 in fio_free /sourcecode/lib/facil/fio.c:8097\n    #4 0x55973ff70c52 in http_sse_try_free /sourcecode/lib/facil/http/http_internal.h:181\n    #5 0x55973ff84955 in http_sse_free /sourcecode/lib/facil/http/http.c:1413\n    #6 0x55973fe8698f in fuzzloop /sharedockerin/ta1730101611169jkcz/test_file.c:24\n    #7 0x559740005459 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #8 0x55973fe85ab8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #9 0x7fe5ebe3bd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #10 0x7fe5ebe3be3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #11 0x55973fe85c04 in _start (/sharedockerin/ta1730101611169jkcz/clouditera+0x1dbc04)\n\nAddress 0x7ffe54090f80 is located in stack of thread T0 at offset 0 in frame\n    #0 0x55973fe867d9 in fuzzloop /sharedockerin/ta1730101611169jkcz/test_file.c:14\n\n  This frame has 1 object(s):\n    [48, 88) 'sse' (line 15) <== Memory access at offset 0 partially underflows this variable\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-underflow ../../../../src/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:799 in __interceptor_memset\nShadow bytes around the buggy address:\n  0x10004a80a1a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10004a80a1b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10004a80a1c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10004a80a1d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10004a80a1e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n=>0x10004a80a1f0:[f1]f1 f1 f1 f1 f1 00 00 00 00 00 f3 f3 f3 f3 f3\n  0x10004a80a200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10004a80a210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10004a80a220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10004a80a230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10004a80a240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "unknown-crash", "B": "out-of-memory", "C": "stack-buffer-underflow", "D": "global-buffer-overflow", "answer": "C"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==203==ERROR: AddressSanitizer: unknown-crash on address 0x602000022d91 at pc 0x56551533eb61 bp 0x7fff18d98920 sp 0x7fff18d98910\nREAD of size 8 at 0x602000022d91 thread T0\n    #0 0x56551533eb60 in uint8korr /sourcecode/src/protocol/mysql_byteorder.h:58\n    #1 0x56551533f3cb in decode_length_safe /sourcecode/src/protocol/mysql_byteorder.c:61\n    #2 0x56551533f592 in decode_string /sourcecode/src/protocol/mysql_byteorder.c:77\n    #3 0x56551533e73c in fuzzloop /sharedockerin/ta1729664330266xzik/test_file.cpp:22\n    #4 0x565515347f59 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #5 0x56551533e3a8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #6 0x7f99e539fd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #7 0x7f99e539fe3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #8 0x56551533e4f4 in _start (/sharedockerin/ta1729664330266xzik/clouditera+0xf4f4)\n\n0x602000022d98 is located 0 bytes to the right of 8-byte region [0x602000022d90,0x602000022d98)\nallocated by thread T0 here:\n    #0 0x7f99e5fc6887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x56551534816c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: unknown-crash /sourcecode/src/protocol/mysql_byteorder.h:58 in uint8korr\nShadow bytes around the buggy address:\n  0x0c047fffc560: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fffc570: fa fa fd fa fa fa fd fd fa fa fd fa fa fa fd fd\n  0x0c047fffc580: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fffc590: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fffc5a0: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fd\n=>0x0c047fffc5b0: fa fa[00]fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fffc5c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fffc5d0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fffc5e0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fffc5f0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fffc600: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "heap-buffer-overflow", "B": "allocation-size-too-big", "C": "calloc parameters overflow", "D": "unknown-crash", "answer": "D"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==203==ERROR: AddressSanitizer: unknown-crash on address 0x602000004b11 at pc 0x556c194f6b3d bp 0x7ffec82fcbb0 sp 0x7ffec82fcba0\nREAD of size 8 at 0x602000004b11 thread T0\n    #0 0x556c194f6b3c in uint8korr /sourcecode/src/protocol/mysql_byteorder.h:58\n    #1 0x556c194f73a7 in decode_length_safe /sourcecode/src/protocol/mysql_byteorder.c:61\n    #2 0x556c194f672e in fuzzloop /sharedockerin/ta1729664329765ysdw/test_file.cpp:24\n    #3 0x556c194fff29 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #4 0x556c194f63a8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #5 0x7f240b07cd8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #6 0x7f240b07ce3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #7 0x556c194f64f4 in _start (/sharedockerin/ta1729664329765ysdw/clouditera+0xf4f4)\n\n0x602000004b18 is located 0 bytes to the right of 8-byte region [0x602000004b10,0x602000004b18)\nallocated by thread T0 here:\n    #0 0x7f240bca3887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x556c1950013c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: unknown-crash /sourcecode/src/protocol/mysql_byteorder.h:58 in uint8korr\nShadow bytes around the buggy address:\n  0x0c047fff8910: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd\n  0x0c047fff8920: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd\n  0x0c047fff8930: fa fa fd fd fa fa fd fd fa fa fd fa fa fa fd fd\n  0x0c047fff8940: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd\n  0x0c047fff8950: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd\n=>0x0c047fff8960: fa fa[00]fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8970: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8980: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8990: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff89a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff89b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "unknown-crash", "B": "allocation-size-too-big", "C": "stack-buffer-overflow", "D": "stack-buffer-underflow", "answer": "A"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==311==ERROR: AddressSanitizer: unknown-crash on address 0x60e000010c8e at pc 0x5615bfb94828 bp 0x7ffc818530e0 sp 0x7ffc818530d0\nREAD of size 8 at 0x60e000010c8e thread T0\n    #0 0x5615bfb94827 in uint8korr /sourcecode/src/protocol/mysql_byteorder.h:58\n    #1 0x5615bfb95092 in decode_length_safe /sourcecode/src/protocol/mysql_byteorder.c:61\n    #2 0x5615bfb95259 in decode_string /sourcecode/src/protocol/mysql_byteorder.c:77\n    #3 0x5615bfb93054 in parse_column_def_packet /sourcecode/src/protocol/mysql_parser.c:425\n    #4 0x5615bfb8e2ba in mysql_parser_parse /sourcecode/src/protocol/mysql_parser.c:81\n    #5 0x5615bfb8c77b in fuzzloop /sharedockerin/ta1729664327849pfow/test_file.cpp:21\n    #6 0x5615bfb9dc19 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #7 0x5615bfb8c448 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #8 0x7facca366d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #9 0x7facca366e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #10 0x5615bfb8c594 in _start (/sharedockerin/ta1729664327849pfow/clouditera+0x19594)\n\n0x60e000010c95 is located 0 bytes to the right of 149-byte region [0x60e000010c00,0x60e000010c95)\nallocated by thread T0 here:\n    #0 0x7faccaf8d887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x5615bfb9de2c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: unknown-crash /sourcecode/src/protocol/mysql_byteorder.h:58 in uint8korr\nShadow bytes around the buggy address:\n  0x0c1c7fffa140: fa fa fa fa fa fa fa fa fd fd fd fd fd fd fd fd\n  0x0c1c7fffa150: fd fd fd fd fd fd fd fd fd fd fd fd fa fa fa fa\n  0x0c1c7fffa160: fa fa fa fa fd fd fd fd fd fd fd fd fd fd fd fd\n  0x0c1c7fffa170: fd fd fd fd fd fd fd fa fa fa fa fa fa fa fa fa\n  0x0c1c7fffa180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n=>0x0c1c7fffa190: 00[00]05 fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c1c7fffa1a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c1c7fffa1b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c1c7fffa1c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c1c7fffa1d0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c1c7fffa1e0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "calloc parameters overflow", "B": "SIGABRT", "C": "global-buffer-overflow", "D": "unknown-crash", "answer": "D"}
{"question": "程序触发崩溃，崩溃日志如下：\n=================================================================\n==299==ERROR: AddressSanitizer: unknown-crash on address 0x602000024775 at pc 0x55cab905b263 bp 0x7ffe5cc8c030 sp 0x7ffe5cc8c020\nREAD of size 8 at 0x602000024775 thread T0\n    #0 0x55cab905b262 in uint8korr /sourcecode/src/protocol/mysql_byteorder.h:58\n    #1 0x55cab905bacd in decode_length_safe /sourcecode/src/protocol/mysql_byteorder.c:61\n    #2 0x55cab905bc94 in decode_string /sourcecode/src/protocol/mysql_byteorder.c:77\n    #3 0x55cab9059596 in parse_column_def_packet /sourcecode/src/protocol/mysql_parser.c:410\n    #4 0x55cab9054cf5 in mysql_parser_parse /sourcecode/src/protocol/mysql_parser.c:81\n    #5 0x55cab906b087 in protocol::MySQLResponse::decode_packet(unsigned char const*, unsigned long) /sourcecode/src/protocol/MySQLMessage.cc:623\n    #6 0x55cab8ffd6ae in fuzzloop /sharedockerin/ta1729664328007pfbx/test_file.cpp:19\n    #7 0x55cab90a1929 in fuzzFunction /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:54\n    #8 0x55cab8ffd2b8 in main /home/clouditera/workdir-engine_c/betafuzz/srap/wrapentry.c:78\n    #9 0x7f0f05d35d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f)\n    #10 0x7f0f05d35e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f)\n    #11 0x55cab8ffd404 in _start (/sharedockerin/ta1729664328007pfbx/clouditera+0x109404)\n\n0x60200002477c is located 0 bytes to the right of 12-byte region [0x602000024770,0x60200002477c)\nallocated by thread T0 here:\n    #0 0x7f0f0695c887 in __interceptor_malloc ../../../../src/libsanitizer/asan/asan_malloc_linux.cpp:145\n    #1 0x55cab90a1b3c in BetaWmalloc /home/clouditera/workdir-engine_c/betafuzz/srap/wrapsystem.c:88\n\nSUMMARY: AddressSanitizer: unknown-crash /sourcecode/src/protocol/mysql_byteorder.h:58 in uint8korr\nShadow bytes around the buggy address:\n  0x0c047fffc890: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fffc8a0: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fffc8b0: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fffc8c0: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fffc8d0: fa fa fd fa fa fa 02 fa fa fa fd fa fa fa fd fa\n=>0x0c047fffc8e0: fa fa fd fa fa fa fd fa fa fa fd fa fa fa[00]04\n  0x0c047fffc8f0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fffc900: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fffc910: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fffc920: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fffc930: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n崩溃类型是什么？", "A": "stack-buffer-overflow", "B": "unknown-crash", "C": "heap-buffer-overflow", "D": "memcpy-param-overlap", "answer": "B"}
